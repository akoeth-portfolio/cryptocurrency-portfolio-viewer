[{"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/overview/Twenty4hChangeInvestmentTotal.js":"1","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/overview/OverviewCurrencies.js":"2","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/overview/Twenty4hChangeByCurrency.js":"3","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/charts/TotalChartDiagramm.js":"4","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/charts/Twenty4hChange.js":"5","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/index.js":"6","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/auxiliary/auxiliaryUserData.js":"7","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/layout/Landing.js":"8","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/layout/Alert.js":"9","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/auth/Login.js":"10","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/input/AddCrypto.js":"11","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/positions/PositionChart.js":"12","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/positions/PositionChartDiagram.js":"13","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/utils/setAuthToken.js":"14","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/navbar/Menu.js":"15","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/overview/OverviewTotal.js":"16","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/overview/Twenty4hChangeInvestmentByCurrencies.js":"17","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/actions/currencies.js":"18","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/positions/Position.js":"19","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/actions/positions.js":"20","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/input/DeductCrypto.js":"21","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/navbar/AccountIcon.js":"22","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/auxiliary/auxiliaryCryptoData.js":"23","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/actions/user.js":"24","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/charts/TotalChart.js":"25","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/auth/Register.js":"26","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/overview/Overview.js":"27","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/navbar/Navbar.js":"28","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/App.js":"29","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/actions/auth.js":"30","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/charts/SparkLine.js":"31","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/charts/SparkLineCharts.js":"32","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/navbar/Fiat.js":"33","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/auxiliary/auxiliaryDateData.js":"34"},{"size":485,"mtime":1609882749328,"results":"35","hashOfConfig":"36"},{"size":7359,"mtime":1610759465140,"results":"37","hashOfConfig":"36"},{"size":1528,"mtime":1610759506261,"results":"38","hashOfConfig":"36"},{"size":5813,"mtime":1610411440640,"results":"39","hashOfConfig":"36"},{"size":1301,"mtime":1610327550686,"results":"40","hashOfConfig":"36"},{"size":197,"mtime":1609170003662,"results":"41","hashOfConfig":"36"},{"size":641,"mtime":1609170003658,"results":"42","hashOfConfig":"36"},{"size":5451,"mtime":1610757802825,"results":"43","hashOfConfig":"36"},{"size":304,"mtime":1609170003658,"results":"44","hashOfConfig":"36"},{"size":1764,"mtime":1609170003658,"results":"45","hashOfConfig":"36"},{"size":4989,"mtime":1610564214159,"results":"46","hashOfConfig":"36"},{"size":947,"mtime":1609170003662,"results":"47","hashOfConfig":"36"},{"size":1026,"mtime":1609170003662,"results":"48","hashOfConfig":"36"},{"size":453,"mtime":1609170003662,"results":"49","hashOfConfig":"36"},{"size":745,"mtime":1609170003658,"results":"50","hashOfConfig":"36"},{"size":3621,"mtime":1610759606501,"results":"51","hashOfConfig":"36"},{"size":1756,"mtime":1610759388716,"results":"52","hashOfConfig":"36"},{"size":6775,"mtime":1610751067073,"results":"53","hashOfConfig":"36"},{"size":3446,"mtime":1609624366781,"results":"54","hashOfConfig":"36"},{"size":357,"mtime":1610555880309,"results":"55","hashOfConfig":"36"},{"size":4644,"mtime":1609370347370,"results":"56","hashOfConfig":"36"},{"size":307,"mtime":1609170003658,"results":"57","hashOfConfig":"36"},{"size":5599,"mtime":1610630700128,"results":"58","hashOfConfig":"36"},{"size":433,"mtime":1609170003658,"results":"59","hashOfConfig":"36"},{"size":1679,"mtime":1609544630204,"results":"60","hashOfConfig":"36"},{"size":2228,"mtime":1609170003658,"results":"61","hashOfConfig":"36"},{"size":4613,"mtime":1610757883609,"results":"62","hashOfConfig":"36"},{"size":1068,"mtime":1610403873911,"results":"63","hashOfConfig":"36"},{"size":6395,"mtime":1610760399634,"results":"64","hashOfConfig":"36"},{"size":957,"mtime":1609170003658,"results":"65","hashOfConfig":"36"},{"size":2953,"mtime":1610555375921,"results":"66","hashOfConfig":"36"},{"size":1070,"mtime":1610396805951,"results":"67","hashOfConfig":"36"},{"size":349,"mtime":1610403881087,"results":"68","hashOfConfig":"36"},{"size":288,"mtime":1610667840005,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"1m2r51w",{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"72"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"72"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"92"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"72"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"92"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"72"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"72"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"116"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/overview/Twenty4hChangeInvestmentTotal.js",[],["158","159"],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/overview/OverviewCurrencies.js",["160","161"],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/overview/Twenty4hChangeByCurrency.js",[],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/charts/TotalChartDiagramm.js",["162","163","164","165"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport Twenty4hChange from \"./Twenty4hChange\";\nimport { Line } from \"react-chartjs-2\";\nimport { cumulativeValueInvestment } from \"../../auxiliary/auxiliaryCryptoData\";\n\nfunction TotalChartDiagramm({\n  positions,\n  currentMarketChart,\n  fiat,\n  originAndCurrency,\n  duration,\n}) {\n  const [nameArray, setNameArray] = useState(\"\");\n\n  const [labelStr, setLabelStr] = useState(\"\");\n\n  const [resultArray, setResultArray] = useState([]);\n\n  const [timeStampArray, setTimeStampArray] = useState([]);\n\n  const [origin, currency] = originAndCurrency;\n\n  useEffect(() => {\n    switch (origin) {\n      case \"initial_value\":\n        setNameArray(\"initialValueArray\");\n        setLabelStr(`Price in ${fiat}`);\n        break;\n      case \"current_value\":\n        setNameArray(\"currentValueArray\");\n        setLabelStr(`Price in ${fiat}`);\n        break;\n      case \"balance\":\n        setNameArray(\"balanceArray\");\n        setLabelStr(`Price in ${fiat}`);\n        break;\n      case \"roi\":\n        setNameArray(\"roiArray\");\n        setLabelStr(`ROI in %`);\n        break;\n      default:\n    }\n  }, []);\n\n  useEffect(() => {\n    const currenciesTotalObjectsArray = [];\n\n    const timeStamps = [];\n\n    let currencyArr = [];\n\n    currency === \"all_currencies\"\n      ? (currencyArr = Object.keys(currentMarketChart))\n      : currencyArr.push(currency);\n\n    // the following 2 functions push objects with initialValueArray, currentValueArray, balanceArray, roiArray and timeStampArray for every currency\n    // in currenciesTotalObjectsArray\n    const totalValueInvestment = (obj) => {\n      currenciesTotalObjectsArray.push(obj);\n    };\n\n    currencyArr.forEach((currency) =>\n      totalValueInvestment(\n        cumulativeValueInvestment(\n          positions,\n          currentMarketChart[currency],\n          currencyArr,\n          currency\n        )\n      )\n    );\n\n    // not all currency price arrays as returned by the api have the same length --> this results in the last values of the calculated total price array being too low\n    // this makes sure that all the indivual currency arrays from which totals are beeing calculated have the same length\n    // (which corresponds with the length of the shortest array)\n    let lengthArr = [];\n\n    // puts length of each array in object in array\n    currenciesTotalObjectsArray.forEach(\n      (obj, index) => (lengthArr[index] = obj.initialValueArray.length)\n    );\n\n    // gets the shortest array length\n    const minLength = Math.min(...lengthArr);\n\n    // sets length of arrays in object to the shortest length\n    currenciesTotalObjectsArray.map((obj) => {\n      for (const [key, value] of Object.entries(obj)) {\n        value.length = minLength;\n      }\n    });\n\n    // retrieves timeStamps from array of objects with initialValueArray, currentValueArray, balanceArray, roiArray and timeStampArray for every currency\n    // those objects are beeing created in cumulativeValueInvestment() @auxiliaryCryptoData.js\n    // some of these arrays contain empty slots (for details see comments in cumulativeValueInvestment() in @auxiliaryCryptoData.js)\n    // those have to be removed, else the line diagrams display a lot of null values at the beginning\n    // hence filter is employed\n    currenciesTotalObjectsArray.forEach((obj) => {\n      const filtered = obj.timeStampArray.filter((el) => el !== undefined);\n      filtered.forEach((el, index) => (timeStamps[index] = el));\n    });\n\n    // the following code sums up initial_value, current_value, balance of every individual currency so that the totals of these attributes can be displayed in a chart\n    // it also calculates the development of roi over time\n    const resArray = new Array(timeStamps.length).fill(0);\n\n    if (nameArray) {\n      const initValResArray = new Array(timeStamps.length).fill(0);\n      const currValResArray = new Array(timeStamps.length).fill(0);\n\n      currenciesTotalObjectsArray.forEach((obj) => {\n        if (nameArray === \"roiArray\") {\n          obj.initialValueArray.forEach(\n            (el, index) => (initValResArray[index] += el)\n          );\n          obj.currentValueArray.forEach(\n            (el, index) => (currValResArray[index] += el)\n          );\n          obj.roiArray.forEach(\n            (el, index) =>\n              (resArray[index] =\n                (currValResArray[index] * 100) / initValResArray[index] - 100)\n          );\n        } else {\n          if (currency === \"all_currencies\") {\n            obj[nameArray].forEach((el, index) => (resArray[index] += el));\n          } else {\n            // this removes undefined elements from arrays (why are there undefined elements in some arrays? see explanation above for empty slots in timeStampArray)\n            const filtered = obj[nameArray].filter((el) => el !== undefined);\n            filtered.forEach((el, index) => (resArray[index] += el));\n          }\n        }\n      });\n    }\n    setResultArray(resArray);\n    setTimeStampArray(timeStamps);\n  }, [nameArray, currentMarketChart, duration]);\n\n  return (\n    <Fragment>\n      <Twenty4hChange dataArray={resultArray} />\n      <div>\n        <Line\n          data={{\n            labels: timeStampArray,\n            datasets: [\n              {\n                label: labelStr,\n                data: resultArray,\n              },\n            ],\n          }}\n          // width={500}\n          height={500}\n          options={{\n            maintainAspectRatio: false,\n            scales: {\n              yAxes: [\n                {\n                  scaleLabel: {\n                    display: true,\n                    labelString: labelStr,\n                  },\n                },\n              ],\n            },\n          }}\n        />\n      </div>\n    </Fragment>\n  );\n}\n\nexport default TotalChartDiagramm;\n","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/charts/Twenty4hChange.js",["166"],"import React, { useState, useEffect } from \"react\";\n\nconst Twenty4hChange = ({ dataArray }) => {\n  const [change, setChange] = useState(0);\n  const [twentyFourHoursMax, setTwentyFourHoursMax] = useState(0);\n  const [twentyFourHoursMin, setTwentyFourHoursMin] = useState(0);\n\n  useEffect(() => {\n    // array has NaN in the end which have to be removed because else change = NaN\n    const arr = dataArray.filter((el) => !isNaN(el));\n    setChange(dataArray[arr.length - 1] - arr[0]);\n    setTwentyFourHoursMax(get24hMax());\n    setTwentyFourHoursMin(get24hMin());\n  }, [dataArray]);\n\n  const get24hMax = () => {\n    const arraySorted = dataArray.sort(function (a, b) {\n      return b - a;\n    });\n\n    return arraySorted[0];\n  };\n\n  const get24hMin = () => {\n    const arrSorted = dataArray.sort(function (a, b) {\n      return a - b;\n    });\n\n    return arrSorted[0];\n  };\n\n  return (\n    <div className=\"twenty_four_hour_charts_container\">\n      <div\n        style={{\n          color: change > 0 ? \"green\" : \"red\",\n        }}\n      >\n        change: {change.toFixed(2)} &euro;\n      </div>\n      <div className=\"crypto_24h_change\">max: {twentyFourHoursMax} &euro;</div>\n      <div className=\"crypto_24h_change\">min: {twentyFourHoursMin} &euro;</div>\n    </div>\n  );\n};\n\nexport default Twenty4hChange;\n",["167","168"],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/index.js",[],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/auxiliary/auxiliaryUserData.js",[],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/layout/Landing.js",["169"],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/layout/Alert.js",[],["170","171"],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/auth/Login.js",[],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/input/AddCrypto.js",[],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/positions/PositionChart.js",["172"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { getMarketCharts } from \"../../actions/currencies\";\nimport PositionChartDiagram from \"./PositionChartDiagram\";\n\nconst PositionChart = () => {\n  let data = useLocation();\n\n  const [marketChart, setMarketChart] = useState({});\n\n  useEffect(() => {\n    const updateStates = async () => {\n      const chartData = await getMarketCharts(\n        data.state.currency,\n        data.state.date_of_purchase\n      );\n      setMarketChart(chartData);\n    };\n\n    updateStates();\n  }, []);\n\n  function isEmpty(obj) {\n    return Object.keys(obj).length === 0;\n  }\n\n  return isEmpty(marketChart) ? (\n    <div>Loading ...</div>\n  ) : (\n    <div>\n      <Fragment>\n        <PositionChartDiagram\n          marketChart={marketChart}\n          amount={data.state.amount}\n        />\n      </Fragment>\n    </div>\n  );\n};\n\nexport default PositionChart;\n","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/positions/PositionChartDiagram.js",[],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/utils/setAuthToken.js",[],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/navbar/Menu.js",[],["173","174"],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/overview/OverviewTotal.js",["175","176"],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/overview/Twenty4hChangeInvestmentByCurrencies.js",[],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/actions/currencies.js",[],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/positions/Position.js",["177","178"],"import React, { Fragment, useEffect } from \"react\";\nimport { getCurrencyPositions } from \"../../auxiliary/auxiliaryCryptoData\";\nimport { useLocation } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\n\nfunction Position() {\n  const data = useLocation();\n\n  useEffect(() => {\n    if (data.current_price != undefined) {\n      sessionStorage.setItem(\"crypto_inv_current_price\", data.current_price);\n    }\n  }, []);\n\n  const transformDate = (val) => {\n    const date = new Date(val);\n    const day =\n      date.getDate() < 10 ? \"0\" + date.getDate() : \"\" + date.getDate();\n    const month = date.toLocaleString(\"default\", { month: \"long\" });\n    const year = date.getFullYear();\n    const dateString = `${day}. ${month} ${year}`;\n    return dateString;\n  };\n\n  const getSortedPositions = () => {\n    const positionsArray = getCurrencyPositions(\n      data.state.user,\n      data.state.currency\n    );\n    const sortedArray = positionsArray.sort(\n      (a, b) => Date.parse(b.date_of_purchase) - Date.parse(a.date_of_purchase)\n    );\n    return sortedArray;\n  };\n\n  return (\n    <Fragment>\n      <div>\n        current price per coin:\n        {data.current_price ||\n          sessionStorage.getItem(\"crypto_inv_current_price\")}{\" \"}\n        {data.state.user.positions[0].fiat_currency}\n      </div>\n      <div className=\"row\">\n        {getSortedPositions().map((position) => {\n          return (\n            <Link\n              id=\"position\"\n              to={{\n                pathname: \"/position_chart\",\n                state: {\n                  currency: position.crypto_currency,\n                  date_of_purchase: position.date_of_purchase,\n                  amount: position.amount,\n                },\n              }}\n            >\n              <div className=\"col\">amount: {position.amount}</div>\n              <div className=\"col\">\n                price per coin at time of purchase:\n                {(position.price / position.amount).toFixed(2)}\n              </div>\n              <div className=\"col\">\n                purchase date:\n                {/* {position.date_of_purchase.split(\"T\").slice(0, 1).join(\"\")} */}\n                {transformDate(position.date_of_purchase)}\n              </div>\n              <div className=\"col\">\n                initial value:\n                {position.price}\n                {position.fiat_currency}\n              </div>\n              <div className=\"col\">\n                current value:\n                {data.current_price === undefined\n                  ? (\n                      sessionStorage.getItem(\"crypto_inv_current_price\") *\n                      position.amount\n                    ).toFixed(2)\n                  : (data.current_price * position.amount).toFixed(2)}\n                {position.fiat_currency}\n              </div>\n\n              <div className=\"col\">\n                balance:\n                {data.current_price === undefined\n                  ? (\n                      sessionStorage.getItem(\"crypto_inv_current_price\") *\n                        position.amount -\n                      position.price\n                    ).toFixed(2)\n                  : (\n                      data.current_price * position.amount -\n                      position.price\n                    ).toFixed(2)}\n                {position.fiat_currency}\n              </div>\n            </Link>\n          );\n        })}\n      </div>\n    </Fragment>\n  );\n}\n\nexport default Position;\n",["179","180"],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/actions/positions.js",[],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/input/DeductCrypto.js",["181"],"import React, { useState, useEffect } from \"react\";\nimport { getAmount } from \"../../auxiliary/auxiliaryCryptoData\";\nimport { getCurrenciesNames } from \"../../auxiliary/auxiliaryCryptoData\";\nimport { getInitialValue } from \"../../auxiliary/auxiliaryCryptoData\";\n\n// import { getLatestCryptoPrice } from \"../../actions/currencies\";\n\nconst DeductCrypto = ({ user, makePosition, loadUserObj, triggerAlert }) => {\n  const [formData, setFormData] = useState({\n    crypto_currency: \"\",\n    amount: \"\",\n    date_of_purchase: \"\",\n  });\n\n  const { crypto_currency, amount, date_of_purchase } = formData;\n\n  const [currencyNames, setCurrencyNames] = useState([]);\n\n  useEffect(() => {\n    const namesArr = getCurrenciesNames(user);\n    namesArr.unshift(\"\");\n    setCurrencyNames(namesArr);\n  }, []);\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n\n    // user input validation\n    if (!crypto_currency) {\n      triggerAlert(\"Please select a cryptocurrency\", \"danger\");\n      return;\n    }\n\n    const currentAmount = getAmount(user, crypto_currency);\n\n    if (amount > currentAmount) {\n      triggerAlert(\n        `You have only ${currentAmount} unit(s) of this currency`,\n        \"danger\"\n      );\n      return;\n    }\n\n    // value of the amount (in fiat) to be deducted from the amount of a crypto currency in the portfolio is calculated based on the median value\n    // of all positions of this currency\n    const median_price =\n      (getInitialValue(user, crypto_currency) /\n        getAmount(user, crypto_currency)) *\n      amount;\n\n    formData.price = median_price * -1;\n\n    // amount is beeing turned into negative so the corresponding position has a negative amount property\n    formData.amount = parseFloat(formData.amount) * -1;\n    formData.fiat_currency = user.positions[0].fiat_currency;\n\n    // formData.fiat_currency = e.target.querySelector(\n    //   \"#deduct_select_fiat\"\n    // ).value;\n    // formData.price *= -1;\n\n    await makePosition(formData);\n    setFormData({\n      crypto_currency: \"\",\n      amount: \"\",\n      date_of_purchase: \"\",\n    });\n    loadUserObj();\n  };\n\n  return (\n    <div className=\"form_container\">\n      <h3 className=\"large text-primary\">Deduct Crypto</h3>\n      <p className=\"lead\">Deduct cryptocurrency from your portfolio</p>\n      <form className=\"form\" onSubmit={(e) => onSubmit(e)}>\n        <div className=\"form-group\">\n          <div className=\"dropdown input_field\">\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n              }}\n            >\n              <div>Select a cryptocurrency</div>\n              <select\n                className=\"btn btn-outline-secondary\"\n                name=\"crypto_currency\"\n                style={{ position: \"absolute\", right: \"0\", width: \"50%\" }}\n                onChange={(e) => onChange(e)}\n              >\n                {currencyNames.map((currencyName) => {\n                  return (\n                    <option value={`${currencyName}`}>{currencyName}</option>\n                  );\n                })}\n              </select>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"form-group\">\n          <input\n            className=\"form-control input_field\"\n            type=\"number\"\n            placeholder=\"Amount\"\n            name=\"amount\"\n            value={amount}\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n\n        {/* <div className=\"input-group input_field\">\n          <input\n            className=\"form-control\"\n            type=\"number\"\n            min=\"1\"\n            step=\"any\"\n            placeholder=\"Value of amount\"\n            name=\"price\"\n            value={price}\n            onChange={(e) => onChange(e)}\n            required\n          />\n          <div className=\"input-group-append\">\n            <select\n              id=\"deduct_select_fiat\"\n              className=\"btn btn-outline-secondary\"\n            >\n              <option value=\"EUR\">EUR</option>\n              <option value=\"USD\">USD</option>\n            </select>\n          </div>\n        </div> */}\n\n        <div className=\"form-group\">\n          <input\n            className=\"form-control input_field\"\n            type=\"date\"\n            name=\"date_of_purchase\"\n            value={date_of_purchase}\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Deduct\" />\n      </form>\n    </div>\n  );\n};\n\nexport default DeductCrypto;\n","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/navbar/AccountIcon.js",["182"],"import React, { Fragment } from \"react\";\nimport Menu from \"./Menu\";\n\nconst AccountIcon = ({ logout, logedin }) => {\n  return (\n    <div id=\"account_nav_item\">\n      account\n      <div id=\"menu\">\n        <Menu logout={logout} logedin={logedin} />\n      </div>\n    </div>\n  );\n};\n\nexport default AccountIcon;\n","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/auxiliary/auxiliaryCryptoData.js",["183","184","185","186"],"export const getCurrenciesNames = (user) => {\n  let currencyArr = [];\n  if (user) {\n    user.positions.map((position) =>\n      currencyArr.push(position.crypto_currency)\n    );\n  }\n\n  // techsith's recommended way to remove duplicates from array (https://www.youtube.com/watch?v=dvPybpgk5Y4)\n\n  return [...new Set(currencyArr)];\n};\n\nexport const getNamesAndCurrentValues = (user, cryptoCurrencies) => {\n  let namesAndValuesObj = {};\n\n  getCurrenciesNames(user).forEach((currencyName) => {\n    namesAndValuesObj[currencyName] = getCurrentValue(\n      user,\n      cryptoCurrencies,\n      currencyName\n    );\n  });\n\n  let res = Object.entries(namesAndValuesObj).sort(function (a, b) {\n    return b[1] - a[1];\n  });\n\n  return res;\n};\n\nexport const getCurrentValue = (user, cryptoCurrencies, currencyName) => {\n  const currentPrice = getCurrentPrice(cryptoCurrencies, currencyName);\n  const amount = getAmount(user, currencyName);\n  const currentValue = currentPrice * amount;\n\n  return currentValue;\n};\n\nexport const getCurrentPrice = (cryptoCurrencies, currencyName) => {\n  if (cryptoCurrencies.data && typeof currencyName === \"string\") {\n    const currentPrice = cryptoCurrencies.data.find(\n      (el) => el.id === currencyName\n    );\n\n    if (currentPrice) return currentPrice.current_price;\n  }\n};\n\nexport const getCurrencyPositions = (user, currencyName) => {\n  if (user.positions) {\n    return user.positions.filter(\n      (position) => position.crypto_currency === currencyName\n    );\n  }\n};\n\nexport const getAmount = (user, currencyName) => {\n  let sum = 0;\n  if (user.positions) {\n    user.positions.map((position) => {\n      if (position.crypto_currency === currencyName) {\n        sum += parseFloat(position.amount);\n      }\n    });\n  }\n\n  return sum;\n};\n\nconst getAmountAndDate = (positions, currencyName) => {\n  // extracts amount of coins, date of purchase and price\n  let AmountAndDateArr = [];\n\n  positions.forEach((el) => {\n    let arrEl = [];\n\n    if (el.crypto_currency === currencyName) {\n      arrEl[0] = Date.parse(el.date_of_purchase);\n      arrEl[1] = parseFloat(el.amount);\n      arrEl[2] = el.price;\n      AmountAndDateArr.push(arrEl);\n    }\n  });\n\n  // sorts AmountAndDateArr by purchase date beginning with the oldest\n  let sort = AmountAndDateArr.sort(function (a, b) {\n    return a[0] - b[0];\n  });\n\n  // adds amount of coins in array so that each amount is the sum of itself + the previous amount\n  for (const element in sort) {\n    element > 0\n      ? (sort[element][1] = sort[element][1] + sort[element - 1][1])\n      : (sort[element][1] = sort[element][1]);\n  }\n\n  // adds price of individual purchases so that each price in array is the sum of itself + the previous amount\n  for (const element in sort) {\n    element > 0\n      ? (sort[element][2] = sort[element][2] + sort[element - 1][2])\n      : (sort[element][2] = sort[element][2]);\n  }\n  return sort;\n};\n\n// returns object (one for each currency) which has various arrays (initialValueArray, currentValueArray etc..)\n// those arrays that are beeing used to display the whole duration from first purchase until present time have all the same length even if a currency had been purchased later\n// if that is the case, an equivalent amount of positions at the beginning of those arrays are undefined\nexport const cumulativeValueInvestment = (\n  positions,\n  marketChart,\n  currencyArr,\n  currency\n) => {\n  let resultObject = {};\n  let initialValueArr = [];\n  let currentValueArr = [];\n  let balanceArr = [];\n  let roiArr = [];\n  let timeStampArr = [];\n\n  // 1st array: getAmountAndDate() returns array with amount, price and date of purchase for each position of a crypro currency\n  // 2nd array: marketChart is array of objects -> each object has initialValueArray, currentValueArray, balanceArray etc. ..\n  if (marketChart) {\n    getAmountAndDate(positions, currency).forEach(\n      ([date_of_purchase, amount, initial_value]) => {\n        marketChart.forEach(([date, price_crypto, timeStamp], index) => {\n          if (date_of_purchase <= date) {\n            currentValueArr[index] = price_crypto * amount;\n            timeStampArr[index] = getTimeStamps(marketChart, index, [\n              date,\n              price_crypto,\n              timeStamp,\n            ]);\n            initialValueArr[index] = initial_value;\n            balanceArr[index] = currentValueArr[index] - initialValueArr[index];\n            roiArr[index] =\n              (currentValueArr[index] * 100) / initialValueArr[index] - 100;\n          }\n        });\n      }\n    );\n  }\n\n  resultObject.initialValueArray = initialValueArr;\n  resultObject.currentValueArray = currentValueArr;\n  resultObject.balanceArray = balanceArr;\n  resultObject.roiArray = roiArr;\n  resultObject.timeStampArray = timeStampArr;\n\n  return resultObject;\n};\n\n// returns duration in days -> from date of first purchase currency until now\n// duration is beeing used in conditional to make sure that x-axis doesn't have too many timestamps (granularity of data returned by API)\nconst checkDuration = (marketChart) =>\n  (marketChart[marketChart.length - 1][0] - marketChart[0][0]) /\n  1000 /\n  (24 * 60 * 60);\n\nconst getTimeStamps = (marketChart, index, array2) => {\n  if (\n    index === 0 || checkDuration(marketChart) < 90\n      ? index % 10 === 0\n      : index % 5 === 0\n  ) {\n    return array2[2];\n  } else {\n    return \" \";\n  }\n};\n\nexport const getInitialValue = (user, currency, fiat) => {\n  let sum = 0;\n  user.positions.map((position) => {\n    if (position.crypto_currency === currency) {\n      sum += position[`price_${fiat.current}`];\n    }\n  });\n  return sum;\n};\n","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/actions/user.js",[],["187","188"],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/charts/TotalChart.js",["189"],"import React, { useEffect } from \"react\";\nimport TotalChartDiagramm from \"./TotalChartDiagramm\";\n\nfunction TotalChart({\n  user,\n  currentMarketChart,\n  toggleView,\n  originAndCurrency,\n  loaded,\n  duration,\n  upDateMarketChartState,\n  logedin,\n}) {\n  useEffect(() => {\n    if (logedin) upDateMarketChartState(\"all_total\");\n  }, [user]);\n\n  return !loaded ? (\n    <div>Loading ...</div>\n  ) : (\n    <div id=\"total_chart_container\">\n      <div id=\"toggle_view\" onClick={toggleView}>\n        go back\n      </div>\n      <div id=\"durations_container\">\n        <div\n          id={duration === \"day\" && \"duration\"}\n          className=\"durations\"\n          onClick={() => upDateMarketChartState(\"day\")}\n        >\n          day\n        </div>\n        <div\n          id={duration === \"week\" && \"duration\"}\n          className=\"durations\"\n          onClick={() => upDateMarketChartState(\"week\")}\n        >\n          week\n        </div>\n        <div\n          id={duration === \"month\" && \"duration\"}\n          className=\"durations\"\n          onClick={() => upDateMarketChartState(\"month\")}\n        >\n          month\n        </div>\n        <div\n          id={duration === \"all_total\" && \"duration\"}\n          className=\"durations\"\n          onClick={() => upDateMarketChartState(\"all_total\")}\n        >\n          all\n        </div>\n      </div>\n      <div>\n        <TotalChartDiagramm\n          user={user}\n          currentMarketChart={currentMarketChart}\n          positions={user.positions}\n          fiat={user.positions[0].fiat_currency}\n          originAndCurrency={originAndCurrency}\n          duration={duration}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default TotalChart;\n",["190","191"],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/auth/Register.js",["192","193"],"import React, { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\n\nconst Register = ({ logedin, signup }) => {\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n    password2: \"\",\n  });\n\n  const { firstname, lastname, email, password, password2 } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    signup(email, password, password2);\n  };\n\n  // if some nasty user enters .../login in url --> redirect to landing page\n  // otherwhise the register form could be displayed to a logged in user\n  if (logedin) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <div className=\"form_container\">\n      <h3 className=\"large text-primary\">Sign Up</h3>\n      <p className=\"lead\">\n        <i className=\"fa fa-user auth_fa-user\"></i> Create your account\n      </p>\n      <form className=\"form\" onSubmit={(e) => onSubmit(e)}>\n        <div className=\"form-group\">\n          <input\n            className=\"form-control input_field\"\n            type=\"email\"\n            placeholder=\"Email Address\"\n            name=\"email\"\n            value={email}\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            className=\"form-control input_field\"\n            type=\"password\"\n            placeholder=\"Password\"\n            name=\"password\"\n            value={password}\n            onChange={(e) => onChange(e)}\n            minLength=\"6\"\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            className=\"form-control input_field\"\n            type=\"password\"\n            placeholder=\"Confirm Password\"\n            name=\"password2\"\n            value={password2}\n            onChange={(e) => onChange(e)}\n            minLength=\"6\"\n            required\n          />\n        </div>\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\n      </form>\n      <p className=\"my-1\">\n        Already have an account? <Link to=\"/login\">Sign In</Link>\n      </p>\n    </div>\n  );\n};\n\nexport default Register;\n","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/overview/Overview.js",["194","195","196","197"],"import React, { useState, useEffect, useRef } from \"react\";\nimport OverviewCurrencies from \"./OverviewCurrencies\";\nimport OverviewTotal from \"./OverviewTotal\";\nimport { getNamesAndCurrentValues } from \"../../auxiliary/auxiliaryCryptoData\";\nimport { getCurrentValue } from \"../../auxiliary/auxiliaryCryptoData\";\nimport { getInitialValue } from \"../../auxiliary/auxiliaryCryptoData\";\n\nconst Overview = ({\n  user,\n  cryptoCurrencies,\n  exchangeRates,\n  logedin,\n  renderOverview,\n  fiat,\n  fiatSymbol,\n  updateOriginAndCurrencyState,\n  toggleView,\n}) => {\n  const [\n    currencyNamesAndCurrentValues,\n    setCurrencyNamesAndCurrentValues,\n  ] = useState([]);\n\n  const [currentValueTotal, setCurrentValueTotal] = useState(0);\n\n  const [totalPurchase, setTotalPurchase] = useState(0);\n\n  useEffect(() => {\n    if (logedin) {\n      const namesAndCurrentValuesArr = getNamesAndCurrentValues(\n        user,\n        cryptoCurrencies\n      );\n\n      setCurrencyNamesAndCurrentValues(namesAndCurrentValuesArr);\n\n      const totalsArray = namesAndCurrentValuesArr.map(\n        ([currencyName, currencyValue]) =>\n          getCurrentValue(user, cryptoCurrencies, currencyName)\n      );\n\n      setCurrentValueTotal(totalsArray.reduce((a, b) => a + b, 0));\n\n      setTotalPurchase(getInitialValuePurchase());\n    }\n  }, [user, cryptoCurrencies, logedin, renderOverview]);\n\n  // these next lines of code preserve the previous currentValue over re-render\n  const prevCurrentValueTotal = useRef(0);\n\n  const prevCurrentValues = useRef({});\n\n  useEffect(() => {\n    prevCurrentValueTotal.current = currentValueTotal;\n    currencyNamesAndCurrentValues.map(([currencyName, currencyValue]) => {\n      const currVal = getCurrentValue(user, cryptoCurrencies, currencyName);\n      prevCurrentValues.current[currencyName] = currVal;\n    });\n  }, [currentValueTotal]);\n\n  // these next lines of code preserve the previous state of fiat (i.e. the fiat user had selected before current\n  const [fiatCurr, setFiatCurr] = useState(\"\");\n\n  const prevFiat = useRef({});\n\n  useEffect(() => {\n    setFiatCurr(fiat.current);\n  }, [fiat.current]);\n\n  useEffect(() => {\n    prevFiat.current = fiatCurr;\n  }, [fiatCurr]);\n\n  //\n\n  const getInitialValuePurchase = () => {\n    let sum = 0;\n    if (user)\n      user.positions.forEach((position) => {\n        sum += position[`price_${fiat.current}`];\n      });\n    return sum;\n  };\n\n  const get24hourChangeByCurrency = (currencyName) => {\n    let returnValue = 0;\n\n    if (cryptoCurrencies.data) {\n      cryptoCurrencies.data.forEach((el) => {\n        if (el.id === currencyName) {\n          returnValue = el.price_change_percentage_24h;\n        }\n      });\n    }\n    return returnValue;\n  };\n\n  const get24hourChangeTotal = () => {\n    let sum = 0;\n    currencyNamesAndCurrentValues.forEach((arr) => {\n      sum +=\n        (get24hourChangeByCurrency(arr[0]) *\n          getCurrentValue(user, cryptoCurrencies, arr[0])) /\n        100;\n    });\n\n    return sum;\n  };\n\n  const handleClick = (origin, currency) => {\n    toggleView();\n    updateOriginAndCurrencyState(origin, currency);\n  };\n\n  return (\n    <div>\n      <table className=\"table table-striped\">\n        <thead>\n          <tr>\n            <th scope=\"col\">Crypto</th>\n            <th scope=\"col\">Amount</th>\n            <th scope=\"col\">Initial Value</th>\n            <th scope=\"col\">Current Value</th>\n            <th scope=\"col\">Profit</th>\n            <th scope=\"col\">ROI</th>\n            <th scope=\"col\">Last 7 Days</th>\n          </tr>\n        </thead>\n        <OverviewCurrencies\n          user={user}\n          cryptoCurrencies={cryptoCurrencies}\n          exchangeRates={exchangeRates}\n          currencyNamesAndCurrentValues={currencyNamesAndCurrentValues}\n          prevCurrentValues={prevCurrentValues}\n          logedin={logedin}\n          fiat={fiat}\n          prevFiat={prevFiat}\n          fiatSymbol={fiatSymbol}\n          getInitialValue={getInitialValue}\n          get24hourChangeByCurrency={get24hourChangeByCurrency}\n          getCurrentValue={getCurrentValue}\n          handleClick={handleClick}\n        />\n        <OverviewTotal\n          user={user}\n          cryptoCurrencies={cryptoCurrencies}\n          exchangeRates={exchangeRates}\n          totalPurchase={totalPurchase}\n          currentValueTotal={currentValueTotal}\n          prevCurrentValueTotal={prevCurrentValueTotal}\n          fiat={fiat}\n          prevFiat={prevFiat}\n          fiatSymbol={fiatSymbol}\n          get24hourChangeTotal={get24hourChangeTotal}\n          handleClick={handleClick}\n        />\n      </table>\n    </div>\n  );\n};\n\nexport default Overview;\n","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/navbar/Navbar.js",[],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/App.js",["198","199"],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/actions/auth.js",[],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/charts/SparkLine.js",["200"],"import React, { useState, useEffect } from \"react\";\nimport SparkLineCharts from \"./SparkLineCharts\";\nimport { getAmount } from \"../../auxiliary/auxiliaryCryptoData\";\n\nconst SparkLine = ({ user, cryptoCurrencies, currencyName }) => {\n  const [sparkLineData, setSparkLineData] = useState([]);\n\n  useEffect(() => {\n    getSparkLineData();\n  }, [cryptoCurrencies]);\n\n  const getSparkLineData = () => {\n    // not all 7d price arrays as returned by the api have the same length --> this results in the last values of the calculated total price array being too low\n    // this makes sure that all the indivual currency arrays from which totals are beeing calculated have the same length\n    // (which corresponds with the length of the shortest array)\n    // console.log(\"user\");\n    // console.log(user);\n    // console.log(\"cryptoCurrencies\");\n    // console.log(cryptoCurrencies);\n\n    if (\n      Object.keys(cryptoCurrencies).length > 0 &&\n      cryptoCurrencies.data.length > 0\n    ) {\n      let lengthArr = [];\n\n      // gets lenghts of 7d price array\n      cryptoCurrencies.data.forEach((obj, index) => {\n        lengthArr[index] = obj.sparkline_in_7d.price.length;\n      });\n\n      // get length of shortest 7d price array\n      const minLength = Math.min(...lengthArr);\n\n      // get length of longest 7d price array\n      const maxLength = Math.max(...lengthArr);\n\n      // sets array sparkLineCurrentValues to length of longest 7d price array\n      let sparkLineCurrentValues = new Array(maxLength).fill(0);\n\n      if (Object.keys(cryptoCurrencies).length > 0) {\n        cryptoCurrencies.data.forEach((obj) => {\n          // individual currency\n          if (currencyName) {\n            if (obj.id === currencyName) {\n              obj.sparkline_in_7d.price.forEach((price, index) => {\n                sparkLineCurrentValues[index] +=\n                  price * getAmount(user, obj.id);\n              });\n            }\n            // total\n          } else {\n            obj.sparkline_in_7d.price.forEach((price, index) => {\n              sparkLineCurrentValues[index] += price * getAmount(user, obj.id);\n            });\n          }\n        });\n\n        // sets result array of sparkline value to the length of the shortes 7d price array\n        sparkLineCurrentValues.length = minLength;\n\n        setSparkLineData(sparkLineCurrentValues);\n      }\n    }\n  };\n\n  const getX_axisArray = () => {\n    let Xaxis = [];\n    if (sparkLineData) {\n      Xaxis = new Array(sparkLineData.length).fill(\"\");\n    }\n    return Xaxis;\n  };\n\n  const checkLineColor = () => {\n    if (sparkLineData) {\n      return sparkLineData[sparkLineData.length - 1] - sparkLineData[0] > 0\n        ? \"green\"\n        : \"red\";\n    }\n  };\n\n  return (\n    <div style={{ width: \"10rem\" }}>\n      <SparkLineCharts\n        sparkLineData={sparkLineData}\n        getX_axisArray={getX_axisArray}\n        checkLineColor={checkLineColor}\n      />\n    </div>\n  );\n};\n\nexport default SparkLine;\n","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/charts/SparkLineCharts.js",[],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/navbar/Fiat.js",[],["201","202"],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/auxiliary/auxiliaryDateData.js",[],["203","204"],{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","severity":1,"message":"210","line":48,"column":6,"nodeType":"211","endLine":48,"endColumn":37,"suggestions":"212"},{"ruleId":"209","severity":1,"message":"213","line":52,"column":6,"nodeType":"211","endLine":52,"endColumn":20,"suggestions":"214"},{"ruleId":"209","severity":1,"message":"215","line":43,"column":6,"nodeType":"211","endLine":43,"endColumn":8,"suggestions":"216"},{"ruleId":"217","severity":1,"message":"218","line":87,"column":43,"nodeType":"219","messageId":"220","endLine":87,"endColumn":45},{"ruleId":"221","severity":1,"message":"222","line":88,"column":19,"nodeType":"223","messageId":"224","endLine":88,"endColumn":22},{"ruleId":"209","severity":1,"message":"225","line":137,"column":6,"nodeType":"211","endLine":137,"endColumn":47,"suggestions":"226"},{"ruleId":"209","severity":1,"message":"227","line":14,"column":6,"nodeType":"211","endLine":14,"endColumn":17,"suggestions":"228"},{"ruleId":"205","replacedBy":"229"},{"ruleId":"207","replacedBy":"230"},{"ruleId":"231","severity":1,"message":"232","line":155,"column":11,"nodeType":"233","endLine":155,"endColumn":28},{"ruleId":"205","replacedBy":"234"},{"ruleId":"207","replacedBy":"235"},{"ruleId":"209","severity":1,"message":"236","line":21,"column":6,"nodeType":"211","endLine":21,"endColumn":8,"suggestions":"237"},{"ruleId":"205","replacedBy":"238"},{"ruleId":"207","replacedBy":"239"},{"ruleId":"209","severity":1,"message":"240","line":35,"column":6,"nodeType":"211","endLine":35,"endColumn":25,"suggestions":"241"},{"ruleId":"209","severity":1,"message":"213","line":39,"column":6,"nodeType":"211","endLine":39,"endColumn":20,"suggestions":"242"},{"ruleId":"243","severity":1,"message":"244","line":10,"column":28,"nodeType":"245","messageId":"246","endLine":10,"endColumn":30},{"ruleId":"209","severity":1,"message":"247","line":13,"column":6,"nodeType":"211","endLine":13,"endColumn":8,"suggestions":"248"},{"ruleId":"205","replacedBy":"249"},{"ruleId":"207","replacedBy":"250"},{"ruleId":"209","severity":1,"message":"251","line":23,"column":6,"nodeType":"211","endLine":23,"endColumn":8,"suggestions":"252"},{"ruleId":"221","severity":1,"message":"253","line":1,"column":17,"nodeType":"223","messageId":"224","endLine":1,"endColumn":25},{"ruleId":"217","severity":1,"message":"218","line":61,"column":35,"nodeType":"219","messageId":"220","endLine":61,"endColumn":37},{"ruleId":"254","severity":1,"message":"255","line":95,"column":29,"nodeType":"256","messageId":"257","endLine":95,"endColumn":45},{"ruleId":"254","severity":1,"message":"258","line":102,"column":29,"nodeType":"256","messageId":"257","endLine":102,"endColumn":45},{"ruleId":"217","severity":1,"message":"218","line":176,"column":33,"nodeType":"219","messageId":"220","endLine":176,"endColumn":35},{"ruleId":"205","replacedBy":"259"},{"ruleId":"207","replacedBy":"260"},{"ruleId":"209","severity":1,"message":"261","line":16,"column":6,"nodeType":"211","endLine":16,"endColumn":12,"suggestions":"262"},{"ruleId":"205","replacedBy":"263"},{"ruleId":"207","replacedBy":"264"},{"ruleId":"221","severity":1,"message":"265","line":11,"column":11,"nodeType":"223","messageId":"224","endLine":11,"endColumn":20},{"ruleId":"221","severity":1,"message":"266","line":11,"column":22,"nodeType":"223","messageId":"224","endLine":11,"endColumn":30},{"ruleId":"209","severity":1,"message":"267","line":46,"column":6,"nodeType":"211","endLine":46,"endColumn":55,"suggestions":"268"},{"ruleId":"217","severity":1,"message":"218","line":55,"column":71,"nodeType":"219","messageId":"220","endLine":55,"endColumn":73},{"ruleId":"209","severity":1,"message":"269","line":59,"column":6,"nodeType":"211","endLine":59,"endColumn":25,"suggestions":"270"},{"ruleId":"209","severity":1,"message":"271","line":68,"column":6,"nodeType":"211","endLine":68,"endColumn":20,"suggestions":"272"},{"ruleId":"209","severity":1,"message":"273","line":46,"column":6,"nodeType":"211","endLine":46,"endColumn":8,"suggestions":"274"},{"ruleId":"209","severity":1,"message":"275","line":51,"column":6,"nodeType":"211","endLine":51,"endColumn":15,"suggestions":"276"},{"ruleId":"209","severity":1,"message":"277","line":10,"column":6,"nodeType":"211","endLine":10,"endColumn":24,"suggestions":"278"},{"ruleId":"205","replacedBy":"279"},{"ruleId":"207","replacedBy":"280"},{"ruleId":"205","replacedBy":"281"},{"ruleId":"207","replacedBy":"282"},"no-native-reassign",["283"],"no-negated-in-lhs",["284"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fiat', 'prevCurrentValues', and 'prevFiat'. Either include them or remove the dependency array.","ArrayExpression",["285"],"React Hook useEffect has a missing dependency: 'calcChange'. Either include it or remove the dependency array. Mutable values like 'fiat.current' aren't valid dependencies because mutating them doesn't re-render the component.",["286"],"React Hook useEffect has missing dependencies: 'fiat' and 'origin'. Either include them or remove the dependency array. If 'setLabelStr' needs the current value of 'fiat', you can also switch to useReducer instead of useState and read 'fiat' in the reducer.",["287"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'key' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'currency' and 'positions'. Either include them or remove the dependency array.",["288"],"React Hook useEffect has missing dependencies: 'get24hMax' and 'get24hMin'. Either include them or remove the dependency array.",["289"],["283"],["284"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["283"],["284"],"React Hook useEffect has missing dependencies: 'data.state.currency' and 'data.state.date_of_purchase'. Either include them or remove the dependency array.",["290"],["283"],["284"],"React Hook useEffect has missing dependencies: 'fiat', 'prevCurrentValueTotal', and 'prevFiat'. Either include them or remove the dependency array.",["291"],["292"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'data.current_price'. Either include it or remove the dependency array.",["293"],["283"],["284"],"React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["294"],"'Fragment' is defined but never used.","no-self-assign","'sort[element][1]' is assigned to itself.","MemberExpression","selfAssignment","'sort[element][2]' is assigned to itself.",["283"],["284"],"React Hook useEffect has missing dependencies: 'logedin' and 'upDateMarketChartState'. Either include them or remove the dependency array. If 'upDateMarketChartState' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["295"],["283"],["284"],"'firstname' is assigned a value but never used.","'lastname' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getInitialValuePurchase'. Either include it or remove the dependency array.",["296"],"React Hook useEffect has missing dependencies: 'cryptoCurrencies', 'currencyNamesAndCurrentValues', and 'user'. Either include them or remove the dependency array.",["297"],"React Hook useEffect has a missing dependency: 'fiat'. Either include it or remove the dependency array. Mutable values like 'fiat.current' aren't valid dependencies because mutating them doesn't re-render the component.",["298"],"React Hook useEffect has a missing dependency: 'loadUserObj'. Either include it or remove the dependency array.",["299"],"React Hook useEffect has missing dependencies: 'updateCryptoCurrenciesState' and 'updateExchangeRateState'. Either include them or remove the dependency array.",["300"],"React Hook useEffect has a missing dependency: 'getSparkLineData'. Either include it or remove the dependency array.",["301"],["283"],["284"],["283"],["284"],"no-global-assign","no-unsafe-negation",{"desc":"302","fix":"303"},{"desc":"304","fix":"305"},{"desc":"306","fix":"307"},{"desc":"308","fix":"309"},{"desc":"310","fix":"311"},{"desc":"312","fix":"313"},{"desc":"314","fix":"315"},{"desc":"304","fix":"316"},{"desc":"317","fix":"318"},{"desc":"319","fix":"320"},{"desc":"321","fix":"322"},{"desc":"323","fix":"324"},{"desc":"325","fix":"326"},{"desc":"327","fix":"328"},{"desc":"329","fix":"330"},{"desc":"331","fix":"332"},{"desc":"333","fix":"334"},"Update the dependencies array to be: [currencyNamesAndCurrentValues, fiat, prevCurrentValues, prevFiat]",{"range":"335","text":"336"},"Update the dependencies array to be: [calcChange]",{"range":"337","text":"338"},"Update the dependencies array to be: [fiat, origin]",{"range":"339","text":"340"},"Update the dependencies array to be: [nameArray, currentMarketChart, duration, currency, positions]",{"range":"341","text":"342"},"Update the dependencies array to be: [dataArray, get24hMax, get24hMin]",{"range":"343","text":"344"},"Update the dependencies array to be: [data.state.currency, data.state.date_of_purchase]",{"range":"345","text":"346"},"Update the dependencies array to be: [currentValueTotal, fiat, prevCurrentValueTotal, prevFiat]",{"range":"347","text":"348"},{"range":"349","text":"338"},"Update the dependencies array to be: [data.current_price]",{"range":"350","text":"351"},"Update the dependencies array to be: [user]",{"range":"352","text":"353"},"Update the dependencies array to be: [logedin, upDateMarketChartState, user]",{"range":"354","text":"355"},"Update the dependencies array to be: [user, cryptoCurrencies, logedin, renderOverview, getInitialValuePurchase]",{"range":"356","text":"357"},"Update the dependencies array to be: [cryptoCurrencies, currencyNamesAndCurrentValues, currentValueTotal, user]",{"range":"358","text":"359"},"Update the dependencies array to be: [fiat]",{"range":"360","text":"361"},"Update the dependencies array to be: [loadUserObj]",{"range":"362","text":"363"},"Update the dependencies array to be: [logedin, updateCryptoCurrenciesState, updateExchangeRateState]",{"range":"364","text":"365"},"Update the dependencies array to be: [cryptoCurrencies, getSparkLineData]",{"range":"366","text":"367"},[1624,1655],"[currencyNamesAndCurrentValues, fiat, prevCurrentValues, prevFiat]",[1702,1716],"[calcChange]",[1145,1147],"[fiat, origin]",[5010,5051],"[nameArray, currentMarketChart, duration, currency, positions]",[568,579],"[dataArray, get24hMax, get24hMin]",[590,592],"[data.state.currency, data.state.date_of_purchase]",[1147,1166],"[currentValueTotal, fiat, prevCurrentValueTotal, prevFiat]",[1213,1227],[423,425],"[data.current_price]",[785,787],"[user]",[328,334],"[logedin, upDateMarketChartState, user]",[1305,1354],"[user, cryptoCurrencies, logedin, renderOverview, getInitialValuePurchase]",[1820,1839],"[cryptoCurrencies, currencyNamesAndCurrentValues, currentValueTotal, user]",[2094,2108],"[fiat]",[1574,1576],"[loadUserObj]",[1671,1680],"[logedin, updateCryptoCurrenciesState, updateExchangeRateState]",[341,359],"[cryptoCurrencies, getSparkLineData]"]