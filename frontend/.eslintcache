[{"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/overview/Twenty4hChangeInvestmentTotal.js":"1","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/overview/OverviewCurrencies.js":"2","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/overview/Twenty4hChangeByCurrency.js":"3","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/charts/TotalChartDiagramm.js":"4","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/charts/Twenty4hChange.js":"5","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/index.js":"6","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/auxiliary/auxiliaryUserData.js":"7","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/layout/Landing.js":"8","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/layout/Alert.js":"9","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/auth/Login.js":"10","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/input/AddCrypto.js":"11","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/positions/PositionChart.js":"12","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/positions/PositionChartDiagram.js":"13","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/utils/setAuthToken.js":"14","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/navbar/Menu.js":"15","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/overview/OverviewTotal.js":"16","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/overview/Twenty4hChangeInvestmentByCurrencies.js":"17","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/actions/currencies.js":"18","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/positions/Position.js":"19","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/actions/positions.js":"20","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/input/DeductCrypto.js":"21","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/navbar/AccountIcon.js":"22","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/auxiliary/auxiliaryCryptoData.js":"23","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/actions/user.js":"24","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/charts/TotalChart.js":"25","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/auth/Register.js":"26","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/overview/Overview.js":"27","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/navbar/Navbar.js":"28","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/App.js":"29","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/actions/auth.js":"30","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/charts/SparkLine.js":"31","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/charts/SparkLineCharts.js":"32"},{"size":485,"mtime":1609882749328,"results":"33","hashOfConfig":"34"},{"size":5416,"mtime":1610236632180,"results":"35","hashOfConfig":"34"},{"size":1439,"mtime":1609612404210,"results":"36","hashOfConfig":"34"},{"size":4978,"mtime":1610220381718,"results":"37","hashOfConfig":"34"},{"size":1176,"mtime":1609634873592,"results":"38","hashOfConfig":"34"},{"size":197,"mtime":1609170003662,"results":"39","hashOfConfig":"34"},{"size":641,"mtime":1609170003658,"results":"40","hashOfConfig":"34"},{"size":5307,"mtime":1609882840948,"results":"41","hashOfConfig":"34"},{"size":304,"mtime":1609170003658,"results":"42","hashOfConfig":"34"},{"size":1764,"mtime":1609170003658,"results":"43","hashOfConfig":"34"},{"size":3203,"mtime":1609880397301,"results":"44","hashOfConfig":"34"},{"size":947,"mtime":1609170003662,"results":"45","hashOfConfig":"34"},{"size":1026,"mtime":1609170003662,"results":"46","hashOfConfig":"34"},{"size":453,"mtime":1609170003662,"results":"47","hashOfConfig":"34"},{"size":745,"mtime":1609170003658,"results":"48","hashOfConfig":"34"},{"size":2591,"mtime":1610239808698,"results":"49","hashOfConfig":"34"},{"size":1724,"mtime":1609970019833,"results":"50","hashOfConfig":"34"},{"size":6395,"mtime":1610119257568,"results":"51","hashOfConfig":"34"},{"size":3446,"mtime":1609624366781,"results":"52","hashOfConfig":"34"},{"size":305,"mtime":1609170003658,"results":"53","hashOfConfig":"34"},{"size":4644,"mtime":1609370347370,"results":"54","hashOfConfig":"34"},{"size":307,"mtime":1609170003658,"results":"55","hashOfConfig":"34"},{"size":5493,"mtime":1610226469021,"results":"56","hashOfConfig":"34"},{"size":433,"mtime":1609170003658,"results":"57","hashOfConfig":"34"},{"size":1679,"mtime":1609544630204,"results":"58","hashOfConfig":"34"},{"size":2228,"mtime":1609170003658,"results":"59","hashOfConfig":"34"},{"size":3871,"mtime":1610239803486,"results":"60","hashOfConfig":"34"},{"size":941,"mtime":1609268083434,"results":"61","hashOfConfig":"34"},{"size":6075,"mtime":1609955273429,"results":"62","hashOfConfig":"34"},{"size":957,"mtime":1609170003658,"results":"63","hashOfConfig":"34"},{"size":2318,"mtime":1610241554715,"results":"64","hashOfConfig":"34"},{"size":1070,"mtime":1610225599864,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1m2r51w",{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"86"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"81"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"77"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"68"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"68"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"77"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"77"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/overview/Twenty4hChangeInvestmentTotal.js",[],["150","151"],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/overview/OverviewCurrencies.js",["152"],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/overview/Twenty4hChangeByCurrency.js",[],["153","154"],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/charts/TotalChartDiagramm.js",["155","156"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport Twenty4hChange from \"./Twenty4hChange\";\nimport { Line } from \"react-chartjs-2\";\nimport { cumulativeValueInvestment } from \"../../auxiliary/auxiliaryCryptoData\";\n\nfunction TotalChartDiagramm({\n  positions,\n  currentMarketChart,\n  fiat,\n  originAndCurrency,\n  duration,\n}) {\n  // console.log(currentMarketChart);\n\n  const [nameArray, setNameArray] = useState(\"\");\n\n  const [labelStr, setLabelStr] = useState(\"\");\n\n  const [resultArray, setResultArray] = useState([]);\n\n  const [timeStampArray, setTimeStampArray] = useState([]);\n\n  const [origin, currency] = originAndCurrency;\n\n  useEffect(() => {\n    switch (origin) {\n      case \"initial_value\":\n        setNameArray(\"initialValueArray\");\n        setLabelStr(`Price in ${fiat}`);\n        break;\n      case \"current_value\":\n        setNameArray(\"currentValueArray\");\n        setLabelStr(`Price in ${fiat}`);\n        break;\n      case \"balance\":\n        setNameArray(\"balanceArray\");\n        setLabelStr(`Price in ${fiat}`);\n        break;\n      case \"roi\":\n        setNameArray(\"roiArray\");\n        setLabelStr(`ROI in %`);\n        break;\n      default:\n    }\n  }, []);\n\n  useEffect(() => {\n    const currenciesTotalObjectsArray = [];\n\n    const timeStamps = [];\n\n    let currencyArr = [];\n\n    currency === \"all_currencies\"\n      ? (currencyArr = Object.keys(currentMarketChart))\n      : currencyArr.push(currency);\n\n    // the following 2 functions push object(s) with initialValueArray, currentValueArray, balanceArray, roiArray and timeStampArray for every currency\n    // in currenciesTotalObjectsArray\n    const totalValueInvestment = (obj) => {\n      currenciesTotalObjectsArray.push(obj);\n    };\n\n    currencyArr.forEach((currency) =>\n      totalValueInvestment(\n        cumulativeValueInvestment(\n          positions,\n          currentMarketChart[currency],\n          currency\n        )\n      )\n    );\n\n    // retrieves timeStamps from array of objects with initialValueArray, currentValueArray, balanceArray, roiArray and timeStampArray for every currency\n    // those objects are beeing created in cumulativeValueInvestment() @auxiliaryCryptoData.js\n    // some of these arrays contain empty slots (for details see comments in cumulativeValueInvestment() in @auxiliaryCryptoData.js)\n    // those have to be removed, else the line diagrams display a lot of null values at the beginning\n    // hence filter is employed\n    currenciesTotalObjectsArray.forEach((obj) => {\n      const filtered = obj.timeStampArray.filter((el) => el !== undefined);\n      filtered.forEach((el, index) => (timeStamps[index] = el));\n    });\n\n    // the following code sums up initial_value, current_value, balance of every individual currency so that the totals of these attributes can be displayed in a chart\n    // it also calculates the development of roi over time\n    const resArray = new Array(timeStamps.length).fill(0);\n\n    if (nameArray) {\n      const initValResArray = new Array(timeStamps.length).fill(0);\n      const currValResArray = new Array(timeStamps.length).fill(0);\n\n      currenciesTotalObjectsArray.forEach((obj) => {\n        if (nameArray === \"roiArray\") {\n          obj.initialValueArray.forEach(\n            (el, index) => (initValResArray[index] += el)\n          );\n          obj.currentValueArray.forEach(\n            (el, index) => (currValResArray[index] += el)\n          );\n          obj.roiArray.forEach(\n            (el, index) =>\n              (resArray[index] =\n                (currValResArray[index] * 100) / initValResArray[index] - 100)\n          );\n        } else {\n          if (currency === \"all_currencies\") {\n            obj[nameArray].forEach((el, index) => (resArray[index] += el));\n          } else {\n            // this removes undefined elements from arrays (why are there undefined elements in some arrays? see explanation above for empty slots in timeStampArray)\n            const filtered = obj[nameArray].filter((el) => el !== undefined);\n            filtered.forEach((el, index) => (resArray[index] += el));\n          }\n        }\n      });\n    }\n    setResultArray(resArray);\n    setTimeStampArray(timeStamps);\n  }, [nameArray, currentMarketChart, duration]);\n\n  return (\n    <Fragment>\n      <Twenty4hChange dataArray={resultArray} />\n      <div>\n        <Line\n          data={{\n            labels: timeStampArray,\n            datasets: [\n              {\n                label: labelStr,\n                data: resultArray,\n              },\n            ],\n          }}\n          // width={500}\n          height={500}\n          options={{\n            maintainAspectRatio: false,\n            scales: {\n              yAxes: [\n                {\n                  scaleLabel: {\n                    display: true,\n                    labelString: labelStr,\n                  },\n                },\n              ],\n            },\n          }}\n        />\n      </div>\n    </Fragment>\n  );\n}\n\nexport default TotalChartDiagramm;\n",["157","158"],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/charts/Twenty4hChange.js",["159"],"import React, { useState, useEffect } from \"react\";\n\nconst Twenty4hChange = ({ dataArray }) => {\n  const [change, setChange] = useState(0);\n  const [twentyFourHoursMax, setTwentyFourHoursMax] = useState(0);\n  const [twentyFourHoursMin, setTwentyFourHoursMin] = useState(0);\n\n  useEffect(() => {\n    setChange(dataArray[dataArray.length - 1] - dataArray[0]);\n    setTwentyFourHoursMax(get24hMax());\n    setTwentyFourHoursMin(get24hMin());\n  }, [dataArray]);\n\n  const get24hMax = () => {\n    const arraySorted = dataArray.sort(function (a, b) {\n      return b - a;\n    });\n\n    return arraySorted[0];\n  };\n\n  const get24hMin = () => {\n    const arrSorted = dataArray.sort(function (a, b) {\n      return a - b;\n    });\n\n    return arrSorted[0];\n  };\n\n  return (\n    <div className=\"twenty_four_hour_charts_container\">\n      <div\n        style={{\n          color: change > 0 ? \"green\" : \"red\",\n        }}\n      >\n        change: {change.toFixed(2)} &euro;\n      </div>\n      <div className=\"crypto_24h_change\">max: {twentyFourHoursMax} &euro;</div>\n      <div className=\"crypto_24h_change\">min: {twentyFourHoursMin} &euro;</div>\n    </div>\n  );\n};\n\nexport default Twenty4hChange;\n",["160","161"],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/index.js",[],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/auxiliary/auxiliaryUserData.js",[],["162","163"],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/layout/Landing.js",["164"],"import React, { Fragment, useState } from \"react\";\nimport { getMarketChartsCrypto2 } from \"../../actions/currencies\";\nimport { getCurrenciesNames } from \"../../auxiliary/auxiliaryCryptoData\";\nimport Overview from \"../overview/Overview\";\nimport TotalChart from \"../charts/TotalChart\";\n\nfunction Landing({ user, cryptoCurrencies, logedin, triggerAlert }) {\n  const [renderOverview, setRenderOverview] = useState(true);\n  const [renderTotalChart, setRenderTotalChart] = useState(false);\n\n  const toggleView = () => {\n    if (renderOverview) {\n      setRenderOverview(false);\n      setRenderTotalChart(true);\n      return;\n    } else {\n      setRenderOverview(true);\n      setRenderTotalChart(false);\n    }\n  };\n\n  const [originAndCurrency, setOriginAndCurency] = useState([]);\n\n  const updateOriginAndCurrencyState = (origin, currency) =>\n    setOriginAndCurency([origin, currency]);\n\n  const [marketChartTotal, setMarketChartTotal] = useState({});\n  const [marketChartDay, setMarketChartDay] = useState({});\n  const [marketChartWeek, setMarketChartWeek] = useState({});\n  const [marketChartMonth, setMarketChartMonth] = useState({});\n  const [currentMarketChart, setCurrentMarketChart] = useState({});\n\n  const [loaded, setLoaded] = useState(false);\n\n  const isEmpty = (obj) => Object.keys(obj).length === 0;\n\n  const upDateMarketChartState = (duration) => {\n    switch (duration) {\n      case \"all_total\":\n        isEmpty(marketChartTotal)\n          ? loadChartData(duration)\n          : setCurrentMarketChart(marketChartTotal);\n        break;\n      case \"day\":\n        isEmpty(marketChartDay)\n          ? loadChartData(duration)\n          : setCurrentMarketChart(marketChartDay);\n        break;\n      case \"week\":\n        isEmpty(marketChartWeek)\n          ? loadChartData(duration)\n          : setCurrentMarketChart(marketChartWeek);\n        break;\n      case \"month\":\n        isEmpty(marketChartMonth)\n          ? loadChartData(duration)\n          : setCurrentMarketChart(marketChartMonth);\n        break;\n      default:\n    }\n\n    function loadChartData(duration) {\n      setLoaded(false);\n      let currenciesObject = {};\n      const currencyNamesArr = getCurrenciesNames(user);\n\n      // api request is beeing conducted in accordance with the number of currencies\n      // if successful the retured data is beeing stored as arrays in currenciesObject (key = currencyName, value = array)\n      // if the number of attributes matches the number of currencies marketCharts and loaded state are updated\n      // if an error is returned by api the state loaded is set to true (so the empty diagram is beeing displayed) and an error message appears\n      currencyNamesArr.forEach(async (currencyName) => {\n        let currentPrice = 0;\n        cryptoCurrencies.data.forEach((obj) => {\n          if (obj.id === currencyName) currentPrice = obj.current_price;\n        });\n        const res = await getMarketChartsCrypto2(\n          user,\n          currencyName,\n          currentPrice,\n          duration\n        );\n\n        if (res instanceof Error) {\n          setLoaded(true);\n          res.response\n            ? triggerAlert(res.response.data)\n            : triggerAlert(\"something went wrong\");\n\n          // this makes sure that currenciesObject only gets attributes if no error occurs so those attributes are proper arrays\n          // otherwhise attributes are non iterable error objects -> a arr.forEach() will throw an exception later in the code and break the app\n          // if api returns errors, currenciesObject remains incomplete and marketCharts state will not be updated\n          // so after the arr.forEach() is done marketCharts state either has valid data or is an empty object (which results in an empty diagram)\n        } else {\n          currenciesObject[currencyName] = res;\n          if (\n            Object.keys(currenciesObject).length === currencyNamesArr.length\n          ) {\n            switch (duration) {\n              case \"all_total\":\n                setMarketChartTotal(currenciesObject);\n                break;\n              case \"day\":\n                setMarketChartDay(currenciesObject);\n                break;\n              case \"week\":\n                setMarketChartWeek(currenciesObject);\n                break;\n              case \"month\":\n                setMarketChartMonth(currenciesObject);\n                break;\n              default:\n            }\n\n            setCurrentMarketChart(currenciesObject);\n\n            setLoaded(true);\n          }\n        }\n      });\n    }\n  };\n\n  return (\n    <Fragment>\n      {renderOverview && (\n        <Overview\n          user={user}\n          cryptoCurrencies={cryptoCurrencies}\n          logedin={logedin}\n          toggleView={toggleView}\n          renderOverview={renderOverview}\n          updateOriginAndCurrencyState={updateOriginAndCurrencyState}\n        />\n      )}\n      {renderTotalChart && (\n        <TotalChart\n          user={user}\n          currentMarketChart={currentMarketChart}\n          logedin={logedin}\n          triggerAlert={triggerAlert}\n          toggleView={toggleView}\n          originAndCurrency={originAndCurrency}\n          loaded={loaded}\n          logedin={logedin}\n          upDateMarketChartState={upDateMarketChartState}\n        />\n      )}\n    </Fragment>\n  );\n}\n\nexport default Landing;\n","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/layout/Alert.js",[],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/auth/Login.js",[],["165","166"],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/input/AddCrypto.js",[],["167","168"],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/positions/PositionChart.js",["169"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { getMarketCharts } from \"../../actions/currencies\";\nimport PositionChartDiagram from \"./PositionChartDiagram\";\n\nconst PositionChart = () => {\n  let data = useLocation();\n\n  const [marketChart, setMarketChart] = useState({});\n\n  useEffect(() => {\n    const updateStates = async () => {\n      const chartData = await getMarketCharts(\n        data.state.currency,\n        data.state.date_of_purchase\n      );\n      setMarketChart(chartData);\n    };\n\n    updateStates();\n  }, []);\n\n  function isEmpty(obj) {\n    return Object.keys(obj).length === 0;\n  }\n\n  return isEmpty(marketChart) ? (\n    <div>Loading ...</div>\n  ) : (\n    <div>\n      <Fragment>\n        <PositionChartDiagram\n          marketChart={marketChart}\n          amount={data.state.amount}\n        />\n      </Fragment>\n    </div>\n  );\n};\n\nexport default PositionChart;\n","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/positions/PositionChartDiagram.js",[],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/utils/setAuthToken.js",[],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/navbar/Menu.js",[],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/overview/OverviewTotal.js",["170"],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/overview/Twenty4hChangeInvestmentByCurrencies.js",[],["171","172"],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/actions/currencies.js",[],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/positions/Position.js",["173","174"],"import React, { Fragment, useEffect } from \"react\";\nimport { getCurrencyPositions } from \"../../auxiliary/auxiliaryCryptoData\";\nimport { useLocation } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\n\nfunction Position() {\n  const data = useLocation();\n\n  useEffect(() => {\n    if (data.current_price != undefined) {\n      sessionStorage.setItem(\"crypto_inv_current_price\", data.current_price);\n    }\n  }, []);\n\n  const transformDate = (val) => {\n    const date = new Date(val);\n    const day =\n      date.getDate() < 10 ? \"0\" + date.getDate() : \"\" + date.getDate();\n    const month = date.toLocaleString(\"default\", { month: \"long\" });\n    const year = date.getFullYear();\n    const dateString = `${day}. ${month} ${year}`;\n    return dateString;\n  };\n\n  const getSortedPositions = () => {\n    const positionsArray = getCurrencyPositions(\n      data.state.user,\n      data.state.currency\n    );\n    const sortedArray = positionsArray.sort(\n      (a, b) => Date.parse(b.date_of_purchase) - Date.parse(a.date_of_purchase)\n    );\n    return sortedArray;\n  };\n\n  return (\n    <Fragment>\n      <div>\n        current price per coin:\n        {data.current_price ||\n          sessionStorage.getItem(\"crypto_inv_current_price\")}{\" \"}\n        {data.state.user.positions[0].fiat_currency}\n      </div>\n      <div className=\"row\">\n        {getSortedPositions().map((position) => {\n          return (\n            <Link\n              id=\"position\"\n              to={{\n                pathname: \"/position_chart\",\n                state: {\n                  currency: position.crypto_currency,\n                  date_of_purchase: position.date_of_purchase,\n                  amount: position.amount,\n                },\n              }}\n            >\n              <div className=\"col\">amount: {position.amount}</div>\n              <div className=\"col\">\n                price per coin at time of purchase:\n                {(position.price / position.amount).toFixed(2)}\n              </div>\n              <div className=\"col\">\n                purchase date:\n                {/* {position.date_of_purchase.split(\"T\").slice(0, 1).join(\"\")} */}\n                {transformDate(position.date_of_purchase)}\n              </div>\n              <div className=\"col\">\n                initial value:\n                {position.price}\n                {position.fiat_currency}\n              </div>\n              <div className=\"col\">\n                current value:\n                {data.current_price === undefined\n                  ? (\n                      sessionStorage.getItem(\"crypto_inv_current_price\") *\n                      position.amount\n                    ).toFixed(2)\n                  : (data.current_price * position.amount).toFixed(2)}\n                {position.fiat_currency}\n              </div>\n\n              <div className=\"col\">\n                balance:\n                {data.current_price === undefined\n                  ? (\n                      sessionStorage.getItem(\"crypto_inv_current_price\") *\n                        position.amount -\n                      position.price\n                    ).toFixed(2)\n                  : (\n                      data.current_price * position.amount -\n                      position.price\n                    ).toFixed(2)}\n                {position.fiat_currency}\n              </div>\n            </Link>\n          );\n        })}\n      </div>\n    </Fragment>\n  );\n}\n\nexport default Position;\n","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/actions/positions.js",[],["175","176"],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/input/DeductCrypto.js",["177"],"import React, { useState, useEffect } from \"react\";\nimport { getAmount } from \"../../auxiliary/auxiliaryCryptoData\";\nimport { getCurrenciesNames } from \"../../auxiliary/auxiliaryCryptoData\";\nimport { getInitialValue } from \"../../auxiliary/auxiliaryCryptoData\";\n\n// import { getLatestCryptoPrice } from \"../../actions/currencies\";\n\nconst DeductCrypto = ({ user, makePosition, loadUserObj, triggerAlert }) => {\n  const [formData, setFormData] = useState({\n    crypto_currency: \"\",\n    amount: \"\",\n    date_of_purchase: \"\",\n  });\n\n  const { crypto_currency, amount, date_of_purchase } = formData;\n\n  const [currencyNames, setCurrencyNames] = useState([]);\n\n  useEffect(() => {\n    const namesArr = getCurrenciesNames(user);\n    namesArr.unshift(\"\");\n    setCurrencyNames(namesArr);\n  }, []);\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n\n    // user input validation\n    if (!crypto_currency) {\n      triggerAlert(\"Please select a cryptocurrency\", \"danger\");\n      return;\n    }\n\n    const currentAmount = getAmount(user, crypto_currency);\n\n    if (amount > currentAmount) {\n      triggerAlert(\n        `You have only ${currentAmount} unit(s) of this currency`,\n        \"danger\"\n      );\n      return;\n    }\n\n    // value of the amount (in fiat) to be deducted from the amount of a crypto currency in the portfolio is calculated based on the median value\n    // of all positions of this currency\n    const median_price =\n      (getInitialValue(user, crypto_currency) /\n        getAmount(user, crypto_currency)) *\n      amount;\n\n    formData.price = median_price * -1;\n\n    // amount is beeing turned into negative so the corresponding position has a negative amount property\n    formData.amount = parseFloat(formData.amount) * -1;\n    formData.fiat_currency = user.positions[0].fiat_currency;\n\n    // formData.fiat_currency = e.target.querySelector(\n    //   \"#deduct_select_fiat\"\n    // ).value;\n    // formData.price *= -1;\n\n    await makePosition(formData);\n    setFormData({\n      crypto_currency: \"\",\n      amount: \"\",\n      date_of_purchase: \"\",\n    });\n    loadUserObj();\n  };\n\n  return (\n    <div className=\"form_container\">\n      <h3 className=\"large text-primary\">Deduct Crypto</h3>\n      <p className=\"lead\">Deduct cryptocurrency from your portfolio</p>\n      <form className=\"form\" onSubmit={(e) => onSubmit(e)}>\n        <div className=\"form-group\">\n          <div className=\"dropdown input_field\">\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n              }}\n            >\n              <div>Select a cryptocurrency</div>\n              <select\n                className=\"btn btn-outline-secondary\"\n                name=\"crypto_currency\"\n                style={{ position: \"absolute\", right: \"0\", width: \"50%\" }}\n                onChange={(e) => onChange(e)}\n              >\n                {currencyNames.map((currencyName) => {\n                  return (\n                    <option value={`${currencyName}`}>{currencyName}</option>\n                  );\n                })}\n              </select>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"form-group\">\n          <input\n            className=\"form-control input_field\"\n            type=\"number\"\n            placeholder=\"Amount\"\n            name=\"amount\"\n            value={amount}\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n\n        {/* <div className=\"input-group input_field\">\n          <input\n            className=\"form-control\"\n            type=\"number\"\n            min=\"1\"\n            step=\"any\"\n            placeholder=\"Value of amount\"\n            name=\"price\"\n            value={price}\n            onChange={(e) => onChange(e)}\n            required\n          />\n          <div className=\"input-group-append\">\n            <select\n              id=\"deduct_select_fiat\"\n              className=\"btn btn-outline-secondary\"\n            >\n              <option value=\"EUR\">EUR</option>\n              <option value=\"USD\">USD</option>\n            </select>\n          </div>\n        </div> */}\n\n        <div className=\"form-group\">\n          <input\n            className=\"form-control input_field\"\n            type=\"date\"\n            name=\"date_of_purchase\"\n            value={date_of_purchase}\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Deduct\" />\n      </form>\n    </div>\n  );\n};\n\nexport default DeductCrypto;\n","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/navbar/AccountIcon.js",["178"],"import React, { Fragment } from \"react\";\nimport Menu from \"./Menu\";\n\nconst AccountIcon = ({ logout, logedin }) => {\n  return (\n    <div id=\"account_nav_item\">\n      account\n      <div id=\"menu\">\n        <Menu logout={logout} logedin={logedin} />\n      </div>\n    </div>\n  );\n};\n\nexport default AccountIcon;\n",["179","180"],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/auxiliary/auxiliaryCryptoData.js",["181","182","183","184"],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/actions/user.js",[],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/charts/TotalChart.js",["185"],"import React, { useEffect } from \"react\";\nimport TotalChartDiagramm from \"./TotalChartDiagramm\";\n\nfunction TotalChart({\n  user,\n  currentMarketChart,\n  toggleView,\n  originAndCurrency,\n  loaded,\n  duration,\n  upDateMarketChartState,\n  logedin,\n}) {\n  useEffect(() => {\n    if (logedin) upDateMarketChartState(\"all_total\");\n  }, [user]);\n\n  return !loaded ? (\n    <div>Loading ...</div>\n  ) : (\n    <div id=\"total_chart_container\">\n      <div id=\"toggle_view\" onClick={toggleView}>\n        go back\n      </div>\n      <div id=\"durations_container\">\n        <div\n          id={duration === \"day\" && \"duration\"}\n          className=\"durations\"\n          onClick={() => upDateMarketChartState(\"day\")}\n        >\n          day\n        </div>\n        <div\n          id={duration === \"week\" && \"duration\"}\n          className=\"durations\"\n          onClick={() => upDateMarketChartState(\"week\")}\n        >\n          week\n        </div>\n        <div\n          id={duration === \"month\" && \"duration\"}\n          className=\"durations\"\n          onClick={() => upDateMarketChartState(\"month\")}\n        >\n          month\n        </div>\n        <div\n          id={duration === \"all_total\" && \"duration\"}\n          className=\"durations\"\n          onClick={() => upDateMarketChartState(\"all_total\")}\n        >\n          all\n        </div>\n      </div>\n      <div>\n        <TotalChartDiagramm\n          user={user}\n          currentMarketChart={currentMarketChart}\n          positions={user.positions}\n          fiat={user.positions[0].fiat_currency}\n          originAndCurrency={originAndCurrency}\n          duration={duration}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default TotalChart;\n","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/auth/Register.js",["186","187"],"import React, { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\n\nconst Register = ({ logedin, signup }) => {\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n    password2: \"\",\n  });\n\n  const { firstname, lastname, email, password, password2 } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    signup(email, password, password2);\n  };\n\n  // if some nasty user enters .../login in url --> redirect to landing page\n  // otherwhise the register form could be displayed to a logged in user\n  if (logedin) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <div className=\"form_container\">\n      <h3 className=\"large text-primary\">Sign Up</h3>\n      <p className=\"lead\">\n        <i className=\"fa fa-user auth_fa-user\"></i> Create your account\n      </p>\n      <form className=\"form\" onSubmit={(e) => onSubmit(e)}>\n        <div className=\"form-group\">\n          <input\n            className=\"form-control input_field\"\n            type=\"email\"\n            placeholder=\"Email Address\"\n            name=\"email\"\n            value={email}\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            className=\"form-control input_field\"\n            type=\"password\"\n            placeholder=\"Password\"\n            name=\"password\"\n            value={password}\n            onChange={(e) => onChange(e)}\n            minLength=\"6\"\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            className=\"form-control input_field\"\n            type=\"password\"\n            placeholder=\"Confirm Password\"\n            name=\"password2\"\n            value={password2}\n            onChange={(e) => onChange(e)}\n            minLength=\"6\"\n            required\n          />\n        </div>\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\n      </form>\n      <p className=\"my-1\">\n        Already have an account? <Link to=\"/login\">Sign In</Link>\n      </p>\n    </div>\n  );\n};\n\nexport default Register;\n","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/overview/Overview.js",["188","189","190"],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/navbar/Navbar.js",[],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/App.js",["191","192"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport { createPosition } from \"./actions/positions\";\nimport { getCurrenciesNames } from \"./auxiliary/auxiliaryCryptoData\";\nimport { getLatestCryptoData } from \"./actions/currencies\";\nimport { loadUser } from \"./auxiliary/auxiliaryUserData\";\nimport { signin } from \"./auxiliary/auxiliaryUserData\";\nimport { signout } from \"./auxiliary/auxiliaryUserData\";\nimport { signup } from \"./auxiliary/auxiliaryUserData\";\n\nimport Navbar from \"./components/navbar/Navbar\";\nimport Landing from \"./components/layout/Landing\";\nimport Login from \"./components/auth/Login\";\nimport Register from \"./components/auth/Register\";\n\nimport AddCrypto from \"./components/input/AddCrypto\";\nimport DeductCrypto from \"./components/input/DeductCrypto\";\n\nimport Position from \"./components/positions/Position\";\nimport PositionChart from \"./components/positions/PositionChart\";\n\nimport Alert from \"./components/layout/Alert\";\n\nimport \"./App.css\";\n\nconst App = () => {\n  const [user, setUser] = useState({});\n\n  const [logedin, setLogedin] = useState(false);\n\n  const [alert, setAlert] = useState({});\n\n  const [cryptoCurrencies, setCryptoCurrencies] = useState({});\n\n  useEffect(() => {\n    loadUserObj();\n  }, []);\n\n  useEffect(() => {\n    updateCryptoCurrenciesState();\n  }, [logedin]);\n\n  const updateCryptoCurrenciesState = async () => {\n    if (logedin) {\n      const currencyNames = getCurrenciesNames(user);\n\n      setInterval(() => {\n        update();\n      }, 120000);\n\n      const update = async () => {\n        const crypto = await getLatestCryptoData(currencyNames);\n        if (crypto instanceof Error) {\n          triggerAlert(\"Something went wrong\", \"danger\");\n        } else {\n          setCryptoCurrencies(crypto);\n        }\n      };\n\n      update();\n    }\n  };\n\n  // const getDataStream = () => {\n  //   if (Object.keys(cryptoCurrencies).length > 0) {\n  //     cryptoCurrencies.data.forEach((obj) => {\n  //       const binanceSocket = new WebSocket(\n  //         `wss://stream.binance.com:9443/ws/${obj.symbol}usdt@trade`\n  //       );\n  //       binanceSocket.onmessage = function (e) {\n  //         const messageObj = JSON.parse(e.data);\n  //         cryptoCurrencies.data.forEach((obj, index) => {\n  //           if (messageObj.s.includes(obj.symbol.toUpperCase())) {\n  //             setCryptoCurrencies({\n  //               ...(cryptoCurrencies,\n  //               (cryptoCurrencies.data[index].current_price = parseFloat(\n  //                 messageObj.p\n  //               ))),\n  //             });\n  //           }\n  //         });\n  //       };\n  //     });\n  //   }\n  // };\n\n  const makePosition = async (formData) => {\n    const position = await createPosition(formData);\n    if (position instanceof Error) {\n      triggerAlert(position.response.data.errors.msg, \"danger\");\n    } else {\n      position.data.amount < 0\n        ? triggerAlert(\"Amount deducted\", \"success\")\n        : triggerAlert(\"Position added\", \"success\");\n      setUser({ ...user.positions.unshift(position.data) });\n      updateCryptoCurrenciesState();\n    }\n  };\n\n  const login = async (email, password) => {\n    const token = await signin(email, password);\n    if (token instanceof Error) {\n      triggerAlert(token.response.data.errors.msg, \"danger\");\n    } else {\n      loadUserObj();\n    }\n  };\n\n  const loadUserObj = async () => {\n    const userObj = await loadUser();\n    if (userObj instanceof Error) {\n      triggerAlert(userObj.response.data.errors.msg, \"danger\");\n      return;\n    } else if (userObj) {\n      setUser(userObj);\n      setLogedin(true);\n    }\n  };\n\n  const logout = () => {\n    signout();\n    setUser({});\n    setLogedin(false);\n  };\n\n  const register = (email, password, password2) => {\n    const token = signup(email, password, password2);\n    if (token instanceof Error) {\n      triggerAlert(token.response.data.errors.msg, \"danger\");\n    } else {\n      loadUser();\n    }\n  };\n\n  const triggerAlert = (msg, alertType) => {\n    setAlert({\n      message: msg,\n      type: alertType,\n    });\n    setTimeout(() => setAlert({}), 20000);\n  };\n\n  const removeAlert = () => setAlert({});\n\n  return (\n    <Router>\n      <Fragment>\n        <Navbar logout={logout} logedin={logedin} />\n        <Alert alert={alert} removeAlert={removeAlert} />\n        <Switch>\n          {logedin && (\n            <Route\n              exact\n              path=\"/\"\n              render={() => (\n                <Landing\n                  user={user}\n                  cryptoCurrencies={cryptoCurrencies}\n                  logedin={logedin}\n                  triggerAlert={triggerAlert}\n                />\n              )}\n            />\n          )}\n          <Route exact path=\"/position\" render={() => <Position />} />\n          <Route\n            exact\n            path=\"/position_chart\"\n            render={() => <PositionChart />}\n          />\n\n          <Route\n            exact\n            path=\"/login\"\n            render={() => <Login login={login} logedin={logedin} />}\n          />\n          <Route\n            exact\n            path=\"/register\"\n            render={() => <Register register={register} logedin={logedin} />}\n          />\n          {logedin && (\n            <Route\n              exact\n              path=\"/add_crypto\"\n              render={() => (\n                <AddCrypto\n                  makePosition={makePosition}\n                  loadUserObj={loadUserObj}\n                  triggerAlert={triggerAlert}\n                />\n              )}\n            />\n          )}\n\n          {logedin && (\n            <Route\n              exact\n              path=\"/deduct_crypto\"\n              render={() => (\n                <DeductCrypto\n                  makePosition={makePosition}\n                  loadUserObj={loadUserObj}\n                  triggerAlert={triggerAlert}\n                  user={user}\n                />\n              )}\n            />\n          )}\n        </Switch>\n      </Fragment>\n    </Router>\n  );\n};\n\nexport default App;\n","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/actions/auth.js",[],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/charts/SparkLine.js",["193"],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/charts/SparkLineCharts.js",[],{"ruleId":"194","replacedBy":"195"},{"ruleId":"196","replacedBy":"197"},{"ruleId":"198","severity":1,"message":"199","line":40,"column":6,"nodeType":"200","endLine":40,"endColumn":37,"suggestions":"201"},{"ruleId":"194","replacedBy":"202"},{"ruleId":"196","replacedBy":"203"},{"ruleId":"198","severity":1,"message":"204","line":45,"column":6,"nodeType":"200","endLine":45,"endColumn":8,"suggestions":"205"},{"ruleId":"198","severity":1,"message":"206","line":118,"column":6,"nodeType":"200","endLine":118,"endColumn":47,"suggestions":"207"},{"ruleId":"194","replacedBy":"208"},{"ruleId":"196","replacedBy":"209"},{"ruleId":"198","severity":1,"message":"210","line":12,"column":6,"nodeType":"200","endLine":12,"endColumn":17,"suggestions":"211"},{"ruleId":"194","replacedBy":"212"},{"ruleId":"196","replacedBy":"213"},{"ruleId":"194","replacedBy":"214"},{"ruleId":"196","replacedBy":"215"},{"ruleId":"216","severity":1,"message":"217","line":144,"column":11,"nodeType":"218","endLine":144,"endColumn":28},{"ruleId":"194","replacedBy":"219"},{"ruleId":"196","replacedBy":"220"},{"ruleId":"194","replacedBy":"221"},{"ruleId":"196","replacedBy":"222"},{"ruleId":"198","severity":1,"message":"223","line":21,"column":6,"nodeType":"200","endLine":21,"endColumn":8,"suggestions":"224"},{"ruleId":"198","severity":1,"message":"225","line":28,"column":6,"nodeType":"200","endLine":28,"endColumn":25,"suggestions":"226"},{"ruleId":"194","replacedBy":"227"},{"ruleId":"196","replacedBy":"228"},{"ruleId":"229","severity":1,"message":"230","line":10,"column":28,"nodeType":"231","messageId":"232","endLine":10,"endColumn":30},{"ruleId":"198","severity":1,"message":"233","line":13,"column":6,"nodeType":"200","endLine":13,"endColumn":8,"suggestions":"234"},{"ruleId":"194","replacedBy":"235"},{"ruleId":"196","replacedBy":"236"},{"ruleId":"198","severity":1,"message":"237","line":23,"column":6,"nodeType":"200","endLine":23,"endColumn":8,"suggestions":"238"},{"ruleId":"239","severity":1,"message":"240","line":1,"column":17,"nodeType":"241","messageId":"242","endLine":1,"endColumn":25},{"ruleId":"194","replacedBy":"243"},{"ruleId":"196","replacedBy":"244"},{"ruleId":"245","severity":1,"message":"246","line":61,"column":35,"nodeType":"247","messageId":"248","endLine":61,"endColumn":37},{"ruleId":"249","severity":1,"message":"250","line":95,"column":29,"nodeType":"251","messageId":"252","endLine":95,"endColumn":45},{"ruleId":"249","severity":1,"message":"253","line":102,"column":29,"nodeType":"251","messageId":"252","endLine":102,"endColumn":45},{"ruleId":"245","severity":1,"message":"246","line":167,"column":33,"nodeType":"247","messageId":"248","endLine":167,"endColumn":35},{"ruleId":"198","severity":1,"message":"254","line":16,"column":6,"nodeType":"200","endLine":16,"endColumn":12,"suggestions":"255"},{"ruleId":"239","severity":1,"message":"256","line":11,"column":11,"nodeType":"241","messageId":"242","endLine":11,"endColumn":20},{"ruleId":"239","severity":1,"message":"257","line":11,"column":22,"nodeType":"241","messageId":"242","endLine":11,"endColumn":30},{"ruleId":"198","severity":1,"message":"258","line":43,"column":6,"nodeType":"200","endLine":43,"endColumn":55,"suggestions":"259"},{"ruleId":"245","severity":1,"message":"246","line":53,"column":44,"nodeType":"247","messageId":"248","endLine":53,"endColumn":46},{"ruleId":"198","severity":1,"message":"260","line":57,"column":6,"nodeType":"200","endLine":57,"endColumn":25,"suggestions":"261"},{"ruleId":"198","severity":1,"message":"262","line":38,"column":6,"nodeType":"200","endLine":38,"endColumn":8,"suggestions":"263"},{"ruleId":"198","severity":1,"message":"264","line":42,"column":6,"nodeType":"200","endLine":42,"endColumn":15,"suggestions":"265"},{"ruleId":"198","severity":1,"message":"266","line":10,"column":6,"nodeType":"200","endLine":10,"endColumn":24,"suggestions":"267"},"no-native-reassign",["268"],"no-negated-in-lhs",["269"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'prevCurrentValues'. Either include it or remove the dependency array.","ArrayExpression",["270"],["268"],["269"],"React Hook useEffect has missing dependencies: 'fiat' and 'origin'. Either include them or remove the dependency array. If 'setLabelStr' needs the current value of 'fiat', you can also switch to useReducer instead of useState and read 'fiat' in the reducer.",["271"],"React Hook useEffect has missing dependencies: 'currency' and 'positions'. Either include them or remove the dependency array.",["272"],["268"],["269"],"React Hook useEffect has missing dependencies: 'get24hMax' and 'get24hMin'. Either include them or remove the dependency array.",["273"],["268"],["269"],["268"],["269"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["268"],["269"],["268"],["269"],"React Hook useEffect has missing dependencies: 'data.state.currency' and 'data.state.date_of_purchase'. Either include them or remove the dependency array.",["274"],"React Hook useEffect has a missing dependency: 'prevCurrentValueTotal'. Either include it or remove the dependency array.",["275"],["268"],["269"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'data.current_price'. Either include it or remove the dependency array.",["276"],["268"],["269"],"React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["277"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar",["268"],["269"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-self-assign","'sort[element][1]' is assigned to itself.","MemberExpression","selfAssignment","'sort[element][2]' is assigned to itself.","React Hook useEffect has missing dependencies: 'logedin' and 'upDateMarketChartState'. Either include them or remove the dependency array. If 'upDateMarketChartState' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["278"],"'firstname' is assigned a value but never used.","'lastname' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getInitialValuePurchase'. Either include it or remove the dependency array.",["279"],"React Hook useEffect has missing dependencies: 'cryptoCurrencies', 'currencyNamesAndCurrentValues', and 'user'. Either include them or remove the dependency array.",["280"],"React Hook useEffect has a missing dependency: 'loadUserObj'. Either include it or remove the dependency array.",["281"],"React Hook useEffect has a missing dependency: 'updateCryptoCurrenciesState'. Either include it or remove the dependency array.",["282"],"React Hook useEffect has a missing dependency: 'getSparkLineData'. Either include it or remove the dependency array.",["283"],"no-global-assign","no-unsafe-negation",{"desc":"284","fix":"285"},{"desc":"286","fix":"287"},{"desc":"288","fix":"289"},{"desc":"290","fix":"291"},{"desc":"292","fix":"293"},{"desc":"294","fix":"295"},{"desc":"296","fix":"297"},{"desc":"298","fix":"299"},{"desc":"300","fix":"301"},{"desc":"302","fix":"303"},{"desc":"304","fix":"305"},{"desc":"306","fix":"307"},{"desc":"308","fix":"309"},{"desc":"310","fix":"311"},"Update the dependencies array to be: [currencyNamesAndCurrentValues, prevCurrentValues]",{"range":"312","text":"313"},"Update the dependencies array to be: [fiat, origin]",{"range":"314","text":"315"},"Update the dependencies array to be: [nameArray, currentMarketChart, duration, currency, positions]",{"range":"316","text":"317"},"Update the dependencies array to be: [dataArray, get24hMax, get24hMin]",{"range":"318","text":"319"},"Update the dependencies array to be: [data.state.currency, data.state.date_of_purchase]",{"range":"320","text":"321"},"Update the dependencies array to be: [currentValueTotal, prevCurrentValueTotal]",{"range":"322","text":"323"},"Update the dependencies array to be: [data.current_price]",{"range":"324","text":"325"},"Update the dependencies array to be: [user]",{"range":"326","text":"327"},"Update the dependencies array to be: [logedin, upDateMarketChartState, user]",{"range":"328","text":"329"},"Update the dependencies array to be: [user, cryptoCurrencies, logedin, renderOverview, getInitialValuePurchase]",{"range":"330","text":"331"},"Update the dependencies array to be: [cryptoCurrencies, currencyNamesAndCurrentValues, currentValueTotal, user]",{"range":"332","text":"333"},"Update the dependencies array to be: [loadUserObj]",{"range":"334","text":"335"},"Update the dependencies array to be: [logedin, updateCryptoCurrenciesState]",{"range":"336","text":"337"},"Update the dependencies array to be: [cryptoCurrencies, getSparkLineData]",{"range":"338","text":"339"},[1450,1481],"[currencyNamesAndCurrentValues, prevCurrentValues]",[1184,1186],"[fiat, origin]",[4175,4216],"[nameArray, currentMarketChart, duration, currency, positions]",[443,454],"[dataArray, get24hMax, get24hMin]",[590,592],"[data.state.currency, data.state.date_of_purchase]",[938,957],"[currentValueTotal, prevCurrentValueTotal]",[423,425],"[data.current_price]",[785,787],"[user]",[328,334],"[logedin, upDateMarketChartState, user]",[1266,1315],"[user, cryptoCurrencies, logedin, renderOverview, getInitialValuePurchase]",[1719,1738],"[cryptoCurrencies, currencyNamesAndCurrentValues, currentValueTotal, user]",[1317,1319],"[loadUserObj]",[1383,1392],"[logedin, updateCryptoCurrenciesState]",[341,359],"[cryptoCurrencies, getSparkLineData]"]