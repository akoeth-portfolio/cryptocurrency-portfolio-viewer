[{"C:\\Users\\burkb\\OneDrive\\Dokumente\\Web Dev\\crypto_portfolio_viewer-master\\crypto_portfolio_viewer-master\\frontend\\src\\App.js":"1","C:\\Users\\burkb\\OneDrive\\Dokumente\\Web Dev\\crypto_portfolio_viewer-master\\crypto_portfolio_viewer-master\\frontend\\src\\components\\navbar\\Navbar.js":"2","C:\\Users\\burkb\\OneDrive\\Dokumente\\Web Dev\\crypto_portfolio_viewer-master\\crypto_portfolio_viewer-master\\frontend\\src\\components\\layout\\Alert.js":"3","C:\\Users\\burkb\\OneDrive\\Dokumente\\Web Dev\\crypto_portfolio_viewer-master\\crypto_portfolio_viewer-master\\frontend\\src\\components\\auth\\Register.js":"4","C:\\Users\\burkb\\OneDrive\\Dokumente\\Web Dev\\crypto_portfolio_viewer-master\\crypto_portfolio_viewer-master\\frontend\\src\\actions\\positions.js":"5","C:\\Users\\burkb\\OneDrive\\Dokumente\\Web Dev\\crypto_portfolio_viewer-master\\crypto_portfolio_viewer-master\\frontend\\src\\auxiliary\\auxiliaryCryptoData.js":"6","C:\\Users\\burkb\\OneDrive\\Dokumente\\Web Dev\\crypto_portfolio_viewer-master\\crypto_portfolio_viewer-master\\frontend\\src\\components\\portfolio\\CurrencyTotalChart.js":"7","C:\\Users\\burkb\\OneDrive\\Dokumente\\Web Dev\\crypto_portfolio_viewer-master\\crypto_portfolio_viewer-master\\frontend\\src\\components\\portfolio\\Overview.js":"8","C:\\Users\\burkb\\OneDrive\\Dokumente\\Web Dev\\crypto_portfolio_viewer-master\\crypto_portfolio_viewer-master\\frontend\\src\\components\\portfolio\\Position.js":"9","C:\\Users\\burkb\\OneDrive\\Dokumente\\Web Dev\\crypto_portfolio_viewer-master\\crypto_portfolio_viewer-master\\frontend\\src\\components\\portfolio\\TotalChartDiagramm.js":"10","C:\\Users\\burkb\\OneDrive\\Dokumente\\Web Dev\\crypto_portfolio_viewer-master\\crypto_portfolio_viewer-master\\frontend\\src\\components\\layout\\Landing.js":"11","C:\\Users\\burkb\\OneDrive\\Dokumente\\Web Dev\\crypto_portfolio_viewer-master\\crypto_portfolio_viewer-master\\frontend\\src\\index.js":"12","C:\\Users\\burkb\\OneDrive\\Dokumente\\Web Dev\\crypto_portfolio_viewer-master\\crypto_portfolio_viewer-master\\frontend\\src\\components\\input\\PositionInput.js":"13","C:\\Users\\burkb\\OneDrive\\Dokumente\\Web Dev\\crypto_portfolio_viewer-master\\crypto_portfolio_viewer-master\\frontend\\src\\actions\\user.js":"14","C:\\Users\\burkb\\OneDrive\\Dokumente\\Web Dev\\crypto_portfolio_viewer-master\\crypto_portfolio_viewer-master\\frontend\\src\\components\\navbar\\AccountIcon.js":"15","C:\\Users\\burkb\\OneDrive\\Dokumente\\Web Dev\\crypto_portfolio_viewer-master\\crypto_portfolio_viewer-master\\frontend\\src\\components\\portfolio\\TotalChart.js":"16","C:\\Users\\burkb\\OneDrive\\Dokumente\\Web Dev\\crypto_portfolio_viewer-master\\crypto_portfolio_viewer-master\\frontend\\src\\components\\portfolio\\CurrencyTotalChartDiagram.js":"17","C:\\Users\\burkb\\OneDrive\\Dokumente\\Web Dev\\crypto_portfolio_viewer-master\\crypto_portfolio_viewer-master\\frontend\\src\\actions\\currencies.js":"18","C:\\Users\\burkb\\OneDrive\\Dokumente\\Web Dev\\crypto_portfolio_viewer-master\\crypto_portfolio_viewer-master\\frontend\\src\\components\\navbar\\Menu.js":"19"},{"size":4580,"mtime":1608656260236,"results":"20","hashOfConfig":"21"},{"size":760,"mtime":1608653549967,"results":"22","hashOfConfig":"21"},{"size":304,"mtime":1608653549858,"results":"23","hashOfConfig":"21"},{"size":2228,"mtime":1608653549803,"results":"24","hashOfConfig":"21"},{"size":305,"mtime":1608650659389,"results":"25","hashOfConfig":"21"},{"size":4876,"mtime":1608669139346,"results":"26","hashOfConfig":"21"},{"size":1966,"mtime":1608656045705,"results":"27","hashOfConfig":"21"},{"size":4566,"mtime":1608934696674,"results":"28","hashOfConfig":"21"},{"size":3293,"mtime":1608656074926,"results":"29","hashOfConfig":"21"},{"size":3596,"mtime":1608936354081,"results":"30","hashOfConfig":"21"},{"size":5172,"mtime":1608934752591,"results":"31","hashOfConfig":"21"},{"size":197,"mtime":1608650659328,"results":"32","hashOfConfig":"21"},{"size":2876,"mtime":1608653549830,"results":"33","hashOfConfig":"21"},{"size":433,"mtime":1608650659404,"results":"34","hashOfConfig":"21"},{"size":307,"mtime":1608653549927,"results":"35","hashOfConfig":"21"},{"size":1620,"mtime":1608934778090,"results":"36","hashOfConfig":"21"},{"size":1586,"mtime":1608850033828,"results":"37","hashOfConfig":"21"},{"size":4387,"mtime":1608650659375,"results":"38","hashOfConfig":"21"},{"size":745,"mtime":1608761326535,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},"eumt48",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"71"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\burkb\\OneDrive\\Dokumente\\Web Dev\\crypto_portfolio_viewer-master\\crypto_portfolio_viewer-master\\frontend\\src\\App.js",["87","88"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport { createPosition } from \"./actions/positions\";\nimport { getCurrenciesNames } from \"./auxiliary/auxiliaryCryptoData\";\nimport { getLatestCryptoPrice } from \"./actions/currencies\";\nimport { loadUser } from \"./auxiliary/auxiliaryUserData\";\nimport { signin } from \"./auxiliary/auxiliaryUserData\";\nimport { signout } from \"./auxiliary/auxiliaryUserData\";\nimport { signup } from \"./auxiliary/auxiliaryUserData\";\n\nimport Navbar from \"./components/navbar/Navbar\";\nimport Landing from \"./components/layout/Landing\";\nimport Login from \"./components/auth/Login\";\nimport Register from \"./components/auth/Register\";\n\nimport PositionInput from \"./components/input/PositionInput\";\n\nimport Position from \"./components/portfolio/Position\";\nimport PositionChart from \"./components/portfolio/PositionChart\";\n\nimport CurrencyTotalChart from \"./components/portfolio/CurrencyTotalChart\";\n\nimport Alert from \"./components/layout/Alert\";\n\nimport \"./App.css\";\n\nconst App = () => {\n  const [user, setUser] = useState({});\n\n  const [logedin, setLogedin] = useState(false);\n\n  const [alert, setAlert] = useState({});\n\n  const [cryptoCurrencies, setCryptoCurrencies] = useState({});\n\n  useEffect(() => {\n    loadUserObj();\n  }, []);\n\n  useEffect(() => {\n    async function updateState() {\n      if (logedin) {\n        const currencyNames = getCurrenciesNames(user);\n        const crypto = await getLatestCryptoPrice(currencyNames);\n        setCryptoCurrencies(crypto);\n      }\n    }\n    updateState();\n  }, [logedin]);\n\n  const makePosition = async (formData) => {\n    const position = await createPosition(formData);\n    if (position instanceof Error) {\n      triggerAlert(position.response.data.errors.msg, \"danger\");\n    } else {\n      triggerAlert(\"Position added\", \"success\");\n    }\n  };\n\n  const login = async (email, password) => {\n    const token = await signin(email, password);\n    if (token instanceof Error) {\n      triggerAlert(token.response.data.errors.msg, \"danger\");\n    } else {\n      loadUserObj();\n    }\n  };\n\n  const loadUserObj = async () => {\n    const userObj = await loadUser();\n    if (userObj instanceof Error) {\n      triggerAlert(userObj.response.data.errors.msg, \"danger\");\n    } else {\n      setUser(userObj);\n      setLogedin(true);\n    }\n  };\n\n  const logout = () => {\n    signout();\n    setUser({});\n    setLogedin(false);\n  };\n\n  const register = (email, password, password2) => {\n    const token = signup(email, password, password2);\n    if (token instanceof Error) {\n      triggerAlert(token.response.data.errors.msg, \"danger\");\n    } else {\n      loadUser();\n    }\n  };\n\n  const triggerAlert = (msg, alertType) => {\n    setAlert({\n      message: msg,\n      type: alertType,\n    });\n    setTimeout(() => setAlert({}), 20000);\n  };\n\n  const removeAlert = () => setAlert({});\n\n  return (\n    <Router>\n      <Fragment>\n        <Navbar logout={logout} logedin={logedin} />\n        <Alert alert={alert} removeAlert={removeAlert} />\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={() => (\n              <Landing\n                user={user}\n                cryptoCurrencies={cryptoCurrencies}\n                logedin={logedin}\n                triggerAlert={triggerAlert}\n              />\n            )}\n          />\n          <Route exact path=\"/position\" render={() => <Position />} />\n          <Route\n            exact\n            path=\"/position_chart\"\n            render={() => <PositionChart />}\n          />\n          <Route\n            exact\n            path=\"/currency_total_chart\"\n            render={() => (\n              <CurrencyTotalChart\n                user={user}\n                cryptoCurrencies={cryptoCurrencies}\n                logedin={logedin}\n              />\n            )}\n          />\n\n          <Route\n            exact\n            path=\"/login\"\n            render={() => <Login login={login} logedin={logedin} />}\n          />\n          <Route\n            exact\n            path=\"/register\"\n            render={() => <Register register={register} logedin={logedin} />}\n          />\n          {logedin && (\n            <Route\n              exact\n              path=\"/input\"\n              render={() => (\n                <PositionInput\n                  makePosition={makePosition}\n                  loadUser={loadUser}\n                />\n              )}\n            />\n          )}\n        </Switch>\n      </Fragment>\n    </Router>\n  );\n};\n\nexport default App;\n",["89","90"],"C:\\Users\\burkb\\OneDrive\\Dokumente\\Web Dev\\crypto_portfolio_viewer-master\\crypto_portfolio_viewer-master\\frontend\\src\\components\\navbar\\Navbar.js",[],["91","92"],"C:\\Users\\burkb\\OneDrive\\Dokumente\\Web Dev\\crypto_portfolio_viewer-master\\crypto_portfolio_viewer-master\\frontend\\src\\components\\layout\\Alert.js",[],"C:\\Users\\burkb\\OneDrive\\Dokumente\\Web Dev\\crypto_portfolio_viewer-master\\crypto_portfolio_viewer-master\\frontend\\src\\components\\auth\\Register.js",["93","94"],"import React, { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\n\nconst Register = ({ logedin, signup }) => {\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n    password2: \"\",\n  });\n\n  const { firstname, lastname, email, password, password2 } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    signup(email, password, password2);\n  };\n\n  // if some nasty user enters .../login in url --> redirect to landing page\n  // otherwhise the register form could be displayed to a logged in user\n  if (logedin) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <div className=\"form_container\">\n      <h3 className=\"large text-primary\">Sign Up</h3>\n      <p className=\"lead\">\n        <i className=\"fa fa-user auth_fa-user\"></i> Create your account\n      </p>\n      <form className=\"form\" onSubmit={(e) => onSubmit(e)}>\n        <div className=\"form-group\">\n          <input\n            className=\"form-control input_field\"\n            type=\"email\"\n            placeholder=\"Email Address\"\n            name=\"email\"\n            value={email}\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            className=\"form-control input_field\"\n            type=\"password\"\n            placeholder=\"Password\"\n            name=\"password\"\n            value={password}\n            onChange={(e) => onChange(e)}\n            minLength=\"6\"\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            className=\"form-control input_field\"\n            type=\"password\"\n            placeholder=\"Confirm Password\"\n            name=\"password2\"\n            value={password2}\n            onChange={(e) => onChange(e)}\n            minLength=\"6\"\n            required\n          />\n        </div>\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\n      </form>\n      <p className=\"my-1\">\n        Already have an account? <Link to=\"/login\">Sign In</Link>\n      </p>\n    </div>\n  );\n};\n\nexport default Register;\n",["95","96"],"C:\\Users\\burkb\\OneDrive\\Dokumente\\Web Dev\\crypto_portfolio_viewer-master\\crypto_portfolio_viewer-master\\frontend\\src\\actions\\positions.js",[],["97","98"],"C:\\Users\\burkb\\OneDrive\\Dokumente\\Web Dev\\crypto_portfolio_viewer-master\\crypto_portfolio_viewer-master\\frontend\\src\\auxiliary\\auxiliaryCryptoData.js",["99","100","101"],"export const getCurrenciesNames = (user) => {\r\n  let currencyArr = [];\r\n  if (user.positions) {\r\n    user.positions.map((position) =>\r\n      currencyArr.push(position.crypto_currency)\r\n    );\r\n  }\r\n\r\n  // techsith's recommended way to remove duplicates from array (https://www.youtube.com/watch?v=dvPybpgk5Y4)\r\n\r\n  return [...new Set(currencyArr)];\r\n};\r\n\r\nexport const getNamesAndValues = (user, cryptoCurrencies) => {\r\n  let namesAndValuesObj = {};\r\n\r\n  getCurrenciesNames(user).forEach((currencyName) => {\r\n    namesAndValuesObj[currencyName] = getCurrentValue(\r\n      user,\r\n      cryptoCurrencies,\r\n      currencyName\r\n    );\r\n  });\r\n\r\n  let res = Object.entries(namesAndValuesObj).sort(function (a, b) {\r\n    return b[1] - a[1];\r\n  });\r\n\r\n  return res;\r\n};\r\n\r\nexport const getCurrentValue = (user, cryptoCurrencies, currencyName) => {\r\n  const currentPrice = getCurrentPrice(cryptoCurrencies, currencyName);\r\n  const amount = getAmount(user, currencyName);\r\n  const getCurrentValue = currentPrice * amount;\r\n  // console.log(getCurrentValue);\r\n  return getCurrentValue;\r\n};\r\n\r\nexport const getCurrentPrice = (cryptoCurrencies, currencyName) => {\r\n  if (cryptoCurrencies.data && typeof currencyName === \"string\")\r\n    return cryptoCurrencies.data.find((el) => el.id === currencyName)\r\n      .current_price;\r\n};\r\n\r\nexport const getCurrencyPositions = (user, currencyName) => {\r\n  if (user.positions) {\r\n    return user.positions.filter(\r\n      (position) => position.crypto_currency === currencyName\r\n    );\r\n  }\r\n};\r\n\r\nexport const getAmount = (user, currencyName) => {\r\n  let sum = 0;\r\n  if (user.positions) {\r\n    user.positions.map((position) => {\r\n      if (position.crypto_currency === currencyName) {\r\n        sum += parseFloat(position.amount);\r\n      }\r\n    });\r\n  }\r\n\r\n  return sum;\r\n};\r\n\r\nconst getAmountAndDate = (positions, currencyName) => {\r\n  // extracts amount of coins, date of purchase and price\r\n  let AmountAndDateArr = [];\r\n\r\n  positions.forEach((el) => {\r\n    let arrEl = [];\r\n\r\n    if (el.crypto_currency === currencyName) {\r\n      arrEl[0] = Date.parse(el.date_of_purchase);\r\n      arrEl[1] = parseFloat(el.amount);\r\n      arrEl[2] = el.price;\r\n      AmountAndDateArr.push(arrEl);\r\n    }\r\n  });\r\n\r\n  // sorts AmountAndDateArr by purchase date beginning with the oldest\r\n  let sort = AmountAndDateArr.sort(function (a, b) {\r\n    return a[0] - b[0];\r\n  });\r\n\r\n  // adds amount of coins in array so that each amount is the sum of itself + the previous amount\r\n  for (const element in sort) {\r\n    element > 0\r\n      ? (sort[element][1] = sort[element][1] + sort[element - 1][1])\r\n      : (sort[element][1] = sort[element][1]);\r\n  }\r\n\r\n  // adds price of individual purchases so that each price in array is the sum of itself + the previous amount\r\n  for (const element in sort) {\r\n    element > 0\r\n      ? (sort[element][2] = sort[element][2] + sort[element - 1][2])\r\n      : (sort[element][2] = sort[element][2]);\r\n  }\r\n  return sort;\r\n};\r\n\r\n// returns object which has various arrays (initialValueArray, currentValueArray etc..)\r\n// is beeing called from @components/portfolio/TotalChartDiagramm.js for individual currency charts and CurrencyTotalChart.js\r\n// for charts which have combined values of all the currencies a user has\r\nexport const cumulativeValueInvestment = (positions, marketChart, currency) => {\r\n  let resultObject = {};\r\n  let initialValueArr = [];\r\n  let currentValueArr = [];\r\n  let balanceArr = [];\r\n  let roiArr = [];\r\n  let timeStampArr = [];\r\n\r\n  getAmountAndDate(positions, currency).forEach((array1) => {\r\n    marketChart.forEach((array2, index) => {\r\n      if (array1[0] <= array2[0]) {\r\n        currentValueArr[index] = array2[1] * array1[1];\r\n        timeStampArr[index] = getTimeStamps(marketChart, index, array2);\r\n        initialValueArr[index] = array1[2];\r\n        balanceArr[index] = currentValueArr[index] - initialValueArr[index];\r\n        roiArr[index] =\r\n          (currentValueArr[index] * 100) / initialValueArr[index] - 100;\r\n      }\r\n    });\r\n  });\r\n\r\n  resultObject.initialValueArray = initialValueArr;\r\n  resultObject.currentValueArray = currentValueArr;\r\n  resultObject.balanceArray = balanceArr;\r\n  resultObject.roiArray = roiArr;\r\n  resultObject.timeStampArray = timeStampArr;\r\n\r\n  return resultObject;\r\n};\r\n\r\n// returns duration in days -> from date of first purchase currency until now\r\n// duration is beeing used in conditional to make sure that x-axis doesn't have too many timestamps (granularity of data returned by API)\r\nconst checkDuration = (marketChart) =>\r\n  (marketChart[marketChart.length - 1][0] - marketChart[0][0]) /\r\n  1000 /\r\n  (24 * 60 * 60);\r\n\r\nconst getTimeStamps = (marketChart, index, array2) => {\r\n  if (\r\n    index === 0 || checkDuration(marketChart) < 90\r\n      ? index % 10 === 0\r\n      : index % 5 === 0\r\n  ) {\r\n    return array2[2];\r\n  } else {\r\n    return \" \";\r\n  }\r\n};\r\n","C:\\Users\\burkb\\OneDrive\\Dokumente\\Web Dev\\crypto_portfolio_viewer-master\\crypto_portfolio_viewer-master\\frontend\\src\\components\\portfolio\\CurrencyTotalChart.js",["102"],"C:\\Users\\burkb\\OneDrive\\Dokumente\\Web Dev\\crypto_portfolio_viewer-master\\crypto_portfolio_viewer-master\\frontend\\src\\components\\portfolio\\Overview.js",["103","104"],"C:\\Users\\burkb\\OneDrive\\Dokumente\\Web Dev\\crypto_portfolio_viewer-master\\crypto_portfolio_viewer-master\\frontend\\src\\components\\portfolio\\Position.js",["105","106"],"C:\\Users\\burkb\\OneDrive\\Dokumente\\Web Dev\\crypto_portfolio_viewer-master\\crypto_portfolio_viewer-master\\frontend\\src\\components\\portfolio\\TotalChartDiagramm.js",["107","108"],"C:\\Users\\burkb\\OneDrive\\Dokumente\\Web Dev\\crypto_portfolio_viewer-master\\crypto_portfolio_viewer-master\\frontend\\src\\components\\layout\\Landing.js",["109","110"],"C:\\Users\\burkb\\OneDrive\\Dokumente\\Web Dev\\crypto_portfolio_viewer-master\\crypto_portfolio_viewer-master\\frontend\\src\\index.js",[],["111","112"],"C:\\Users\\burkb\\OneDrive\\Dokumente\\Web Dev\\crypto_portfolio_viewer-master\\crypto_portfolio_viewer-master\\frontend\\src\\components\\input\\PositionInput.js",[],"C:\\Users\\burkb\\OneDrive\\Dokumente\\Web Dev\\crypto_portfolio_viewer-master\\crypto_portfolio_viewer-master\\frontend\\src\\actions\\user.js",[],"C:\\Users\\burkb\\OneDrive\\Dokumente\\Web Dev\\crypto_portfolio_viewer-master\\crypto_portfolio_viewer-master\\frontend\\src\\components\\navbar\\AccountIcon.js",["113"],"C:\\Users\\burkb\\OneDrive\\Dokumente\\Web Dev\\crypto_portfolio_viewer-master\\crypto_portfolio_viewer-master\\frontend\\src\\components\\portfolio\\TotalChart.js",["114"],"C:\\Users\\burkb\\OneDrive\\Dokumente\\Web Dev\\crypto_portfolio_viewer-master\\crypto_portfolio_viewer-master\\frontend\\src\\components\\portfolio\\CurrencyTotalChartDiagram.js",[],"C:\\Users\\burkb\\OneDrive\\Dokumente\\Web Dev\\crypto_portfolio_viewer-master\\crypto_portfolio_viewer-master\\frontend\\src\\actions\\currencies.js",["115","116"],"import axios from \"axios\";\n\nexport const getLatestCryptoPrice = async (currencyNamesArr) => {\n  console.log(\"getLatestCryptoPrice() @currencies.js\");\n  const currencyNamesString = await getNameString(currencyNamesArr);\n\n  const urlString = `https://api.coingecko.com/api/v3/coins/markets?vs_currency=eur&ids=${currencyNamesString}b&order=market_cap_desc&per_page=100&page=1&sparkline=false`;\n\n  try {\n    const res = await axios.get(urlString);\n\n    return res;\n  } catch (err) {\n    return err;\n  }\n};\n\nconst getNameString = async (currencyNamesArr) => {\n  let nameString = \"\";\n\n  currencyNamesArr.forEach((el) => (nameString += `${el}%2C%20`));\n\n  return nameString;\n};\n\nexport const getMarketCharts = async (currency, date_of_purchase) => {\n  console.log(\"getMarketCharts() @currencies.js\");\n  const from = new Date(date_of_purchase).getTime() / 1000;\n  const to = new Date().getTime() / 1000;\n\n  const urlString = `https://api.coingecko.com/api/v3/coins/${currency}/market_chart/range?vs_currency=eur&from=${from}&to=${to}`;\n\n  try {\n    const res = await axios.get(urlString);\n\n    return res;\n  } catch (err) {\n    return err;\n  }\n};\n\nexport const getMarketChartsCrypto = async (\n  user,\n  currency,\n  current_price,\n  duration\n) => {\n  console.log(\"getMarketChartsCrypto() @currencies.js\");\n  let from = null;\n  let date = null;\n\n  switch (duration) {\n    case \"day\":\n      date = new Date();\n      date.setDate(date.getDate() - 1);\n      from = date / 1000;\n      break;\n    case \"week\":\n      date = new Date();\n      date.setDate(date.getDate() - 7);\n      from = date / 1000;\n      break;\n    case \"month\":\n      date = new Date();\n      date.setDate(date.getDate() - 30);\n      from = date / 1000;\n      break;\n    case \"all_currency\":\n      from = new Date(await getFromDate(user, currency)).getTime() / 1000;\n      break;\n    case \"all_total\":\n      const res = user.positions.sort(\n        (a, b) =>\n          Date.parse(a.date_of_purchase) - Date.parse(b.date_of_purchase)\n      );\n      from = new Date(res[0].date_of_purchase).getTime() / 1000;\n      break;\n  }\n\n  const to = new Date().getTime() / 1000;\n\n  const urlString = `https://api.coingecko.com/api/v3/coins/${currency}/market_chart/range?vs_currency=eur&from=${from}&to=${to}`;\n\n  const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n\n  try {\n    const dataSequence = await axios.get(proxyurl + urlString);\n\n    // replaces the last price in the array with the most recent price so the last data point in @components/layout/CurrencyTotalChart.js and TotalChart.js\n    // are always up to date\n    dataSequence.data.prices[\n      dataSequence.data.prices.length - 1\n    ][1] = current_price;\n\n    const dataSequenceTransformed = addDateToArr(dataSequence.data.prices);\n\n    let returnValue = \"\";\n\n    switch (duration) {\n      case \"day\":\n        returnValue = dataSequenceTransformed.slice(0, 260);\n        break;\n      case \"week\":\n        returnValue = dataSequenceTransformed.slice(0, 165);\n        break;\n      case \"month\":\n        returnValue = dataSequenceTransformed.slice(0, 720);\n        break;\n      case \"all_currency\":\n        returnValue = dataSequenceTransformed;\n        break;\n      case \"all_total\":\n        returnValue = dataSequenceTransformed;\n        break;\n    }\n\n    return returnValue;\n  } catch (error) {\n    return error;\n  }\n};\n\nconst getFromDate = (user, currency) => {\n  let dates = [];\n\n  currency\n    ? user.positions.forEach((position) => {\n        if (position.crypto_currency === currency)\n          dates.push(position.date_of_purchase);\n      })\n    : user.positions.forEach((position) =>\n        dates.push(position.date_of_purchase)\n      );\n\n  let sort = dates.sort(function (a, b) {\n    return Date.parse(a) > Date.parse(b);\n  });\n\n  // conditionally return because sequence in sort array is beeing turned around on reload (for some reason) sometimes returning the latest, rather than the earliest date\n  return sort[0] > sort[sort.length - 1] ? sort[sort.length - 1] : sort[0];\n};\n\nconst addDateToArr = (arr) =>\n  arr.map((el, index) => {\n    const date = new Date(el[0]);\n    const day =\n      date.getDate() < 10 ? \"0\" + date.getDate() : \"\" + date.getDate();\n    const month = date.toLocaleString(\"default\", { month: \"long\" });\n    const year = date.getFullYear();\n    const dateString = `${day}. ${month} ${year}`;\n    return [...arr[index], dateString];\n  });\n","C:\\Users\\burkb\\OneDrive\\Dokumente\\Web Dev\\crypto_portfolio_viewer-master\\crypto_portfolio_viewer-master\\frontend\\src\\components\\navbar\\Menu.js",[],{"ruleId":"117","severity":1,"message":"118","line":39,"column":6,"nodeType":"119","endLine":39,"endColumn":8,"suggestions":"120"},{"ruleId":"117","severity":1,"message":"121","line":50,"column":6,"nodeType":"119","endLine":50,"endColumn":15,"suggestions":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"123","replacedBy":"127"},{"ruleId":"125","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":11,"column":11,"nodeType":"131","messageId":"132","endLine":11,"endColumn":20},{"ruleId":"129","severity":1,"message":"133","line":11,"column":22,"nodeType":"131","messageId":"132","endLine":11,"endColumn":30},{"ruleId":"123","replacedBy":"134"},{"ruleId":"125","replacedBy":"135"},{"ruleId":"123","replacedBy":"136"},{"ruleId":"125","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":57,"column":35,"nodeType":"140","messageId":"141","endLine":57,"endColumn":37},{"ruleId":"142","severity":1,"message":"143","line":91,"column":29,"nodeType":"144","messageId":"145","endLine":91,"endColumn":45},{"ruleId":"142","severity":1,"message":"146","line":98,"column":29,"nodeType":"144","messageId":"145","endLine":98,"endColumn":45},{"ruleId":"117","severity":1,"message":"147","line":46,"column":6,"nodeType":"119","endLine":46,"endColumn":39,"suggestions":"148"},{"ruleId":"117","severity":1,"message":"149","line":34,"column":6,"nodeType":"119","endLine":34,"endColumn":55,"suggestions":"150"},{"ruleId":"138","severity":1,"message":"139","line":38,"column":35,"nodeType":"140","messageId":"141","endLine":38,"endColumn":37},{"ruleId":"151","severity":1,"message":"152","line":10,"column":28,"nodeType":"153","messageId":"154","endLine":10,"endColumn":30},{"ruleId":"117","severity":1,"message":"155","line":13,"column":6,"nodeType":"119","endLine":13,"endColumn":8,"suggestions":"156"},{"ruleId":"117","severity":1,"message":"157","line":42,"column":6,"nodeType":"119","endLine":42,"endColumn":8,"suggestions":"158"},{"ruleId":"117","severity":1,"message":"159","line":102,"column":6,"nodeType":"119","endLine":102,"endColumn":47,"suggestions":"160"},{"ruleId":"129","severity":1,"message":"161","line":1,"column":37,"nodeType":"131","messageId":"132","endLine":1,"endColumn":46},{"ruleId":"129","severity":1,"message":"162","line":22,"column":10,"nodeType":"131","messageId":"132","endLine":22,"endColumn":27},{"ruleId":"123","replacedBy":"163"},{"ruleId":"125","replacedBy":"164"},{"ruleId":"129","severity":1,"message":"165","line":1,"column":17,"nodeType":"131","messageId":"132","endLine":1,"endColumn":25},{"ruleId":"117","severity":1,"message":"166","line":16,"column":6,"nodeType":"119","endLine":16,"endColumn":12,"suggestions":"167"},{"ruleId":"168","severity":1,"message":"169","line":52,"column":3,"nodeType":"170","messageId":"171","endLine":78,"endColumn":4},{"ruleId":"168","severity":1,"message":"169","line":99,"column":5,"nodeType":"170","messageId":"171","endLine":115,"endColumn":6},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadUserObj'. Either include it or remove the dependency array.","ArrayExpression",["172"],"React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["173"],"no-native-reassign",["174"],"no-negated-in-lhs",["175"],["174"],["175"],"no-unused-vars","'firstname' is assigned a value but never used.","Identifier","unusedVar","'lastname' is assigned a value but never used.",["174"],["175"],["174"],["175"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-self-assign","'sort[element][1]' is assigned to itself.","MemberExpression","selfAssignment","'sort[element][2]' is assigned to itself.","React Hook useEffect has a missing dependency: 'currency'. Either include it or remove the dependency array.",["176"],"React Hook useEffect has a missing dependency: 'getTotalPurchase'. Either include it or remove the dependency array.",["177"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'data.current_price'. Either include it or remove the dependency array.",["178"],"React Hook useEffect has missing dependencies: 'fiat' and 'origin'. Either include them or remove the dependency array. If 'setLabelStr' needs the current value of 'fiat', you can also switch to useReducer instead of useState and read 'fiat' in the reducer.",["179"],"React Hook useEffect has missing dependencies: 'currency' and 'positions'. Either include them or remove the dependency array.",["180"],"'useEffect' is defined but never used.","'originAndCurrency' is assigned a value but never used.",["174"],["175"],"'Fragment' is defined but never used.","React Hook useEffect has a missing dependency: 'upDateMarketChartState'. Either include it or remove the dependency array. If 'upDateMarketChartState' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["181"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase",{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},"no-global-assign","no-unsafe-negation",{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},"Update the dependencies array to be: [loadUserObj]",{"range":"198","text":"199"},"Update the dependencies array to be: [logedin, user]",{"range":"200","text":"201"},"Update the dependencies array to be: [user, cryptoCurrencies, logedin, currency]",{"range":"202","text":"203"},"Update the dependencies array to be: [user, cryptoCurrencies, logedin, renderOverview, getTotalPurchase]",{"range":"204","text":"205"},"Update the dependencies array to be: [data.current_price]",{"range":"206","text":"207"},"Update the dependencies array to be: [fiat, origin]",{"range":"208","text":"209"},"Update the dependencies array to be: [nameArray, currentMarketChart, duration, currency, positions]",{"range":"210","text":"211"},"Update the dependencies array to be: [upDateMarketChartState, user]",{"range":"212","text":"213"},[1343,1345],"[loadUserObj]",[1622,1631],"[logedin, user]",[1555,1588],"[user, cryptoCurrencies, logedin, currency]",[1080,1129],"[user, cryptoCurrencies, logedin, renderOverview, getTotalPurchase]",[423,425],"[data.current_price]",[1112,1114],"[fiat, origin]",[2929,2970],"[nameArray, currentMarketChart, duration, currency, positions]",[305,311],"[upDateMarketChartState, user]"]