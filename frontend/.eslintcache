[{"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/overview/Twenty4hChangeInvestmentTotal.js":"1","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/overview/OverviewCurrencies.js":"2","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/overview/Twenty4hChangeByCurrency.js":"3","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/charts/TotalChartDiagramm.js":"4","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/charts/Twenty4hChange.js":"5","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/index.js":"6","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/auxiliary/auxiliaryUserData.js":"7","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/layout/Landing.js":"8","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/layout/Alert.js":"9","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/auth/Login.js":"10","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/input/AddCrypto.js":"11","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/positions/PositionChart.js":"12","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/positions/PositionChartDiagram.js":"13","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/utils/setAuthToken.js":"14","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/navbar/Menu.js":"15","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/overview/OverviewTotal.js":"16","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/overview/Twenty4hChangeInvestmentByCurrencies.js":"17","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/actions/currencies.js":"18","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/positions/Position.js":"19","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/actions/positions.js":"20","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/input/DeductCrypto.js":"21","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/navbar/AccountIcon.js":"22","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/auxiliary/auxiliaryCryptoData.js":"23","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/actions/user.js":"24","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/charts/TotalChart.js":"25","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/auth/Register.js":"26","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/overview/Overview.js":"27","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/navbar/Navbar.js":"28","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/App.js":"29","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/actions/auth.js":"30","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/charts/SparkLine.js":"31","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/charts/SparkLineCharts.js":"32","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/navbar/Fiat.js":"33","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/auxiliary/auxiliaryDateData.js":"34","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/auxiliary/auxiliaryFiatData.js":"35"},{"size":508,"mtime":1610834986464,"results":"36","hashOfConfig":"37"},{"size":7338,"mtime":1611016566344,"results":"38","hashOfConfig":"37"},{"size":1527,"mtime":1610840353701,"results":"39","hashOfConfig":"37"},{"size":5847,"mtime":1611018747131,"results":"40","hashOfConfig":"37"},{"size":1301,"mtime":1610327550686,"results":"41","hashOfConfig":"37"},{"size":197,"mtime":1609170003662,"results":"42","hashOfConfig":"37"},{"size":641,"mtime":1609170003658,"results":"43","hashOfConfig":"37"},{"size":6723,"mtime":1611019307311,"results":"44","hashOfConfig":"37"},{"size":304,"mtime":1609170003658,"results":"45","hashOfConfig":"37"},{"size":1764,"mtime":1609170003658,"results":"46","hashOfConfig":"37"},{"size":4177,"mtime":1610841013877,"results":"47","hashOfConfig":"37"},{"size":947,"mtime":1609170003662,"results":"48","hashOfConfig":"37"},{"size":1026,"mtime":1609170003662,"results":"49","hashOfConfig":"37"},{"size":453,"mtime":1609170003662,"results":"50","hashOfConfig":"37"},{"size":745,"mtime":1609170003658,"results":"51","hashOfConfig":"37"},{"size":3655,"mtime":1610834961240,"results":"52","hashOfConfig":"37"},{"size":1785,"mtime":1610834901540,"results":"53","hashOfConfig":"37"},{"size":6878,"mtime":1611016857280,"results":"54","hashOfConfig":"37"},{"size":3446,"mtime":1609624366781,"results":"55","hashOfConfig":"37"},{"size":357,"mtime":1610555880309,"results":"56","hashOfConfig":"37"},{"size":5330,"mtime":1610834854959,"results":"57","hashOfConfig":"37"},{"size":307,"mtime":1609170003658,"results":"58","hashOfConfig":"37"},{"size":5843,"mtime":1611016617664,"results":"59","hashOfConfig":"37"},{"size":433,"mtime":1609170003658,"results":"60","hashOfConfig":"37"},{"size":1936,"mtime":1611018889799,"results":"61","hashOfConfig":"37"},{"size":2232,"mtime":1610814403131,"results":"62","hashOfConfig":"37"},{"size":4754,"mtime":1611016980160,"results":"63","hashOfConfig":"37"},{"size":1068,"mtime":1610403873911,"results":"64","hashOfConfig":"37"},{"size":6395,"mtime":1610760399634,"results":"65","hashOfConfig":"37"},{"size":957,"mtime":1609170003658,"results":"66","hashOfConfig":"37"},{"size":2953,"mtime":1610555375921,"results":"67","hashOfConfig":"37"},{"size":1070,"mtime":1610396805951,"results":"68","hashOfConfig":"37"},{"size":349,"mtime":1610403881087,"results":"69","hashOfConfig":"37"},{"size":288,"mtime":1610667840005,"results":"70","hashOfConfig":"37"},{"size":1319,"mtime":1610827508225,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"1m2r51w",{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"95"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"100"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"119"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"74"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"74"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"100"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/overview/Twenty4hChangeInvestmentTotal.js",[],["158","159"],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/overview/OverviewCurrencies.js",["160","161"],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/overview/Twenty4hChangeByCurrency.js",[],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/charts/TotalChartDiagramm.js",["162","163","164","165"],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/charts/Twenty4hChange.js",["166"],"import React, { useState, useEffect } from \"react\";\n\nconst Twenty4hChange = ({ dataArray }) => {\n  const [change, setChange] = useState(0);\n  const [twentyFourHoursMax, setTwentyFourHoursMax] = useState(0);\n  const [twentyFourHoursMin, setTwentyFourHoursMin] = useState(0);\n\n  useEffect(() => {\n    // array has NaN in the end which have to be removed because else change = NaN\n    const arr = dataArray.filter((el) => !isNaN(el));\n    setChange(dataArray[arr.length - 1] - arr[0]);\n    setTwentyFourHoursMax(get24hMax());\n    setTwentyFourHoursMin(get24hMin());\n  }, [dataArray]);\n\n  const get24hMax = () => {\n    const arraySorted = dataArray.sort(function (a, b) {\n      return b - a;\n    });\n\n    return arraySorted[0];\n  };\n\n  const get24hMin = () => {\n    const arrSorted = dataArray.sort(function (a, b) {\n      return a - b;\n    });\n\n    return arrSorted[0];\n  };\n\n  return (\n    <div className=\"twenty_four_hour_charts_container\">\n      <div\n        style={{\n          color: change > 0 ? \"green\" : \"red\",\n        }}\n      >\n        change: {change.toFixed(2)} &euro;\n      </div>\n      <div className=\"crypto_24h_change\">max: {twentyFourHoursMax} &euro;</div>\n      <div className=\"crypto_24h_change\">min: {twentyFourHoursMin} &euro;</div>\n    </div>\n  );\n};\n\nexport default Twenty4hChange;\n",["167","168"],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/index.js",[],["169","170"],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/auxiliary/auxiliaryUserData.js",[],["171","172"],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/layout/Landing.js",["173"],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/layout/Alert.js",[],["174","175"],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/auth/Login.js",[],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/input/AddCrypto.js",[],["176","177"],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/positions/PositionChart.js",["178"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { getMarketCharts } from \"../../actions/currencies\";\nimport PositionChartDiagram from \"./PositionChartDiagram\";\n\nconst PositionChart = () => {\n  let data = useLocation();\n\n  const [marketChart, setMarketChart] = useState({});\n\n  useEffect(() => {\n    const updateStates = async () => {\n      const chartData = await getMarketCharts(\n        data.state.currency,\n        data.state.date_of_purchase\n      );\n      setMarketChart(chartData);\n    };\n\n    updateStates();\n  }, []);\n\n  function isEmpty(obj) {\n    return Object.keys(obj).length === 0;\n  }\n\n  return isEmpty(marketChart) ? (\n    <div>Loading ...</div>\n  ) : (\n    <div>\n      <Fragment>\n        <PositionChartDiagram\n          marketChart={marketChart}\n          amount={data.state.amount}\n        />\n      </Fragment>\n    </div>\n  );\n};\n\nexport default PositionChart;\n","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/positions/PositionChartDiagram.js",[],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/utils/setAuthToken.js",[],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/navbar/Menu.js",[],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/overview/OverviewTotal.js",["179","180"],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/overview/Twenty4hChangeInvestmentByCurrencies.js",[],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/actions/currencies.js",[],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/positions/Position.js",["181","182"],"import React, { Fragment, useEffect } from \"react\";\nimport { getCurrencyPositions } from \"../../auxiliary/auxiliaryCryptoData\";\nimport { useLocation } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\n\nfunction Position() {\n  const data = useLocation();\n\n  useEffect(() => {\n    if (data.current_price != undefined) {\n      sessionStorage.setItem(\"crypto_inv_current_price\", data.current_price);\n    }\n  }, []);\n\n  const transformDate = (val) => {\n    const date = new Date(val);\n    const day =\n      date.getDate() < 10 ? \"0\" + date.getDate() : \"\" + date.getDate();\n    const month = date.toLocaleString(\"default\", { month: \"long\" });\n    const year = date.getFullYear();\n    const dateString = `${day}. ${month} ${year}`;\n    return dateString;\n  };\n\n  const getSortedPositions = () => {\n    const positionsArray = getCurrencyPositions(\n      data.state.user,\n      data.state.currency\n    );\n    const sortedArray = positionsArray.sort(\n      (a, b) => Date.parse(b.date_of_purchase) - Date.parse(a.date_of_purchase)\n    );\n    return sortedArray;\n  };\n\n  return (\n    <Fragment>\n      <div>\n        current price per coin:\n        {data.current_price ||\n          sessionStorage.getItem(\"crypto_inv_current_price\")}{\" \"}\n        {data.state.user.positions[0].fiat_currency}\n      </div>\n      <div className=\"row\">\n        {getSortedPositions().map((position) => {\n          return (\n            <Link\n              id=\"position\"\n              to={{\n                pathname: \"/position_chart\",\n                state: {\n                  currency: position.crypto_currency,\n                  date_of_purchase: position.date_of_purchase,\n                  amount: position.amount,\n                },\n              }}\n            >\n              <div className=\"col\">amount: {position.amount}</div>\n              <div className=\"col\">\n                price per coin at time of purchase:\n                {(position.price / position.amount).toFixed(2)}\n              </div>\n              <div className=\"col\">\n                purchase date:\n                {/* {position.date_of_purchase.split(\"T\").slice(0, 1).join(\"\")} */}\n                {transformDate(position.date_of_purchase)}\n              </div>\n              <div className=\"col\">\n                initial value:\n                {position.price}\n                {position.fiat_currency}\n              </div>\n              <div className=\"col\">\n                current value:\n                {data.current_price === undefined\n                  ? (\n                      sessionStorage.getItem(\"crypto_inv_current_price\") *\n                      position.amount\n                    ).toFixed(2)\n                  : (data.current_price * position.amount).toFixed(2)}\n                {position.fiat_currency}\n              </div>\n\n              <div className=\"col\">\n                balance:\n                {data.current_price === undefined\n                  ? (\n                      sessionStorage.getItem(\"crypto_inv_current_price\") *\n                        position.amount -\n                      position.price\n                    ).toFixed(2)\n                  : (\n                      data.current_price * position.amount -\n                      position.price\n                    ).toFixed(2)}\n                {position.fiat_currency}\n              </div>\n            </Link>\n          );\n        })}\n      </div>\n    </Fragment>\n  );\n}\n\nexport default Position;\n",["183","184"],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/actions/positions.js",[],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/input/DeductCrypto.js",["185"],"import React, { useState, useEffect } from \"react\";\nimport { getAmount } from \"../../auxiliary/auxiliaryCryptoData\";\nimport { getCurrenciesNames } from \"../../auxiliary/auxiliaryCryptoData\";\nimport { getInitialValue } from \"../../auxiliary/auxiliaryCryptoData\";\nimport { convertFiat } from \"../../auxiliary/auxiliaryFiatData\";\n\n// import { getLatestCryptoPrice } from \"../../actions/currencies\";\n\nconst DeductCrypto = ({ user, makePosition, loadUserObj, triggerAlert }) => {\n  let [formData, setFormData] = useState({\n    crypto_currency: \"\",\n    amount: \"\",\n    date_of_purchase: \"\",\n  });\n\n  const { crypto_currency, amount, date_of_purchase } = formData;\n\n  const [currencyNames, setCurrencyNames] = useState([]);\n\n  useEffect(() => {\n    const namesArr = getCurrenciesNames(user);\n    namesArr.unshift(\"\");\n    setCurrencyNames(namesArr);\n  }, []);\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n\n    // user input validation\n    if (!crypto_currency) {\n      triggerAlert(\"Please select a cryptocurrency\", \"danger\");\n      return;\n    }\n\n    const currentAmount = getAmount(user, crypto_currency);\n\n    if (amount > currentAmount) {\n      triggerAlert(\n        `You have only ${currentAmount} unit(s) of this currency`,\n        \"danger\"\n      );\n      return;\n    }\n\n    // value of the amount (in fiat) to be deducted from the amount of a crypto currency in the portfolio is calculated based on the median value\n    // of all positions of this currency\n    const median_price_currency_positions =\n      getInitialValue(user, crypto_currency, { current: \"EUR\" }) /\n      getAmount(user, crypto_currency);\n\n    // calculates the actual value of the deductable amount\n    const deductable_value = median_price_currency_positions * amount;\n\n    // returns an object which has actual value of deductable amount in EUR, USD and GBP\n    const convertObject = await convertFiat(\n      deductable_value,\n      \"EUR\",\n      date_of_purchase,\n      triggerAlert\n    );\n\n    // actual value of deductable amount is turned into negative\n    for (let [key, value] of Object.entries(convertObject)) {\n      convertObject[key] = value * -1;\n    }\n    // sets content of convertObject which is the negtive value of deductable amount for attributes EUR, USD and GBP to the formData Object\n    formData = Object.assign(formData, convertObject);\n\n    // amount is beeing turned into negative so the corresponding position has a negative amount property\n    formData.amount = parseFloat(formData.amount) * -1;\n\n    await makePosition(formData);\n\n    // sets form fields back to blank\n    setFormData({\n      crypto_currency: \"\",\n      amount: \"\",\n      date_of_purchase: \"\",\n    });\n\n    // reloads user object which is now updated with the deductable position\n    loadUserObj();\n  };\n\n  return (\n    <div className=\"form_container\">\n      <h3 className=\"large text-primary\">Deduct Crypto</h3>\n      <p className=\"lead\">Deduct cryptocurrency from your portfolio</p>\n      <form className=\"form\" onSubmit={(e) => onSubmit(e)}>\n        <div className=\"form-group\">\n          <div className=\"dropdown input_field\">\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n              }}\n            >\n              <div>Select a cryptocurrency</div>\n              <select\n                className=\"btn btn-outline-secondary\"\n                name=\"crypto_currency\"\n                style={{ position: \"absolute\", right: \"0\", width: \"50%\" }}\n                onChange={(e) => onChange(e)}\n              >\n                {currencyNames.map((currencyName) => {\n                  return (\n                    <option value={`${currencyName}`}>{currencyName}</option>\n                  );\n                })}\n              </select>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"form-group\">\n          <input\n            className=\"form-control input_field\"\n            type=\"number\"\n            placeholder=\"Amount\"\n            name=\"amount\"\n            value={amount}\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n\n        {/* <div className=\"input-group input_field\">\n          <input\n            className=\"form-control\"\n            type=\"number\"\n            min=\"1\"\n            step=\"any\"\n            placeholder=\"Value of amount\"\n            name=\"price\"\n            value={price}\n            onChange={(e) => onChange(e)}\n            required\n          />\n          <div className=\"input-group-append\">\n            <select\n              id=\"deduct_select_fiat\"\n              className=\"btn btn-outline-secondary\"\n            >\n              <option value=\"EUR\">EUR</option>\n              <option value=\"USD\">USD</option>\n            </select>\n          </div>\n        </div> */}\n\n        <div className=\"form-group\">\n          <input\n            className=\"form-control input_field\"\n            type=\"date\"\n            name=\"date_of_purchase\"\n            value={date_of_purchase}\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Deduct\" />\n      </form>\n    </div>\n  );\n};\n\nexport default DeductCrypto;\n","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/navbar/AccountIcon.js",["186"],"import React, { Fragment } from \"react\";\nimport Menu from \"./Menu\";\n\nconst AccountIcon = ({ logout, logedin }) => {\n  return (\n    <div id=\"account_nav_item\">\n      account\n      <div id=\"menu\">\n        <Menu logout={logout} logedin={logedin} />\n      </div>\n    </div>\n  );\n};\n\nexport default AccountIcon;\n","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/auxiliary/auxiliaryCryptoData.js",["187","188","189","190"],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/actions/user.js",[],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/charts/TotalChart.js",["191"],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/auth/Register.js",["192","193"],"import React, { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\n\nconst Register = ({ logedin, register }) => {\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n    password2: \"\",\n  });\n\n  const { firstname, lastname, email, password, password2 } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    register(email, password, password2);\n  };\n\n  // if some nasty user enters .../login in url --> redirect to landing page\n  // otherwhise the register form could be displayed to a logged in user\n  if (logedin) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <div className=\"form_container\">\n      <h3 className=\"large text-primary\">Sign Up</h3>\n      <p className=\"lead\">\n        <i className=\"fa fa-user auth_fa-user\"></i> Create your account\n      </p>\n      <form className=\"form\" onSubmit={(e) => onSubmit(e)}>\n        <div className=\"form-group\">\n          <input\n            className=\"form-control input_field\"\n            type=\"email\"\n            placeholder=\"Email Address\"\n            name=\"email\"\n            value={email}\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            className=\"form-control input_field\"\n            type=\"password\"\n            placeholder=\"Password\"\n            name=\"password\"\n            value={password}\n            onChange={(e) => onChange(e)}\n            minLength=\"6\"\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            className=\"form-control input_field\"\n            type=\"password\"\n            placeholder=\"Confirm Password\"\n            name=\"password2\"\n            value={password2}\n            onChange={(e) => onChange(e)}\n            minLength=\"6\"\n            required\n          />\n        </div>\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\n      </form>\n      <p className=\"my-1\">\n        Already have an account? <Link to=\"/login\">Sign In</Link>\n      </p>\n    </div>\n  );\n};\n\nexport default Register;\n","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/overview/Overview.js",["194","195","196","197"],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/navbar/Navbar.js",[],["198","199"],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/App.js",["200","201"],"import React, { Fragment, useState, useEffect, useRef } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport { createPosition } from \"./actions/positions\";\nimport { getCurrenciesNames } from \"./auxiliary/auxiliaryCryptoData\";\nimport { getLatestCryptoData } from \"./actions/currencies\";\nimport { loadUser } from \"./auxiliary/auxiliaryUserData\";\nimport { signin } from \"./auxiliary/auxiliaryUserData\";\nimport { signout } from \"./auxiliary/auxiliaryUserData\";\nimport { signup } from \"./auxiliary/auxiliaryUserData\";\nimport { getFiatExchangeRates } from \"./actions/currencies\";\nimport { getCurrentDate } from \"./auxiliary/auxiliaryDateData\";\n\nimport Navbar from \"./components/navbar/Navbar\";\nimport Landing from \"./components/layout/Landing\";\nimport Login from \"./components/auth/Login\";\nimport Register from \"./components/auth/Register\";\n\nimport AddCrypto from \"./components/input/AddCrypto\";\nimport DeductCrypto from \"./components/input/DeductCrypto\";\n\nimport Position from \"./components/positions/Position\";\nimport PositionChart from \"./components/positions/PositionChart\";\n\nimport Alert from \"./components/layout/Alert\";\n\nimport \"./App.css\";\n\nconst App = () => {\n  const [user, setUser] = useState({});\n\n  const [logedin, setLogedin] = useState(false);\n\n  const [alert, setAlert] = useState({});\n\n  const [cryptoCurrencies, setCryptoCurrencies] = useState({});\n\n  const [exchangeRates, setExchangeRate] = useState({});\n\n  const fiat = useRef(\"EUR\");\n\n  const fiatSymbol = useRef(\"€\");\n\n  useEffect(() => {\n    loadUserObj();\n  }, []);\n\n  useEffect(() => {\n    updateCryptoCurrenciesState();\n    updateExchangeRateState();\n  }, [logedin]);\n\n  const updateCryptoCurrenciesState = async () => {\n    if (logedin) {\n      const currencyNames = getCurrenciesNames(user);\n\n      setInterval(() => {\n        update();\n      }, 120000);\n\n      const update = async () => {\n        const crypto = await getLatestCryptoData(currencyNames, fiat.current);\n        if (crypto instanceof Error) {\n          // triggerAlert(\"Something went wrong\", \"danger\");\n          triggerAlert(crypto.message, \"danger\");\n        } else {\n          setCryptoCurrencies(crypto);\n        }\n      };\n\n      update();\n    }\n  };\n\n  const updateExchangeRateState = async () => {\n    const date = getCurrentDate();\n\n    const exchangeObj = await getFiatExchangeRates(date);\n\n    if (exchangeObj instanceof Error) {\n      triggerAlert(exchangeObj.message, \"danger\");\n    } else {\n      setExchangeRate(exchangeObj);\n    }\n  };\n\n  const setFiatCurrency = (e) => {\n    fiat.current = e.target.value;\n\n    switch (e.target.value) {\n      case \"EUR\":\n        fiatSymbol.current = \"€\";\n        break;\n      case \"USD\":\n        fiatSymbol.current = \"$\";\n        break;\n      default:\n    }\n\n    updateCryptoCurrenciesState();\n  };\n\n  const makePosition = async (formData) => {\n    const position = await createPosition(formData);\n    if (position instanceof Error) {\n      triggerAlert(position.response.data.errors.msg, \"danger\");\n    } else {\n      position.data.amount < 0\n        ? triggerAlert(\"Amount deducted\", \"success\")\n        : triggerAlert(\"Position added\", \"success\");\n      setUser({ ...user.positions.unshift(position.data) });\n      updateCryptoCurrenciesState();\n    }\n  };\n\n  const login = async (email, password) => {\n    const token = await signin(email, password);\n    if (token instanceof Error) {\n      triggerAlert(token.response.data.errors.msg, \"danger\");\n    } else {\n      loadUserObj();\n    }\n  };\n\n  const loadUserObj = async () => {\n    const userObj = await loadUser();\n    if (userObj instanceof Error) {\n      triggerAlert(userObj.response.data.errors.msg, \"danger\");\n      return;\n    } else if (userObj) {\n      setUser(userObj);\n      setLogedin(true);\n    }\n  };\n\n  const logout = () => {\n    signout();\n    setUser({});\n    setLogedin(false);\n  };\n\n  const register = (email, password, password2) => {\n    const token = signup(email, password, password2);\n    if (token instanceof Error) {\n      triggerAlert(token.response.data.errors.msg, \"danger\");\n    } else {\n      loadUser();\n    }\n  };\n\n  const triggerAlert = (msg, alertType) => {\n    setAlert({\n      message: msg,\n      type: alertType,\n    });\n    setTimeout(() => setAlert({}), 20000);\n  };\n\n  const removeAlert = () => setAlert({});\n\n  return (\n    <Router>\n      <Fragment>\n        <Navbar\n          logout={logout}\n          logedin={logedin}\n          setFiatCurrency={setFiatCurrency}\n        />\n        <Alert alert={alert} removeAlert={removeAlert} />\n        <Switch>\n          {logedin && (\n            <Route\n              exact\n              path=\"/\"\n              render={() => (\n                <Landing\n                  user={user}\n                  cryptoCurrencies={cryptoCurrencies}\n                  exchangeRates={exchangeRates}\n                  logedin={logedin}\n                  fiat={fiat}\n                  fiatSymbol={fiatSymbol}\n                  triggerAlert={triggerAlert}\n                />\n              )}\n            />\n          )}\n          <Route exact path=\"/position\" render={() => <Position />} />\n          <Route\n            exact\n            path=\"/position_chart\"\n            render={() => <PositionChart />}\n          />\n\n          <Route\n            exact\n            path=\"/login\"\n            render={() => <Login login={login} logedin={logedin} />}\n          />\n          <Route\n            exact\n            path=\"/register\"\n            render={() => <Register register={register} logedin={logedin} />}\n          />\n          {logedin && (\n            <Route\n              exact\n              path=\"/add_crypto\"\n              render={() => (\n                <AddCrypto\n                  makePosition={makePosition}\n                  loadUserObj={loadUserObj}\n                  triggerAlert={triggerAlert}\n                />\n              )}\n            />\n          )}\n\n          {logedin && (\n            <Route\n              exact\n              path=\"/deduct_crypto\"\n              render={() => (\n                <DeductCrypto\n                  makePosition={makePosition}\n                  loadUserObj={loadUserObj}\n                  triggerAlert={triggerAlert}\n                  user={user}\n                />\n              )}\n            />\n          )}\n        </Switch>\n      </Fragment>\n    </Router>\n  );\n};\n\nexport default App;\n","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/actions/auth.js",[],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/charts/SparkLine.js",["202"],"import React, { useState, useEffect } from \"react\";\nimport SparkLineCharts from \"./SparkLineCharts\";\nimport { getAmount } from \"../../auxiliary/auxiliaryCryptoData\";\n\nconst SparkLine = ({ user, cryptoCurrencies, currencyName }) => {\n  const [sparkLineData, setSparkLineData] = useState([]);\n\n  useEffect(() => {\n    getSparkLineData();\n  }, [cryptoCurrencies]);\n\n  const getSparkLineData = () => {\n    // not all 7d price arrays as returned by the api have the same length --> this results in the last values of the calculated total price array being too low\n    // this makes sure that all the indivual currency arrays from which totals are beeing calculated have the same length\n    // (which corresponds with the length of the shortest array)\n    // console.log(\"user\");\n    // console.log(user);\n    // console.log(\"cryptoCurrencies\");\n    // console.log(cryptoCurrencies);\n\n    if (\n      Object.keys(cryptoCurrencies).length > 0 &&\n      cryptoCurrencies.data.length > 0\n    ) {\n      let lengthArr = [];\n\n      // gets lenghts of 7d price array\n      cryptoCurrencies.data.forEach((obj, index) => {\n        lengthArr[index] = obj.sparkline_in_7d.price.length;\n      });\n\n      // get length of shortest 7d price array\n      const minLength = Math.min(...lengthArr);\n\n      // get length of longest 7d price array\n      const maxLength = Math.max(...lengthArr);\n\n      // sets array sparkLineCurrentValues to length of longest 7d price array\n      let sparkLineCurrentValues = new Array(maxLength).fill(0);\n\n      if (Object.keys(cryptoCurrencies).length > 0) {\n        cryptoCurrencies.data.forEach((obj) => {\n          // individual currency\n          if (currencyName) {\n            if (obj.id === currencyName) {\n              obj.sparkline_in_7d.price.forEach((price, index) => {\n                sparkLineCurrentValues[index] +=\n                  price * getAmount(user, obj.id);\n              });\n            }\n            // total\n          } else {\n            obj.sparkline_in_7d.price.forEach((price, index) => {\n              sparkLineCurrentValues[index] += price * getAmount(user, obj.id);\n            });\n          }\n        });\n\n        // sets result array of sparkline value to the length of the shortes 7d price array\n        sparkLineCurrentValues.length = minLength;\n\n        setSparkLineData(sparkLineCurrentValues);\n      }\n    }\n  };\n\n  const getX_axisArray = () => {\n    let Xaxis = [];\n    if (sparkLineData) {\n      Xaxis = new Array(sparkLineData.length).fill(\"\");\n    }\n    return Xaxis;\n  };\n\n  const checkLineColor = () => {\n    if (sparkLineData) {\n      return sparkLineData[sparkLineData.length - 1] - sparkLineData[0] > 0\n        ? \"green\"\n        : \"red\";\n    }\n  };\n\n  return (\n    <div style={{ width: \"10rem\" }}>\n      <SparkLineCharts\n        sparkLineData={sparkLineData}\n        getX_axisArray={getX_axisArray}\n        checkLineColor={checkLineColor}\n      />\n    </div>\n  );\n};\n\nexport default SparkLine;\n","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/charts/SparkLineCharts.js",[],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/navbar/Fiat.js",[],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/auxiliary/auxiliaryDateData.js",[],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/auxiliary/auxiliaryFiatData.js",[],{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","severity":1,"message":"208","line":47,"column":6,"nodeType":"209","endLine":47,"endColumn":37,"suggestions":"210"},{"ruleId":"207","severity":1,"message":"211","line":51,"column":6,"nodeType":"209","endLine":51,"endColumn":20,"suggestions":"212"},{"ruleId":"207","severity":1,"message":"213","line":43,"column":6,"nodeType":"209","endLine":43,"endColumn":8,"suggestions":"214"},{"ruleId":"215","severity":1,"message":"216","line":88,"column":43,"nodeType":"217","messageId":"218","endLine":88,"endColumn":45},{"ruleId":"219","severity":1,"message":"220","line":89,"column":19,"nodeType":"221","messageId":"222","endLine":89,"endColumn":22},{"ruleId":"207","severity":1,"message":"223","line":138,"column":6,"nodeType":"209","endLine":138,"endColumn":47,"suggestions":"224"},{"ruleId":"207","severity":1,"message":"225","line":14,"column":6,"nodeType":"209","endLine":14,"endColumn":17,"suggestions":"226"},{"ruleId":"203","replacedBy":"227"},{"ruleId":"205","replacedBy":"228"},{"ruleId":"203","replacedBy":"229"},{"ruleId":"205","replacedBy":"230"},{"ruleId":"203","replacedBy":"231"},{"ruleId":"205","replacedBy":"232"},{"ruleId":"233","severity":1,"message":"234","line":194,"column":11,"nodeType":"235","endLine":194,"endColumn":28},{"ruleId":"203","replacedBy":"236"},{"ruleId":"205","replacedBy":"237"},{"ruleId":"203","replacedBy":"238"},{"ruleId":"205","replacedBy":"239"},{"ruleId":"207","severity":1,"message":"240","line":21,"column":6,"nodeType":"209","endLine":21,"endColumn":8,"suggestions":"241"},{"ruleId":"207","severity":1,"message":"242","line":35,"column":6,"nodeType":"209","endLine":35,"endColumn":25,"suggestions":"243"},{"ruleId":"207","severity":1,"message":"211","line":39,"column":6,"nodeType":"209","endLine":39,"endColumn":20,"suggestions":"244"},{"ruleId":"245","severity":1,"message":"246","line":10,"column":28,"nodeType":"247","messageId":"248","endLine":10,"endColumn":30},{"ruleId":"207","severity":1,"message":"249","line":13,"column":6,"nodeType":"209","endLine":13,"endColumn":8,"suggestions":"250"},{"ruleId":"203","replacedBy":"251"},{"ruleId":"205","replacedBy":"252"},{"ruleId":"207","severity":1,"message":"253","line":24,"column":6,"nodeType":"209","endLine":24,"endColumn":8,"suggestions":"254"},{"ruleId":"219","severity":1,"message":"255","line":1,"column":17,"nodeType":"221","messageId":"222","endLine":1,"endColumn":25},{"ruleId":"215","severity":1,"message":"216","line":61,"column":35,"nodeType":"217","messageId":"218","endLine":61,"endColumn":37},{"ruleId":"256","severity":1,"message":"257","line":97,"column":29,"nodeType":"258","messageId":"259","endLine":97,"endColumn":45},{"ruleId":"256","severity":1,"message":"260","line":104,"column":29,"nodeType":"258","messageId":"259","endLine":104,"endColumn":45},{"ruleId":"215","severity":1,"message":"216","line":179,"column":33,"nodeType":"217","messageId":"218","endLine":179,"endColumn":35},{"ruleId":"207","severity":1,"message":"261","line":21,"column":6,"nodeType":"209","endLine":21,"endColumn":26,"suggestions":"262"},{"ruleId":"219","severity":1,"message":"263","line":11,"column":11,"nodeType":"221","messageId":"222","endLine":11,"endColumn":20},{"ruleId":"219","severity":1,"message":"264","line":11,"column":22,"nodeType":"221","messageId":"222","endLine":11,"endColumn":30},{"ruleId":"207","severity":1,"message":"265","line":46,"column":6,"nodeType":"209","endLine":46,"endColumn":55,"suggestions":"266"},{"ruleId":"215","severity":1,"message":"216","line":55,"column":71,"nodeType":"217","messageId":"218","endLine":55,"endColumn":73},{"ruleId":"207","severity":1,"message":"267","line":59,"column":6,"nodeType":"209","endLine":59,"endColumn":25,"suggestions":"268"},{"ruleId":"207","severity":1,"message":"269","line":68,"column":6,"nodeType":"209","endLine":68,"endColumn":20,"suggestions":"270"},{"ruleId":"203","replacedBy":"271"},{"ruleId":"205","replacedBy":"272"},{"ruleId":"207","severity":1,"message":"273","line":46,"column":6,"nodeType":"209","endLine":46,"endColumn":8,"suggestions":"274"},{"ruleId":"207","severity":1,"message":"275","line":51,"column":6,"nodeType":"209","endLine":51,"endColumn":15,"suggestions":"276"},{"ruleId":"207","severity":1,"message":"277","line":10,"column":6,"nodeType":"209","endLine":10,"endColumn":24,"suggestions":"278"},"no-native-reassign",["279"],"no-negated-in-lhs",["280"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fiat', 'prevCurrentValues', and 'prevFiat'. Either include them or remove the dependency array.","ArrayExpression",["281"],"React Hook useEffect has a missing dependency: 'calcChange'. Either include it or remove the dependency array. Mutable values like 'fiat.current' aren't valid dependencies because mutating them doesn't re-render the component.",["282"],"React Hook useEffect has missing dependencies: 'fiat' and 'origin'. Either include them or remove the dependency array. If 'setLabelStr' needs the current value of 'fiat', you can also switch to useReducer instead of useState and read 'fiat' in the reducer.",["283"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'key' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'currency', 'fiat', and 'positions'. Either include them or remove the dependency array.",["284"],"React Hook useEffect has missing dependencies: 'get24hMax' and 'get24hMin'. Either include them or remove the dependency array.",["285"],["279"],["280"],["279"],["280"],["279"],["280"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["279"],["280"],["279"],["280"],"React Hook useEffect has missing dependencies: 'data.state.currency' and 'data.state.date_of_purchase'. Either include them or remove the dependency array.",["286"],"React Hook useEffect has missing dependencies: 'fiat', 'prevCurrentValueTotal', and 'prevFiat'. Either include them or remove the dependency array.",["287"],["288"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'data.current_price'. Either include it or remove the dependency array.",["289"],["279"],["280"],"React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["290"],"'Fragment' is defined but never used.","no-self-assign","'sort[element][1]' is assigned to itself.","MemberExpression","selfAssignment","'sort[element][2]' is assigned to itself.","React Hook useEffect has missing dependencies: 'duration', 'logedin', and 'upDateMarketChartState'. Either include them or remove the dependency array. Mutable values like 'fiat.current' aren't valid dependencies because mutating them doesn't re-render the component.",["291"],"'firstname' is assigned a value but never used.","'lastname' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getInitialValuePurchase'. Either include it or remove the dependency array.",["292"],"React Hook useEffect has missing dependencies: 'cryptoCurrencies', 'currencyNamesAndCurrentValues', and 'user'. Either include them or remove the dependency array.",["293"],"React Hook useEffect has a missing dependency: 'fiat'. Either include it or remove the dependency array. Mutable values like 'fiat.current' aren't valid dependencies because mutating them doesn't re-render the component.",["294"],["279"],["280"],"React Hook useEffect has a missing dependency: 'loadUserObj'. Either include it or remove the dependency array.",["295"],"React Hook useEffect has missing dependencies: 'updateCryptoCurrenciesState' and 'updateExchangeRateState'. Either include them or remove the dependency array.",["296"],"React Hook useEffect has a missing dependency: 'getSparkLineData'. Either include it or remove the dependency array.",["297"],"no-global-assign","no-unsafe-negation",{"desc":"298","fix":"299"},{"desc":"300","fix":"301"},{"desc":"302","fix":"303"},{"desc":"304","fix":"305"},{"desc":"306","fix":"307"},{"desc":"308","fix":"309"},{"desc":"310","fix":"311"},{"desc":"300","fix":"312"},{"desc":"313","fix":"314"},{"desc":"315","fix":"316"},{"desc":"317","fix":"318"},{"desc":"319","fix":"320"},{"desc":"321","fix":"322"},{"desc":"323","fix":"324"},{"desc":"325","fix":"326"},{"desc":"327","fix":"328"},{"desc":"329","fix":"330"},"Update the dependencies array to be: [currencyNamesAndCurrentValues, fiat, prevCurrentValues, prevFiat]",{"range":"331","text":"332"},"Update the dependencies array to be: [calcChange]",{"range":"333","text":"334"},"Update the dependencies array to be: [fiat, origin]",{"range":"335","text":"336"},"Update the dependencies array to be: [nameArray, currentMarketChart, duration, currency, positions, fiat]",{"range":"337","text":"338"},"Update the dependencies array to be: [dataArray, get24hMax, get24hMin]",{"range":"339","text":"340"},"Update the dependencies array to be: [data.state.currency, data.state.date_of_purchase]",{"range":"341","text":"342"},"Update the dependencies array to be: [currentValueTotal, fiat, prevCurrentValueTotal, prevFiat]",{"range":"343","text":"344"},{"range":"345","text":"334"},"Update the dependencies array to be: [data.current_price]",{"range":"346","text":"347"},"Update the dependencies array to be: [user]",{"range":"348","text":"349"},"Update the dependencies array to be: [user, logedin, upDateMarketChartState, duration]",{"range":"350","text":"351"},"Update the dependencies array to be: [user, cryptoCurrencies, logedin, renderOverview, getInitialValuePurchase]",{"range":"352","text":"353"},"Update the dependencies array to be: [cryptoCurrencies, currencyNamesAndCurrentValues, currentValueTotal, user]",{"range":"354","text":"355"},"Update the dependencies array to be: [fiat]",{"range":"356","text":"357"},"Update the dependencies array to be: [loadUserObj]",{"range":"358","text":"359"},"Update the dependencies array to be: [logedin, updateCryptoCurrenciesState, updateExchangeRateState]",{"range":"360","text":"361"},"Update the dependencies array to be: [cryptoCurrencies, getSparkLineData]",{"range":"362","text":"363"},[1597,1628],"[currencyNamesAndCurrentValues, fiat, prevCurrentValues, prevFiat]",[1675,1689],"[calcChange]",[1148,1150],"[fiat, origin]",[5043,5084],"[nameArray, currentMarketChart, duration, currency, positions, fiat]",[568,579],"[dataArray, get24hMax, get24hMin]",[590,592],"[data.state.currency, data.state.date_of_purchase]",[1147,1166],"[currentValueTotal, fiat, prevCurrentValueTotal, prevFiat]",[1213,1227],[423,425],"[data.current_price]",[848,850],"[user]",[464,484],"[user, logedin, upDateMarketChartState, duration]",[1305,1354],"[user, cryptoCurrencies, logedin, renderOverview, getInitialValuePurchase]",[1820,1839],"[cryptoCurrencies, currencyNamesAndCurrentValues, currentValueTotal, user]",[2094,2108],"[fiat]",[1574,1576],"[loadUserObj]",[1671,1680],"[logedin, updateCryptoCurrenciesState, updateExchangeRateState]",[341,359],"[cryptoCurrencies, getSparkLineData]"]