[{"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/overview/Twenty4hChangeInvestmentTotal.js":"1","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/overview/OverviewCurrencies.js":"2","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/overview/Twenty4hChangeByCurrency.js":"3","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/charts/TotalChartDiagramm.js":"4","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/index.js":"5","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/auxiliary/auxiliaryUserData.js":"6","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/layout/Landing.js":"7","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/layout/Alert.js":"8","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/auth/Login.js":"9","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/input/AddCrypto.js":"10","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/positions/PositionChart.js":"11","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/positions/PositionChartDiagram.js":"12","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/utils/setAuthToken.js":"13","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/navbar/Menu.js":"14","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/overview/OverviewTotal.js":"15","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/overview/Twenty4hChangeInvestmentByCurrencies.js":"16","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/actions/currencies.js":"17","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/actions/positions.js":"18","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/input/DeductCrypto.js":"19","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/navbar/AccountIcon.js":"20","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/auxiliary/auxiliaryCryptoData.js":"21","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/actions/user.js":"22","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/charts/TotalChart.js":"23","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/auth/Register.js":"24","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/overview/Overview.js":"25","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/navbar/Navbar.js":"26","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/App.js":"27","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/actions/auth.js":"28","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/charts/SparkLine.js":"29","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/charts/SparkLineCharts.js":"30","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/navbar/Fiat.js":"31","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/auxiliary/auxiliaryDateData.js":"32","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/auxiliary/auxiliaryFiatData.js":"33","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/charts/ChangeMinMax.js":"34","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/layout/CurrencyLogos.js":"35","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/positions/PositionsByCurrency.js":"36","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/layout/RemoveCryptoQuery.js":"37"},{"size":508,"mtime":1610834986464,"results":"38","hashOfConfig":"39"},{"size":8349,"mtime":1611533382675,"results":"40","hashOfConfig":"39"},{"size":1565,"mtime":1611173535328,"results":"41","hashOfConfig":"39"},{"size":7207,"mtime":1611175265853,"results":"42","hashOfConfig":"39"},{"size":197,"mtime":1609170003662,"results":"43","hashOfConfig":"39"},{"size":641,"mtime":1609170003658,"results":"44","hashOfConfig":"39"},{"size":7700,"mtime":1611534345200,"results":"45","hashOfConfig":"39"},{"size":304,"mtime":1609170003658,"results":"46","hashOfConfig":"39"},{"size":1764,"mtime":1609170003658,"results":"47","hashOfConfig":"39"},{"size":5442,"mtime":1611537662037,"results":"48","hashOfConfig":"39"},{"size":947,"mtime":1609170003662,"results":"49","hashOfConfig":"39"},{"size":1026,"mtime":1609170003662,"results":"50","hashOfConfig":"39"},{"size":453,"mtime":1609170003662,"results":"51","hashOfConfig":"39"},{"size":745,"mtime":1609170003658,"results":"52","hashOfConfig":"39"},{"size":4478,"mtime":1611265677030,"results":"53","hashOfConfig":"39"},{"size":1785,"mtime":1610834901540,"results":"54","hashOfConfig":"39"},{"size":4866,"mtime":1611100607046,"results":"55","hashOfConfig":"39"},{"size":505,"mtime":1611417954959,"results":"56","hashOfConfig":"39"},{"size":6288,"mtime":1611537729537,"results":"57","hashOfConfig":"39"},{"size":307,"mtime":1609170003658,"results":"58","hashOfConfig":"39"},{"size":6706,"mtime":1611524178627,"results":"59","hashOfConfig":"39"},{"size":433,"mtime":1609170003658,"results":"60","hashOfConfig":"39"},{"size":2575,"mtime":1611274500344,"results":"61","hashOfConfig":"39"},{"size":2232,"mtime":1610814403131,"results":"62","hashOfConfig":"39"},{"size":5156,"mtime":1611533496267,"results":"63","hashOfConfig":"39"},{"size":1068,"mtime":1610403873911,"results":"64","hashOfConfig":"39"},{"size":7585,"mtime":1611524968787,"results":"65","hashOfConfig":"39"},{"size":957,"mtime":1609170003658,"results":"66","hashOfConfig":"39"},{"size":2953,"mtime":1610555375921,"results":"67","hashOfConfig":"39"},{"size":1070,"mtime":1610396805951,"results":"68","hashOfConfig":"39"},{"size":349,"mtime":1610403881087,"results":"69","hashOfConfig":"39"},{"size":288,"mtime":1610667840005,"results":"70","hashOfConfig":"39"},{"size":1319,"mtime":1610827508225,"results":"71","hashOfConfig":"39"},{"size":1466,"mtime":1611158442168,"results":"72","hashOfConfig":"39"},{"size":1130,"mtime":1611524184591,"results":"73","hashOfConfig":"39"},{"size":4439,"mtime":1611356623413,"results":"74","hashOfConfig":"39"},{"size":1613,"mtime":1611518629441,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"1m2r51w",{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"78"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"78"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"98"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"78"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"78"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"153"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"83"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/overview/Twenty4hChangeInvestmentTotal.js",[],["172","173"],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/overview/OverviewCurrencies.js",["174","175"],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/overview/Twenty4hChangeByCurrency.js",[],["176","177"],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/charts/TotalChartDiagramm.js",["178","179","180","181","182","183"],"import React, { Fragment, useState, useEffect } from \"react\";\n// import ChangeMinMax from \"./ChangeMinMax\";\nimport { Line } from \"react-chartjs-2\";\nimport { cumulativeValueInvestment } from \"../../auxiliary/auxiliaryCryptoData\";\n\nconst TotalChartDiagramm = ({\n  positions,\n  currentMarketChart,\n  fiat,\n  originAndCurrency,\n  duration,\n  updateResultArrayState,\n}) => {\n  // console.log(currentMarketChart);\n  const [nameArray, setNameArray] = useState(\"\");\n\n  const [labelStr, setLabelStr] = useState(\"\");\n\n  const [resultArray, setResultArray] = useState([]);\n\n  const [timeStampArray, setTimeStampArray] = useState([]);\n\n  const [origin, currency] = originAndCurrency;\n\n  useEffect(() => {\n    console.log(\"useEffect\");\n    switch (origin) {\n      case \"initial_value\":\n        setNameArray(\"initialValueArray\");\n        // setLabelStr(`Value of ${currency} in ${fiat.current}`);\n        break;\n      case \"current_value\":\n        setNameArray(\"currentValueArray\");\n        // setLabelStr(`Value of ${currency} in ${fiat.current}`);\n        break;\n      case \"balance\":\n        setNameArray(\"balanceArray\");\n        // setLabelStr(`Value of ${currency} in ${fiat.current}`);\n        break;\n      case \"roi\":\n        setNameArray(\"roiArray\");\n        // setLabelStr(`ROI in %`);\n        break;\n      default:\n    }\n  }, []);\n\n  useEffect(() => {\n    origin === \"roi\"\n      ? setLabelStr(`ROI in %`)\n      : setLabelStr(\n          `Value of ${\n            currency === \"all_currencies\"\n              ? \"this portfolio\"\n              : currency.split(\"_\")[0]\n          } in ${fiat.current}`\n        );\n  }, [fiat.current]);\n\n  useEffect(() => {\n    const currenciesTotalObjectsArray = [];\n\n    const timeStamps = [];\n\n    let currencyArr = [];\n\n    currency === \"all_currencies\"\n      ? (currencyArr = Object.keys(currentMarketChart))\n      : currencyArr.push(currency);\n\n    // the following 2 functions push objects with initialValueArray, currentValueArray, balanceArray, roiArray and timeStampArray for every currency\n    // in currenciesTotalObjectsArray\n    const totalValueInvestment = (obj) => {\n      currenciesTotalObjectsArray.push(obj);\n    };\n\n    currencyArr.forEach((currency) => {\n      // console.log(currency);\n      totalValueInvestment(\n        cumulativeValueInvestment(\n          positions,\n          currentMarketChart[currency],\n          currency,\n          fiat\n        )\n      );\n    });\n\n    // console.log(currency);\n\n    // not all currency price arrays as returned by the api have the same length --> this results in the last values of the calculated total price array being too low\n    // this makes sure that all the indivual currency arrays from which totals are beeing calculated have the same length\n    // (which corresponds with the length of the shortest array)\n    let lengthArr = [];\n\n    // puts length of each array in object in array\n    currenciesTotalObjectsArray.forEach(\n      (obj, index) => (lengthArr[index] = obj.initialValueArray.length)\n    );\n\n    // gets the shortest array length\n    const minLength = Math.min(...lengthArr);\n\n    // sets length of arrays in object to the shortest length\n    currenciesTotalObjectsArray.map((obj) => {\n      for (const [key, value] of Object.entries(obj)) {\n        value.length = minLength;\n      }\n    });\n\n    // retrieves timeStamps from array of objects with initialValueArray, currentValueArray, balanceArray, roiArray and timeStampArray for every currency\n    // those objects are beeing created in cumulativeValueInvestment() @auxiliaryCryptoData.js\n    // some of these arrays contain empty slots (for details see comments in cumulativeValueInvestment() in @auxiliaryCryptoData.js)\n    // those have to be removed, else the line diagrams display a lot of null values at the beginning\n    // hence filter is employed\n    currency !== \"all_currencies\"\n      ? currenciesTotalObjectsArray.forEach((obj) => {\n          const filtered = obj.timeStampArray.filter((el) => el !== undefined);\n          filtered.forEach((el, index) => (timeStamps[index] = el));\n        })\n      : // if total is to be displayed the above causes problems so in that case no filter is employed\n        currenciesTotalObjectsArray.forEach((obj) => {\n          obj.timeStampArray.forEach((el, index) => (timeStamps[index] = el));\n        });\n\n    // the following code sums up initial_value, current_value, balance of every individual currency so that the totals of these attributes can be displayed in a chart\n    // it also calculates the development of roi over time\n    const resArray = new Array(timeStamps.length).fill(0);\n\n    if (nameArray) {\n      const initValResArray = new Array(timeStamps.length).fill(0);\n      const currValResArray = new Array(timeStamps.length).fill(0);\n\n      currenciesTotalObjectsArray.forEach((obj) => {\n        if (nameArray === \"roiArray\") {\n          obj.initialValueArray.forEach((el, index) => {\n            initValResArray[index] += el;\n          });\n          obj.currentValueArray.forEach(\n            (el, index) => (currValResArray[index] += el)\n          );\n          obj.roiArray.forEach(\n            (el, index) =>\n              (resArray[index] =\n                (currValResArray[index] * 100) / initValResArray[index] - 100)\n          );\n        } else {\n          if (currency === \"all_currencies\") {\n            obj[nameArray].forEach((el, index) => (resArray[index] += el));\n          } else {\n            // this removes undefined elements from arrays (why are there undefined elements in some arrays? see explanation above for empty slots in timeStampArray)\n            const filtered = obj[nameArray].filter((el) => el !== undefined);\n            filtered.forEach((el, index) => (resArray[index] += el));\n          }\n        }\n      });\n    }\n    setResultArray(resArray);\n    setTimeStampArray(timeStamps);\n\n    updateResultArrayState(resArray);\n  }, [nameArray, currentMarketChart, duration]);\n\n  const getUnit = () => {\n    switch (duration) {\n      case \"day\":\n        return \"hour\";\n      case \"week\":\n        return \"day\";\n      case \"month\":\n        return \"week\";\n      case \"all\":\n        return \"month\";\n    }\n  };\n\n  return (\n    <Fragment>\n      <div>\n        <Line\n          data={{\n            labels: timeStampArray,\n            datasets: [\n              {\n                label: labelStr,\n                data: resultArray,\n              },\n            ],\n          }}\n          // width={500}\n          height={500}\n          options={{\n            maintainAspectRatio: false,\n            scales: {\n              yAxes: [\n                {\n                  scaleLabel: {\n                    display: true,\n                    labelString: labelStr,\n                  },\n                },\n              ],\n              xAxes: [\n                {\n                  type: \"time\",\n                  time: {\n                    unit: getUnit(),\n                    displayFormats: {\n                      quarter: \"MMM YYYY\",\n                    },\n                    distribution: \"series\",\n                  },\n                },\n              ],\n            },\n          }}\n        />\n      </div>\n    </Fragment>\n  );\n};\n\nexport default TotalChartDiagramm;\n","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/index.js",[],["184","185"],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/auxiliary/auxiliaryUserData.js",[],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/layout/Landing.js",["186","187"],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/layout/Alert.js",[],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/auth/Login.js",[],["188","189"],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/input/AddCrypto.js",[],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/positions/PositionChart.js",["190"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { getMarketCharts } from \"../../actions/currencies\";\nimport PositionChartDiagram from \"./PositionChartDiagram\";\n\nconst PositionChart = () => {\n  let data = useLocation();\n\n  const [marketChart, setMarketChart] = useState({});\n\n  useEffect(() => {\n    const updateStates = async () => {\n      const chartData = await getMarketCharts(\n        data.state.currency,\n        data.state.date_of_purchase\n      );\n      setMarketChart(chartData);\n    };\n\n    updateStates();\n  }, []);\n\n  function isEmpty(obj) {\n    return Object.keys(obj).length === 0;\n  }\n\n  return isEmpty(marketChart) ? (\n    <div>Loading ...</div>\n  ) : (\n    <div>\n      <Fragment>\n        <PositionChartDiagram\n          marketChart={marketChart}\n          amount={data.state.amount}\n        />\n      </Fragment>\n    </div>\n  );\n};\n\nexport default PositionChart;\n",["191","192"],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/positions/PositionChartDiagram.js",[],["193","194"],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/utils/setAuthToken.js",[],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/navbar/Menu.js",[],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/overview/OverviewTotal.js",["195","196"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SparkLine from \"../charts/SparkLine\";\nimport Twenty4hChangeInvestmentTotal from \"./Twenty4hChangeInvestmentTotal\";\nimport CurrencyLogos from \"../layout/CurrencyLogos\";\n\nconst OverviewTotal = ({\n  user,\n  cryptoCurrencies,\n  exchangeRates,\n  totalPurchase,\n  currentValueTotal,\n  prevCurrentValueTotal,\n  fiat,\n  prevFiat,\n  fiatSymbol,\n  get24hourChangeTotal,\n  handleClick,\n}) => {\n  // both hooks are neccessary to persist change currentValueTotal so it survives re mounting of this component\n  const [currentValueTotalChange, setCurrentValueTotalChange] = useState(\n    sessionStorage.getItem(\"change\")\n  );\n\n  useEffect(() => {\n    // makes sure that change current total is not re - calculated when user switches fiat\n    if (fiat.current === prevFiat.current) {\n      const change = (\n        currentValueTotal - prevCurrentValueTotal.current\n      ).toFixed(2);\n      // makes sure that session storage and state are only updated if it is not a re mount\n      if (!isNaN(change) && prevCurrentValueTotal.current !== 0) {\n        sessionStorage.setItem(\"change\", change);\n        setCurrentValueTotalChange(change);\n      }\n    }\n  }, [currentValueTotal]);\n\n  useEffect(() => {\n    calcChange();\n  }, [fiat.current]);\n\n  // converts change current total into the selected fiat\n  const calcChange = async () => {\n    // switch from EUR to USD\n    if (fiat.current === \"USD\" && prevFiat.current === \"EUR\") {\n      if (exchangeRates.data) {\n        setCurrentValueTotalChange(\n          (currentValueTotalChange * exchangeRates.data.rates.USD).toFixed(2)\n        );\n      }\n    }\n\n    // switch from USD to EUR\n    if (fiat.current === \"EUR\" && prevFiat.current === \"USD\") {\n      if (exchangeRates.data) {\n        setCurrentValueTotalChange(\n          (\n            currentValueTotalChange *\n            (1 / exchangeRates.data.rates.USD)\n          ).toFixed(2)\n        );\n      }\n    }\n  };\n\n  return (\n    <tr id=\"overview_total\">\n      {/* currencys and logos*/}\n      <Link\n        to={{\n          pathname: \"/position\",\n          // current_price: totalPurchase.toFixed(2),\n          state: {\n            currency: \"all_currencies\",\n            user: user,\n          },\n        }}\n      >\n        <td>\n          {\" \"}\n          <div style={{ display: \"flex\", justifyContent: \"start\" }}>\n            <CurrencyLogos\n              cryptoCurrencies={cryptoCurrencies}\n              currency={\"all_currencies\"}\n              origin={\"OverviewTotal\"}\n            />\n          </div>\n        </td>\n      </Link>\n\n      <td></td>\n\n      {/* initial value */}\n      <td\n        className=\"clickable\"\n        onClick={() => handleClick(\"initial_value\", \"all_currencies\")}\n      >\n        {totalPurchase.toFixed(2)} {fiatSymbol.current}\n      </td>\n\n      {/* current value */}\n      <td\n        className=\"clickable\"\n        onClick={() => handleClick(\"current_value\", \"all_currencies\")}\n      >\n        <div className=\"change_container\">\n          <div>\n            {currentValueTotal.toFixed(2)} {fiatSymbol.current}\n          </div>\n          <div\n            className=\"change_value\"\n            style={{\n              color: currentValueTotalChange >= 0 ? \"green\" : \"red\",\n            }}\n          >\n            {currentValueTotalChange && currentValueTotalChange !== 0\n              ? currentValueTotalChange\n              : 0}{\" \"}\n            {fiatSymbol.current}\n          </div>\n        </div>\n\n        <Twenty4hChangeInvestmentTotal\n          get24hourChangeTotal={get24hourChangeTotal}\n          fiatSymbol={fiatSymbol}\n        />\n      </td>\n\n      {/* profit */}\n      <td\n        className=\"clickable\"\n        onClick={() => handleClick(\"balance\", \"all_currencies\")}\n      >\n        {(currentValueTotal - totalPurchase).toFixed(2)} {fiatSymbol.current}\n      </td>\n\n      {/* roi */}\n      <td\n        className=\"clickable\"\n        onClick={() => handleClick(\"roi\", \"all_currencies\")}\n      >\n        <div className=\"x_container\">\n          <div>\n            {((currentValueTotal * 100) / totalPurchase - 100).toFixed(0)}%\n          </div>\n          <div className=\"x_value\">\n            ({(currentValueTotal / totalPurchase).toFixed(1)}\n            x)\n          </div>\n        </div>\n      </td>\n\n      {/* sparkline */}\n      <td>\n        <SparkLine user={user} cryptoCurrencies={cryptoCurrencies} />\n      </td>\n    </tr>\n  );\n};\n\nexport default OverviewTotal;\n",["197","198"],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/overview/Twenty4hChangeInvestmentByCurrencies.js",[],["199","200"],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/actions/currencies.js",[],["201","202"],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/actions/positions.js",[],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/input/DeductCrypto.js",["203","204"],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/navbar/AccountIcon.js",["205"],"import React, { Fragment } from \"react\";\nimport Menu from \"./Menu\";\n\nconst AccountIcon = ({ logout, logedin }) => {\n  return (\n    <div id=\"account_nav_item\">\n      account\n      <div id=\"menu\">\n        <Menu logout={logout} logedin={logedin} />\n      </div>\n    </div>\n  );\n};\n\nexport default AccountIcon;\n","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/auxiliary/auxiliaryCryptoData.js",["206","207","208","209","210"],"export const getCurrenciesNames = (user) => {\n  let currencyArr = [];\n  if (user && user.positions) {\n    user.positions.map((position) =>\n      currencyArr.push(position.crypto_currency)\n    );\n  }\n\n  // techsith's recommended way to remove duplicates from array (https://www.youtube.com/watch?v=dvPybpgk5Y4)\n  return [...new Set(currencyArr)];\n};\n\nexport const getNamesAndCurrentValues = (user, cryptoCurrencies) => {\n  let namesAndValuesObj = {};\n\n  getCurrenciesNames(user).forEach((currencyName) => {\n    namesAndValuesObj[currencyName] = getCurrentValue(\n      user,\n      cryptoCurrencies,\n      currencyName\n    );\n  });\n\n  let res = Object.entries(namesAndValuesObj).sort(function (a, b) {\n    return b[1] - a[1];\n  });\n\n  return res;\n};\n\nexport const getCurrentValue = (user, cryptoCurrencies, currencyName) => {\n  const currentPrice = getCurrentPrice(cryptoCurrencies, currencyName);\n  const amount = getAmount(user, currencyName);\n  const currentValue = currentPrice * amount;\n\n  return currentValue;\n};\n\nexport const getCurrentPrice = (cryptoCurrencies, currencyName) => {\n  if (cryptoCurrencies.data && typeof currencyName === \"string\") {\n    const currentPrice = cryptoCurrencies.data.find(\n      (el) => el.id === currencyName\n    );\n\n    if (currentPrice) return currentPrice.current_price;\n  }\n};\n\nexport const getCurrencyPositions = (user, currencyName) => {\n  if (user.positions) {\n    return user.positions.filter(\n      (position) => position.crypto_currency === currencyName\n    );\n  }\n};\n\nexport const getAmount = (user, currencyName) => {\n  let sum = 0;\n  if (user.positions) {\n    user.positions.map((position) => {\n      if (position.crypto_currency === currencyName) {\n        sum += parseFloat(position.amount);\n      }\n    });\n  }\n\n  return sum;\n};\n\nconst getAmountAndDate = (positions, currencyName, fiat) => {\n  // extracts amount of coins, date of purchase and price\n  let AmountAndDateArr = [];\n\n  positions.forEach((el) => {\n    let arrEl = [];\n\n    // currencyName has a \"_fiat\" attached to it which has to be removed so the conditional can work\n    if (el.crypto_currency === currencyName.split(\"_\")[0]) {\n      // console.log(currencyName);\n      arrEl[0] = Date.parse(el.date_of_purchase);\n      arrEl[1] = parseFloat(el.amount);\n      arrEl[2] = el[`price_${fiat.current}`];\n      AmountAndDateArr.push(arrEl);\n    }\n  });\n\n  // sorts AmountAndDateArr by purchase date beginning with the oldest\n  let sort = AmountAndDateArr.sort(function (a, b) {\n    return a[0] - b[0];\n  });\n\n  // adds amount of coins in array so that each amount is the sum of itself + the previous amount\n  for (const element in sort) {\n    element > 0\n      ? (sort[element][1] = sort[element][1] + sort[element - 1][1])\n      : (sort[element][1] = sort[element][1]);\n  }\n\n  // adds price of individual purchases so that each price in array is the sum of itself + the previous amount\n  for (const element in sort) {\n    element > 0\n      ? (sort[element][2] = sort[element][2] + sort[element - 1][2])\n      : (sort[element][2] = sort[element][2]);\n  }\n  return sort;\n};\n\n// returns object (one for each currency) which has various arrays (initialValueArray, currentValueArray etc..)\n// those arrays that are beeing used to display the whole duration from first purchase until present time have all the same length even if a currency had been purchased later\n// if that is the case, an equivalent amount of positions at the beginning of those arrays are undefined\nexport const cumulativeValueInvestment = (\n  positions,\n  marketChart,\n  currency,\n  fiat\n) => {\n  let resultObject = {};\n  let initialValueArr = [];\n  let currentValueArr = [];\n  let balanceArr = [];\n  let roiArr = [];\n  let timeStampArr = [];\n\n  // 1st array: getAmountAndDate() returns array with amount, price and date of purchase for each position of a crypro currency\n  // 2nd array: marketChart is array of objects -> each object has initialValueArray, currentValueArray, balanceArray etc. ..\n  if (marketChart) {\n    // console.log(marketChart);\n    getAmountAndDate(positions, currency, fiat).forEach(\n      ([date_of_purchase, amount, initial_value]) => {\n        marketChart.forEach(([date, price_crypto, timeStamp], index) => {\n          if (date_of_purchase <= date) {\n            currentValueArr[index] = price_crypto * amount;\n            timeStampArr[index] = getTimeStamps(marketChart, index, [\n              date,\n              price_crypto,\n              timeStamp,\n            ]);\n            // timeStampArr[index] = marketChart[index][0];\n            initialValueArr[index] = initial_value;\n            balanceArr[index] = currentValueArr[index] - initialValueArr[index];\n            roiArr[index] =\n              (currentValueArr[index] * 100) / initialValueArr[index] - 100;\n          }\n        });\n      }\n    );\n  }\n\n  resultObject.initialValueArray = initialValueArr;\n  resultObject.currentValueArray = currentValueArr;\n  resultObject.balanceArray = balanceArr;\n  resultObject.roiArray = roiArr;\n  resultObject.timeStampArray = timeStampArr;\n\n  return resultObject;\n};\n\n// returns duration in days -> from date of first purchase currency until now\n// duration is beeing used in conditional to make sure that x-axis doesn't have too many timestamps (granularity of data returned by API)\nconst checkDuration = (marketChart) =>\n  (marketChart[marketChart.length - 1][0] - marketChart[0][0]) /\n  1000 /\n  (24 * 60 * 60);\n\nconst getTimeStamps = (marketChart, index, array2) => {\n  // if (\n  //   index === 0 || checkDuration(marketChart) < 90\n  //     ? index % 10 === 0\n  //     : index % 5 === 0\n  // ) {\n  //   return array2[2];\n  // } else {\n  //   return \" \";\n  // }\n  return array2[2];\n};\n\nexport const getInitialValue = (user, currency, fiat) => {\n  let sum = 0;\n  user.positions.map((position) => {\n    if (position.crypto_currency === currency) {\n      sum += position[`price_${fiat.current}`];\n    }\n  });\n  return sum;\n};\n\nexport const getImage = (cryptoCurrencies, currencyName) => {\n  let url = \"\";\n  if (Object.keys(cryptoCurrencies).length > 0)\n    cryptoCurrencies.data.forEach((obj) => {\n      if (obj.id === currencyName) url = obj.image;\n    });\n  return url;\n};\n\nexport const getAbbrevation = (cryptoCurrencies, currencyName) => {\n  let abb = \"\";\n  if (Object.keys(cryptoCurrencies).length > 0) {\n    cryptoCurrencies.data.forEach((obj) => {\n      if (obj.id === currencyName) {\n        abb = obj.symbol;\n      }\n    });\n\n    return abb;\n  }\n};\n\nexport const getInitialValuePurchase = (user, fiat) => {\n  // console.log(fiat);\n  let sum = 0;\n  if (user && user.positions)\n    user.positions.forEach((position) => {\n      sum += position[`price_${fiat.current}`];\n    });\n  return sum;\n};\n","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/actions/user.js",[],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/charts/TotalChart.js",["211","212"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport TotalChartDiagramm from \"./TotalChartDiagramm\";\nimport ChangeMinMax from \"./ChangeMinMax\";\nimport CurrencyLogos from \"../layout/CurrencyLogos\";\n\nconst TotalChart = ({\n  user,\n  cryptoCurrencies,\n  currentMarketChart,\n  toggleView,\n  originAndCurrency,\n  loaded,\n  upDateMarketChartState,\n  logedin,\n  fiat,\n  fiatSymbol,\n}) => {\n  const [duration, setDuration] = useState(\"all\");\n\n  useEffect(() => {\n    if (logedin) upDateMarketChartState(duration);\n    // console.log(\"useEffect\");\n  }, [user, fiat.current]);\n\n  const handleClick = (e) => {\n    setDuration(e.target.innerHTML);\n    upDateMarketChartState(e.target.innerHTML);\n    // console.log(e.target.innerHTML);\n    // console.log(duration);\n  };\n\n  const [resultArray, setResultArray] = useState([]);\n\n  const updateResultArrayState = (arr) => setResultArray(arr);\n\n  const [origin, currency] = originAndCurrency;\n\n  // console.log(currency);\n\n  return !loaded ? (\n    <div>Loading ...</div>\n  ) : (\n    <Fragment>\n      <div id=\"toggle_view_charts\" onClick={toggleView}>\n        <i class=\"fas fa-angle-double-left\"></i> back to overview\n      </div>\n      <CurrencyLogos cryptoCurrencies={cryptoCurrencies} currency={currency} />\n      <ChangeMinMax dataArray={resultArray} fiatSymbol={fiatSymbol} />\n      <div id=\"total_chart_container\">\n        <div id=\"durations_container\">\n          <div\n            id={duration === \"day\" && \"duration\"}\n            className=\"durations\"\n            onClick={(e) => handleClick(e)}\n          >\n            day\n          </div>\n          <div\n            id={duration === \"week\" && \"duration\"}\n            className=\"durations\"\n            onClick={(e) => handleClick(e)}\n          >\n            week\n          </div>\n          <div\n            id={duration === \"month\" && \"duration\"}\n            className=\"durations\"\n            onClick={(e) => handleClick(e)}\n          >\n            month\n          </div>\n          <div\n            id={duration === \"all\" && \"duration\"}\n            className=\"durations\"\n            onClick={(e) => handleClick(e)}\n          >\n            all\n          </div>\n        </div>\n        <div>\n          <TotalChartDiagramm\n            currentMarketChart={currentMarketChart}\n            positions={user.positions}\n            fiat={fiat}\n            originAndCurrency={originAndCurrency}\n            duration={duration}\n            updateResultArrayState={updateResultArrayState}\n          />\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default TotalChart;\n",["213","214"],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/auth/Register.js",["215","216"],"import React, { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\n\nconst Register = ({ logedin, register }) => {\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n    password2: \"\",\n  });\n\n  const { firstname, lastname, email, password, password2 } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    register(email, password, password2);\n  };\n\n  // if some nasty user enters .../login in url --> redirect to landing page\n  // otherwhise the register form could be displayed to a logged in user\n  if (logedin) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <div className=\"form_container\">\n      <h3 className=\"large text-primary\">Sign Up</h3>\n      <p className=\"lead\">\n        <i className=\"fa fa-user auth_fa-user\"></i> Create your account\n      </p>\n      <form className=\"form\" onSubmit={(e) => onSubmit(e)}>\n        <div className=\"form-group\">\n          <input\n            className=\"form-control input_field\"\n            type=\"email\"\n            placeholder=\"Email Address\"\n            name=\"email\"\n            value={email}\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            className=\"form-control input_field\"\n            type=\"password\"\n            placeholder=\"Password\"\n            name=\"password\"\n            value={password}\n            onChange={(e) => onChange(e)}\n            minLength=\"6\"\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            className=\"form-control input_field\"\n            type=\"password\"\n            placeholder=\"Confirm Password\"\n            name=\"password2\"\n            value={password2}\n            onChange={(e) => onChange(e)}\n            minLength=\"6\"\n            required\n          />\n        </div>\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\n      </form>\n      <p className=\"my-1\">\n        Already have an account? <Link to=\"/login\">Sign In</Link>\n      </p>\n    </div>\n  );\n};\n\nexport default Register;\n","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/overview/Overview.js",["217","218","219","220"],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/navbar/Navbar.js",[],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/App.js",["221","222"],"import React, { Fragment, useState, useEffect, useRef } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport { createPosition } from \"./actions/positions\";\nimport { getCurrenciesNames } from \"./auxiliary/auxiliaryCryptoData\";\nimport { getLatestCryptoData } from \"./actions/currencies\";\nimport { loadUser } from \"./auxiliary/auxiliaryUserData\";\nimport { signin } from \"./auxiliary/auxiliaryUserData\";\nimport { signout } from \"./auxiliary/auxiliaryUserData\";\nimport { signup } from \"./auxiliary/auxiliaryUserData\";\nimport { getFiatExchangeRates } from \"./actions/currencies\";\nimport { getCurrentDate } from \"./auxiliary/auxiliaryDateData\";\n\nimport Navbar from \"./components/navbar/Navbar\";\nimport Landing from \"./components/layout/Landing\";\nimport Login from \"./components/auth/Login\";\nimport Register from \"./components/auth/Register\";\n\nimport AddCrypto from \"./components/input/AddCrypto\";\nimport DeductCrypto from \"./components/input/DeductCrypto\";\n\nimport PositionsByCurrency from \"./components/positions/PositionsByCurrency\";\n// import PositionChart from \"./components/positions/PositionChart\";\n\nimport Alert from \"./components/layout/Alert\";\n\nimport \"./App.css\";\n\nconst updateCryptoCurrenciesState = async (\n  logedin,\n  fiat,\n  triggerAlert,\n  setCryptoCurrencies,\n  setCurrencyNames\n) => {\n  if (logedin) {\n    setInterval(() => {\n      update();\n    }, 120000);\n\n    const update = async () => {\n      const userObj = await loadUser();\n\n      const currencyNames = getCurrenciesNames(userObj);\n\n      setCurrencyNames(currencyNames);\n\n      const crypto = await getLatestCryptoData(currencyNames, fiat.current);\n      if (crypto instanceof Error) {\n        // triggerAlert(\"Something went wrong\", \"danger\");\n        triggerAlert(crypto.message, \"danger\");\n      } else {\n        setCryptoCurrencies(crypto);\n      }\n    };\n\n    update();\n  }\n};\n\nconst App = () => {\n  const [user, setUser] = useState({});\n\n  const [logedin, setLogedin] = useState(false);\n\n  const [alert, setAlert] = useState({});\n\n  const [cryptoCurrencies, setCryptoCurrencies] = useState({});\n\n  const [exchangeRates, setExchangeRate] = useState({});\n\n  const [currencyNames, setCurrencyNames] = useState([]);\n\n  const fiat = useRef(\"EUR\");\n\n  const fiatSymbol = useRef(\"€\");\n\n  useEffect(() => {\n    loadUserObj();\n  }, []);\n\n  useEffect(() => {\n    updateCryptoCurrenciesState(\n      logedin,\n      fiat,\n      triggerAlert,\n      setCryptoCurrencies,\n      setCurrencyNames\n    );\n    updateExchangeRateState();\n  }, [logedin]);\n\n  const updateExchangeRateState = async () => {\n    const date = getCurrentDate();\n\n    const exchangeObj = await getFiatExchangeRates(date);\n\n    if (exchangeObj instanceof Error) {\n      triggerAlert(exchangeObj.message, \"danger\");\n    } else {\n      setExchangeRate(exchangeObj);\n    }\n  };\n\n  const setFiatCurrency = (e) => {\n    fiat.current = e.target.value;\n\n    switch (e.target.value) {\n      case \"EUR\":\n        fiatSymbol.current = \"€\";\n        break;\n      case \"USD\":\n        fiatSymbol.current = \"$\";\n        break;\n      default:\n    }\n\n    updateCryptoCurrenciesState(\n      logedin,\n      fiat,\n      triggerAlert,\n      setCryptoCurrencies,\n      setCurrencyNames\n    );\n  };\n\n  const makePosition = async (formData) => {\n    const position = await createPosition(formData);\n    if (position instanceof Error) {\n      triggerAlert(position.response.data.errors.msg, \"danger\");\n    } else {\n      position.data.amount < 0\n        ? triggerAlert(\"Amount deducted\", \"success\")\n        : triggerAlert(\"Position added\", \"success\");\n      setUser({ ...user.positions.unshift(position.data) });\n      updateCryptoCurrenciesState(\n        logedin,\n        fiat,\n        triggerAlert,\n        setCryptoCurrencies,\n        setCurrencyNames\n      );\n    }\n  };\n\n  const login = async (email, password) => {\n    const token = await signin(email, password);\n    if (token instanceof Error) {\n      triggerAlert(token.response.data.errors.msg, \"danger\");\n    } else {\n      loadUserObj();\n    }\n  };\n\n  const loadUserObj = async () => {\n    const userObj = await loadUser();\n    if (userObj instanceof Error) {\n      triggerAlert(userObj.response.data.errors.msg, \"danger\");\n      return;\n    } else if (userObj) {\n      setUser(userObj);\n      setLogedin(true);\n    }\n  };\n\n  const logout = () => {\n    signout();\n    setUser({});\n    setLogedin(false);\n  };\n\n  const register = (email, password, password2) => {\n    const token = signup(email, password, password2);\n    if (token instanceof Error) {\n      triggerAlert(token.response.data.errors.msg, \"danger\");\n    } else {\n      loadUser();\n    }\n  };\n\n  const triggerAlert = (msg, alertType) => {\n    setAlert({\n      message: msg,\n      type: alertType,\n    });\n    setTimeout(() => setAlert({}), 20000);\n  };\n\n  const removeAlert = () => setAlert({});\n\n  return (\n    <Router>\n      <Fragment>\n        <Navbar\n          logout={logout}\n          logedin={logedin}\n          setFiatCurrency={setFiatCurrency}\n        />\n        <Alert alert={alert} removeAlert={removeAlert} />\n        {!logedin && (\n          <div className=\"provisional_user_info\">\n            <div> You are currently loged out. Log in or sign up.</div>\n          </div>\n        )}\n        <Switch>\n          {logedin && (\n            <Route\n              exact\n              path=\"/\"\n              render={() => (\n                <Landing\n                  user={user}\n                  cryptoCurrencies={cryptoCurrencies}\n                  exchangeRates={exchangeRates}\n                  logedin={logedin}\n                  fiat={fiat}\n                  fiatSymbol={fiatSymbol}\n                  triggerAlert={triggerAlert}\n                />\n              )}\n            />\n          )}\n          <Route\n            exact\n            path=\"/position\"\n            render={() => (\n              <PositionsByCurrency\n                cryptoCurrencies={cryptoCurrencies}\n                fiat={fiat}\n                fiatSymbol={fiatSymbol}\n              />\n            )}\n          />\n\n          <Route\n            exact\n            path=\"/login\"\n            render={() => <Login login={login} logedin={logedin} />}\n          />\n          <Route\n            exact\n            path=\"/register\"\n            render={() => <Register register={register} logedin={logedin} />}\n          />\n          {logedin && (\n            <Route\n              exact\n              path=\"/add_crypto\"\n              render={() => (\n                <AddCrypto\n                  fiat={fiat}\n                  logedin={logedin}\n                  makePosition={makePosition}\n                  loadUserObj={loadUserObj}\n                  updateCryptoCurrenciesState={updateCryptoCurrenciesState}\n                  triggerAlert={triggerAlert}\n                  setCryptoCurrencies={setCryptoCurrencies}\n                  setCurrencyNames={setCurrencyNames}\n                />\n              )}\n            />\n          )}\n\n          {logedin && (\n            <Route\n              exact\n              path=\"/deduct_crypto\"\n              render={() => (\n                <DeductCrypto\n                  user={user}\n                  currencyNames={currencyNames}\n                  makePosition={makePosition}\n                  loadUserObj={loadUserObj}\n                  triggerAlert={triggerAlert}\n                  setUser={setUser}\n                  setCurrencyNames={setCurrencyNames}\n                />\n              )}\n            />\n          )}\n        </Switch>\n      </Fragment>\n    </Router>\n  );\n};\n\nexport default App;\n","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/actions/auth.js",[],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/charts/SparkLine.js",["223"],"import React, { useState, useEffect } from \"react\";\nimport SparkLineCharts from \"./SparkLineCharts\";\nimport { getAmount } from \"../../auxiliary/auxiliaryCryptoData\";\n\nconst SparkLine = ({ user, cryptoCurrencies, currencyName }) => {\n  const [sparkLineData, setSparkLineData] = useState([]);\n\n  useEffect(() => {\n    getSparkLineData();\n  }, [cryptoCurrencies]);\n\n  const getSparkLineData = () => {\n    // not all 7d price arrays as returned by the api have the same length --> this results in the last values of the calculated total price array being too low\n    // this makes sure that all the indivual currency arrays from which totals are beeing calculated have the same length\n    // (which corresponds with the length of the shortest array)\n    // console.log(\"user\");\n    // console.log(user);\n    // console.log(\"cryptoCurrencies\");\n    // console.log(cryptoCurrencies);\n\n    if (\n      Object.keys(cryptoCurrencies).length > 0 &&\n      cryptoCurrencies.data.length > 0\n    ) {\n      let lengthArr = [];\n\n      // gets lenghts of 7d price array\n      cryptoCurrencies.data.forEach((obj, index) => {\n        lengthArr[index] = obj.sparkline_in_7d.price.length;\n      });\n\n      // get length of shortest 7d price array\n      const minLength = Math.min(...lengthArr);\n\n      // get length of longest 7d price array\n      const maxLength = Math.max(...lengthArr);\n\n      // sets array sparkLineCurrentValues to length of longest 7d price array\n      let sparkLineCurrentValues = new Array(maxLength).fill(0);\n\n      if (Object.keys(cryptoCurrencies).length > 0) {\n        cryptoCurrencies.data.forEach((obj) => {\n          // individual currency\n          if (currencyName) {\n            if (obj.id === currencyName) {\n              obj.sparkline_in_7d.price.forEach((price, index) => {\n                sparkLineCurrentValues[index] +=\n                  price * getAmount(user, obj.id);\n              });\n            }\n            // total\n          } else {\n            obj.sparkline_in_7d.price.forEach((price, index) => {\n              sparkLineCurrentValues[index] += price * getAmount(user, obj.id);\n            });\n          }\n        });\n\n        // sets result array of sparkline value to the length of the shortes 7d price array\n        sparkLineCurrentValues.length = minLength;\n\n        setSparkLineData(sparkLineCurrentValues);\n      }\n    }\n  };\n\n  const getX_axisArray = () => {\n    let Xaxis = [];\n    if (sparkLineData) {\n      Xaxis = new Array(sparkLineData.length).fill(\"\");\n    }\n    return Xaxis;\n  };\n\n  const checkLineColor = () => {\n    if (sparkLineData) {\n      return sparkLineData[sparkLineData.length - 1] - sparkLineData[0] > 0\n        ? \"green\"\n        : \"red\";\n    }\n  };\n\n  return (\n    <div style={{ width: \"10rem\" }}>\n      <SparkLineCharts\n        sparkLineData={sparkLineData}\n        getX_axisArray={getX_axisArray}\n        checkLineColor={checkLineColor}\n      />\n    </div>\n  );\n};\n\nexport default SparkLine;\n",["224","225"],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/charts/SparkLineCharts.js",[],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/navbar/Fiat.js",[],["226","227"],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/auxiliary/auxiliaryDateData.js",[],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/auxiliary/auxiliaryFiatData.js",[],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/charts/ChangeMinMax.js",["228"],"import React, { useState, useEffect } from \"react\";\n\nconst ChangeMinMax = ({ dataArray, fiatSymbol }) => {\n  const [change, setChange] = useState(0);\n  const [twentyFourHoursMax, setTwentyFourHoursMax] = useState(0);\n  const [twentyFourHoursMin, setTwentyFourHoursMin] = useState(0);\n\n  useEffect(() => {\n    // array has NaN in the end which have to be removed because else change = NaN\n    const arr = dataArray.filter((el) => !isNaN(el));\n    setChange(dataArray[arr.length - 1] - arr[0]);\n    setTwentyFourHoursMax(get24hMax());\n    setTwentyFourHoursMin(get24hMin());\n  }, [dataArray]);\n\n  const get24hMax = () => {\n    const arraySorted = dataArray.sort(function (a, b) {\n      return b - a;\n    });\n\n    return arraySorted[0];\n  };\n\n  const get24hMin = () => {\n    const arrSorted = dataArray.sort(function (a, b) {\n      return a - b;\n    });\n\n    return arrSorted[0];\n  };\n\n  return (\n    <div id=\"change_min_max_charts_container\">\n      <div\n        style={{\n          color: change > 0 ? \"green\" : \"red\",\n        }}\n      >\n        change: {change.toFixed(2)} {fiatSymbol.current}\n      </div>\n      <div className=\"crypto_24h_change\">\n        max: {twentyFourHoursMax && twentyFourHoursMax.toFixed(2)}{\" \"}\n        {fiatSymbol.current}\n      </div>\n      <div className=\"crypto_24h_change\">\n        min: {twentyFourHoursMin && twentyFourHoursMin.toFixed(2)}{\" \"}\n        {fiatSymbol.current}\n      </div>\n    </div>\n  );\n};\n\nexport default ChangeMinMax;\n","/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/layout/CurrencyLogos.js",[],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/positions/PositionsByCurrency.js",[],"/home/theironduke/WEB_DEV/OWN_PROJECTS/crypto_currency_investment_portfolio_viewer/frontend/src/components/layout/RemoveCryptoQuery.js",[],{"ruleId":"229","replacedBy":"230"},{"ruleId":"231","replacedBy":"232"},{"ruleId":"233","severity":1,"message":"234","line":49,"column":6,"nodeType":"235","endLine":49,"endColumn":37,"suggestions":"236"},{"ruleId":"233","severity":1,"message":"237","line":53,"column":6,"nodeType":"235","endLine":53,"endColumn":20,"suggestions":"238"},{"ruleId":"229","replacedBy":"239"},{"ruleId":"231","replacedBy":"240"},{"ruleId":"233","severity":1,"message":"241","line":46,"column":6,"nodeType":"235","endLine":46,"endColumn":8,"suggestions":"242"},{"ruleId":"233","severity":1,"message":"243","line":58,"column":6,"nodeType":"235","endLine":58,"endColumn":20,"suggestions":"244"},{"ruleId":"245","severity":1,"message":"246","line":105,"column":43,"nodeType":"247","messageId":"248","endLine":105,"endColumn":45},{"ruleId":"249","severity":1,"message":"250","line":106,"column":19,"nodeType":"251","messageId":"252","endLine":106,"endColumn":22},{"ruleId":"233","severity":1,"message":"253","line":162,"column":6,"nodeType":"235","endLine":162,"endColumn":47,"suggestions":"254"},{"ruleId":"255","severity":1,"message":"256","line":165,"column":5,"nodeType":"257","messageId":"258","endLine":174,"endColumn":6},{"ruleId":"229","replacedBy":"259"},{"ruleId":"231","replacedBy":"260"},{"ruleId":"233","severity":1,"message":"243","line":49,"column":6,"nodeType":"235","endLine":49,"endColumn":20,"suggestions":"261"},{"ruleId":"262","severity":1,"message":"263","line":212,"column":11,"nodeType":"264","endLine":212,"endColumn":28},{"ruleId":"229","replacedBy":"265"},{"ruleId":"231","replacedBy":"266"},{"ruleId":"233","severity":1,"message":"267","line":21,"column":6,"nodeType":"235","endLine":21,"endColumn":8,"suggestions":"268"},{"ruleId":"229","replacedBy":"269"},{"ruleId":"231","replacedBy":"270"},{"ruleId":"229","replacedBy":"271"},{"ruleId":"231","replacedBy":"272"},{"ruleId":"233","severity":1,"message":"273","line":37,"column":6,"nodeType":"235","endLine":37,"endColumn":25,"suggestions":"274"},{"ruleId":"233","severity":1,"message":"237","line":41,"column":6,"nodeType":"235","endLine":41,"endColumn":20,"suggestions":"275"},{"ruleId":"229","replacedBy":"276"},{"ruleId":"231","replacedBy":"277"},{"ruleId":"229","replacedBy":"278"},{"ruleId":"231","replacedBy":"279"},{"ruleId":"229","replacedBy":"280"},{"ruleId":"231","replacedBy":"281"},{"ruleId":"249","severity":1,"message":"282","line":1,"column":37,"nodeType":"251","messageId":"252","endLine":1,"endColumn":46},{"ruleId":"249","severity":1,"message":"283","line":5,"column":10,"nodeType":"251","messageId":"252","endLine":5,"endColumn":28},{"ruleId":"249","severity":1,"message":"284","line":1,"column":17,"nodeType":"251","messageId":"252","endLine":1,"endColumn":25},{"ruleId":"245","severity":1,"message":"246","line":60,"column":35,"nodeType":"247","messageId":"248","endLine":60,"endColumn":37},{"ruleId":"285","severity":1,"message":"286","line":96,"column":29,"nodeType":"287","messageId":"288","endLine":96,"endColumn":45},{"ruleId":"285","severity":1,"message":"289","line":103,"column":29,"nodeType":"287","messageId":"288","endLine":103,"endColumn":45},{"ruleId":"249","severity":1,"message":"290","line":160,"column":7,"nodeType":"251","messageId":"252","endLine":160,"endColumn":20},{"ruleId":"245","severity":1,"message":"246","line":180,"column":33,"nodeType":"247","messageId":"248","endLine":180,"endColumn":35},{"ruleId":"233","severity":1,"message":"291","line":23,"column":6,"nodeType":"235","endLine":23,"endColumn":26,"suggestions":"292"},{"ruleId":"249","severity":1,"message":"293","line":36,"column":10,"nodeType":"251","messageId":"252","endLine":36,"endColumn":16},{"ruleId":"229","replacedBy":"294"},{"ruleId":"231","replacedBy":"295"},{"ruleId":"249","severity":1,"message":"296","line":11,"column":11,"nodeType":"251","messageId":"252","endLine":11,"endColumn":20},{"ruleId":"249","severity":1,"message":"297","line":11,"column":22,"nodeType":"251","messageId":"252","endLine":11,"endColumn":30},{"ruleId":"233","severity":1,"message":"298","line":47,"column":6,"nodeType":"235","endLine":47,"endColumn":55,"suggestions":"299"},{"ruleId":"245","severity":1,"message":"246","line":56,"column":71,"nodeType":"247","messageId":"248","endLine":56,"endColumn":73},{"ruleId":"233","severity":1,"message":"300","line":60,"column":6,"nodeType":"235","endLine":60,"endColumn":25,"suggestions":"301"},{"ruleId":"233","severity":1,"message":"302","line":69,"column":6,"nodeType":"235","endLine":69,"endColumn":20,"suggestions":"303"},{"ruleId":"233","severity":1,"message":"304","line":80,"column":6,"nodeType":"235","endLine":80,"endColumn":8,"suggestions":"305"},{"ruleId":"233","severity":1,"message":"306","line":91,"column":6,"nodeType":"235","endLine":91,"endColumn":15,"suggestions":"307"},{"ruleId":"233","severity":1,"message":"308","line":10,"column":6,"nodeType":"235","endLine":10,"endColumn":24,"suggestions":"309"},{"ruleId":"229","replacedBy":"310"},{"ruleId":"231","replacedBy":"311"},{"ruleId":"229","replacedBy":"312"},{"ruleId":"231","replacedBy":"313"},{"ruleId":"233","severity":1,"message":"314","line":14,"column":6,"nodeType":"235","endLine":14,"endColumn":17,"suggestions":"315"},"no-native-reassign",["316"],"no-negated-in-lhs",["317"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fiat', 'prevCurrentValues', and 'prevFiat'. Either include them or remove the dependency array.","ArrayExpression",["318"],"React Hook useEffect has a missing dependency: 'calcChange'. Either include it or remove the dependency array. Mutable values like 'fiat.current' aren't valid dependencies because mutating them doesn't re-render the component.",["319"],["316"],["317"],"React Hook useEffect has a missing dependency: 'origin'. Either include it or remove the dependency array.",["320"],"React Hook useEffect has missing dependencies: 'currency', 'fiat', and 'origin'. Either include them or remove the dependency array. Mutable values like 'fiat.current' aren't valid dependencies because mutating them doesn't re-render the component.",["321"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'key' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'currency', 'fiat', 'positions', and 'updateResultArrayState'. Either include them or remove the dependency array. If 'updateResultArrayState' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["322"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["316"],["317"],["323"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["316"],["317"],"React Hook useEffect has missing dependencies: 'data.state.currency' and 'data.state.date_of_purchase'. Either include them or remove the dependency array.",["324"],["316"],["317"],["316"],["317"],"React Hook useEffect has missing dependencies: 'fiat', 'prevCurrentValueTotal', and 'prevFiat'. Either include them or remove the dependency array.",["325"],["326"],["316"],["317"],["316"],["317"],["316"],["317"],"'useEffect' is defined but never used.","'getCurrenciesNames' is defined but never used.","'Fragment' is defined but never used.","no-self-assign","'sort[element][1]' is assigned to itself.","MemberExpression","selfAssignment","'sort[element][2]' is assigned to itself.","'checkDuration' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'duration', 'logedin', and 'upDateMarketChartState'. Either include them or remove the dependency array. Mutable values like 'fiat.current' aren't valid dependencies because mutating them doesn't re-render the component.",["327"],"'origin' is assigned a value but never used.",["316"],["317"],"'firstname' is assigned a value but never used.","'lastname' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fiat'. Either include it or remove the dependency array. If 'setTotalPurchase' needs the current value of 'fiat', you can also switch to useReducer instead of useState and read 'fiat' in the reducer.",["328"],"React Hook useEffect has missing dependencies: 'cryptoCurrencies', 'currencyNamesAndCurrentValues', and 'user'. Either include them or remove the dependency array.",["329"],"React Hook useEffect has a missing dependency: 'fiat'. Either include it or remove the dependency array. Mutable values like 'fiat.current' aren't valid dependencies because mutating them doesn't re-render the component.",["330"],"React Hook useEffect has a missing dependency: 'loadUserObj'. Either include it or remove the dependency array.",["331"],"React Hook useEffect has a missing dependency: 'updateExchangeRateState'. Either include it or remove the dependency array.",["332"],"React Hook useEffect has a missing dependency: 'getSparkLineData'. Either include it or remove the dependency array.",["333"],["316"],["317"],["316"],["317"],"React Hook useEffect has missing dependencies: 'get24hMax' and 'get24hMin'. Either include them or remove the dependency array.",["334"],"no-global-assign","no-unsafe-negation",{"desc":"335","fix":"336"},{"desc":"337","fix":"338"},{"desc":"339","fix":"340"},{"desc":"341","fix":"342"},{"desc":"343","fix":"344"},{"desc":"341","fix":"345"},{"desc":"346","fix":"347"},{"desc":"348","fix":"349"},{"desc":"337","fix":"350"},{"desc":"351","fix":"352"},{"desc":"353","fix":"354"},{"desc":"355","fix":"356"},{"desc":"357","fix":"358"},{"desc":"359","fix":"360"},{"desc":"361","fix":"362"},{"desc":"363","fix":"364"},{"desc":"365","fix":"366"},"Update the dependencies array to be: [currencyNamesAndCurrentValues, fiat, prevCurrentValues, prevFiat]",{"range":"367","text":"368"},"Update the dependencies array to be: [calcChange]",{"range":"369","text":"370"},"Update the dependencies array to be: [origin]",{"range":"371","text":"372"},"Update the dependencies array to be: [currency, fiat, origin]",{"range":"373","text":"374"},"Update the dependencies array to be: [nameArray, currentMarketChart, duration, currency, updateResultArrayState, positions, fiat]",{"range":"375","text":"376"},{"range":"377","text":"374"},"Update the dependencies array to be: [data.state.currency, data.state.date_of_purchase]",{"range":"378","text":"379"},"Update the dependencies array to be: [currentValueTotal, fiat, prevCurrentValueTotal, prevFiat]",{"range":"380","text":"381"},{"range":"382","text":"370"},"Update the dependencies array to be: [user, logedin, upDateMarketChartState, duration]",{"range":"383","text":"384"},"Update the dependencies array to be: [user, cryptoCurrencies, logedin, renderOverview, fiat]",{"range":"385","text":"386"},"Update the dependencies array to be: [cryptoCurrencies, currencyNamesAndCurrentValues, currentValueTotal, user]",{"range":"387","text":"388"},"Update the dependencies array to be: [fiat]",{"range":"389","text":"390"},"Update the dependencies array to be: [loadUserObj]",{"range":"391","text":"392"},"Update the dependencies array to be: [logedin, updateExchangeRateState]",{"range":"393","text":"394"},"Update the dependencies array to be: [cryptoCurrencies, getSparkLineData]",{"range":"395","text":"396"},"Update the dependencies array to be: [dataArray, get24hMax, get24hMin]",{"range":"397","text":"398"},[1731,1762],"[currencyNamesAndCurrentValues, fiat, prevCurrentValues, prevFiat]",[1809,1823],"[calcChange]",[1322,1324],"[origin]",[1607,1621],"[currency, fiat, origin]",[5882,5923],"[nameArray, currentMarketChart, duration, currency, updateResultArrayState, positions, fiat]",[1747,1761],[590,592],"[data.state.currency, data.state.date_of_purchase]",[1241,1260],"[currentValueTotal, fiat, prevCurrentValueTotal, prevFiat]",[1307,1321],[559,579],"[user, logedin, upDateMarketChartState, duration]",[1404,1453],"[user, cryptoCurrencies, logedin, renderOverview, fiat]",[1919,1938],"[cryptoCurrencies, currencyNamesAndCurrentValues, currentValueTotal, user]",[2193,2207],"[fiat]",[2343,2345],"[loadUserObj]",[2542,2551],"[logedin, updateExchangeRateState]",[341,359],"[cryptoCurrencies, getSparkLineData]",[578,589],"[dataArray, get24hMax, get24hMin]"]